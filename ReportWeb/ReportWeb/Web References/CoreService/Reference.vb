'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace CoreService
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ServiceSoap", [Namespace]:="http://tempuri.org/"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Object()))>  _
    Partial Public Class Service
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private DashboardPartnerPickupRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DashboardPartnerPickupInquiryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DashboardPartnerPickupUpdateStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DashboardPartnerPickupRequestDMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DashboardPartnerPickupGetSlotOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DashboardPartnerPickupFavoriteAddressInsertOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DashboardPartnerPickupFavoriteAddressUpdateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DashboardPartnerPickupGetRequestAddressOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DashboardPartnerUpdatePickupRequestAddressOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DashboardPartnerUpdateDetailPickupItemsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DashboardPartnerPickupGetDetailReqIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPJBAccountItemListByKeywordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPJBDetailItemListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DashboardPartnerPickupPairAWBPJBOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DashboardPartnerAutoCreatePickupRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DashboardPartnerPickupGetPickupRequestTemplateListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTemplatePickupRequestAddressOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAutoPickupRequestSettingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetAutoPickupRequestSettingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DashboardPartnerTemplateAutoPickupRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DashboardPartnerUploadDOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DashboardPartnerDODownloadTemplateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DashboardPartnerUploadPOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DashboardPartnerPODownloadTemplateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private KurirWilayahAutoPickingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private KurirWilayahAntarTokoListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private KurirWilayahDeleteAntarTokoListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private KurirWilayahPushAntarTokoListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private KurirWilayahAutoJemputTokoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private KurirWilayahJemputTokoListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private KurirWilayahPushJemputTokoListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private KurirWilayahMappingClusterListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private KurirWilayahStatusKendalaPaketOperationCompleted As System.Threading.SendOrPostCallback
        
        Private KurirWilayahPushNotifListInsertOperationCompleted As System.Threading.SendOrPostCallback
        
        Private KurirWilayahPushNotifListPushOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TransactionFileUrlInsertOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TransactionFileUrlDeleteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBlastEmailTemplateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBlastEmailCategoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BlastEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BlastEmailDeleteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RajaOngkir_PopulateRateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RajaOngkir_GetRateResponseOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RajaOngkir_CreateMappingSubdistrictOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RajaOngkir_PopulateDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RajaOngkir_EmailResultOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RajaOngkir_PopulateRate_V2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private RajaOngkir_GetRateResponse_V2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private RajaOngkir_CreateMappingSubdistrict_V2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private RajaOngkir_PopulateData_V2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private RajaOngkirGetConstValueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RajaOngkirGetSubDistrictListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RajaOngkirProsesOverrideOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegSeller_CreatePartnerAccountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegSeller_DigitalAccountAcquisitionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegSeller_ResetPartnerAccountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegSeller_AddEmailRewardSchedulerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegSeller_AddEmailIncentiveSchedulerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegSeller_SendRewardEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegSeller_SendIncentiveEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegSeller_DeleteMailSchedulerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FinUpdateInvoiceTrackNumOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FinUpdateInvoiceExpeditionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NoResiKonsolGetNomorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetToolsStockListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ToolsStockUpdateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetToolsListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetToolsSupplierListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetToolsStockRequestListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ToolsRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetToolsRequestListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ToolsFulfillmentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetToolsAwbGroupListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetToolsListNewOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetToolsHubListNewOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetToolsFulfillmentListNewOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ToolsUpdateNewOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ToolsHubUpdateNewOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ToolsFulfillmentNewOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ToolsCreateAwbOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetToolsAwbGroupAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ToolsAddAwbGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ToolsAddToolsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetToolsListForDdlOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PartnerItemListSpecialCaseOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PartnerItemListProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PartnerItemListHubItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PartnerItemListAllItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PartnerItemListReportCategoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PartnerItemProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LaundryGetDataByOrderNoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFeatureUserAccessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDbInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetReasonRemoveTrackNumInConsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTrackNumInConsListOriOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTrackNumInConsListDstOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTrackNumInConsListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TrackNumInConsRemoveOriOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TrackNumInConsRemoveDstOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TrackNumInConsRemoveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ApprovalListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ApprovalProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MitraShipperGetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MitraShipperSetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MitraServiceGetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CustomTrackNumStockIndomaretStoreOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CustomTrackNumReleaseStockIndomaretStoreOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CustomTrackNumStockIndopaketHubOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExtendSTIPeriodGetCostOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExtendSTIPeriodValidationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExtendSTIPeriodProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StoreDropScheduleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TestGeoCodingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteObsoleteDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private HadiahPromosiGetPromosiOperationCompleted As System.Threading.SendOrPostCallback
        
        Private HadiahPromosiCountTransactionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private HadiahPromosiAssignCouponOperationCompleted As System.Threading.SendOrPostCallback
        
        Private HadiahPromosiSendCouponOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CustomerInputGetCategoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CustomerInputDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckTransactionDeliveryInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateStatusDeliveryInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckUsePinDeliveryInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CaseReOrderGetOrderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CaseReOrderCreateOrderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExpeditionAutoOrderPrintLabelv2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExpeditionAutoOrderPrintLabelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetExpeditionAutoOrderSettingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WHIListAutoOrderExpOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExpeditionAutoOrderInsertTransactionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExpeditionAutoOrderNewTrxOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExpeditionAutoOrderUpdateStatusHDSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExpeditionAutoOrderUpdateStatusRTSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WHOListAutoOrderExpOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExpeditionAutoOrderValidateConsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExpeditionAutoOrderInsertConsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExpeditionAutoOrderNewConsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExpeditionAutoOrderUpdateStatusConsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExpeditionAutoOrderResetHitCountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateHDSDownloadTemplateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateHDSValidateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateHDSProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DashboardPartnerPickupLastDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StationOpenConsProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppCheckErrorConnectionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppUserSingleRegistrationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppUserSingleLoginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppUserForgotPasswordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppUserUpdateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppUserUpdateEmailPhoneOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppUserUpdateSendKeyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppUserUpdateDirectSendKeyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppUserUpdateResendKeyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppUserDeleteEmailOrPhoneSendKeyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppUserDeleteEmailOrPhoneDirectSendKeyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppUserDeleteEmailOrPhoneResendKeyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppUserGetInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppDoorPickupSubDistrictAndPostalCodeListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppDoorPickupDistrictListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppDoorPickupSubDistrictListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppDoorPickupPostalCodeListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppCheckRateGetDistrictOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppCheckRateGetServiceListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppCheckAddInsuranceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppCheckAddTaxOriFTZOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppCheckAddTaxOriFTZV2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppGetSuggestionStoreOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppTrackingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppTrackingMultiAWBOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppTransactionDraftOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppTransactionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppTransactionHistoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppTransactionDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppUserSetProfilePictureOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TestWriteFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TestReadFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppUserGetLabelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppGetOfflineOTPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppGetServiceDescriptionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppUserActivationEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppUserActivationSMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppUserActivationDirectSendEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppUserActivationDirectSendSMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppUserActivationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppUserActivationResendKeyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppGetSuggestionConsigneeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppGetSuggestionShipperOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppExtendSTIPeriodGetCostOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppExtendSTIPeriodValidationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppExtendSTIPeriodProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppConstOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppDailyPostalCodeListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppDigAccIdNonActiveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppSetUserActiveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppPushStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppDoorPickupReminderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppPrintLabelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppGetUserStatisticOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppUnsubscribeEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebAppSubscribeEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CrmTrackingHistoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SellerIdamanRegistrationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SellerIdamanRegistrationValidateKeyColumnsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SellerIdaman_FinishedAccountNotificationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SellerIdamanGetInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WHOMonitorDCROperationCompleted As System.Threading.SendOrPostCallback
        
        Private MonitorConsByDestinationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PrintTrackNumUploadOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TrackNumUploadListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TrackNumUploadQueueArvConOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TrackNumUploadProcessArvConOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TrackNumUploadEmailArvConOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PrintLabelUploadOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PrintLabelUploadAtOriOperationCompleted As System.Threading.SendOrPostCallback
        
        Private HubAccountPickupListGetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private HubAccountPickupListSetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DashboardHubAccountListGetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DashboardHubAccountListSetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetHubAccountListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SuratTugasKurirIPPGetStoreOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SuratTugasKurirIPPGetAWBListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SuratTugasKurirIPPProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SuratTugasKurirIPPValidateKeyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MissRouteGetConsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MissRouteProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOtherExpeditionAWBOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOtherExpeditionAWBv2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetOtherExpeditionRSCOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetOtherExpeditionAWBOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetOtherExpeditionRTSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CostOtherExpeditionAWBCoreOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OtherExpeditionExpenseDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OtherExpeditionExpenseUpdateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private OtherExpeditionExpenseDeleteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ThirdPartyExpenseUpdateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ThirdPartyExpenseDeleteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ThreePLOtherExpensesDeleteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ThreePLExpenseUpdateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ThreePLExpenseDeleteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PackingKayuSettingGeneralGetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PackingKayuSettingGeneralSetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PackingKayuSettingHubGetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PackingKayuSettingHubSetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAddTaxOriFtzHsCodeListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAddTaxOriFtzHsCodeListV2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTransactionWeightDimensionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetConsWeightOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExpeditionPickupListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExpeditionPickupProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SNODraftListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SNIDraftListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TrackingQueryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TrackingUpdateStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TrackingReverseStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CustomUpdateStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSuratJalanTokoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTandaTerimaTokoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TrackingUploadStatusTemplateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TrackingUploadStatusValidateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TrackingUploadStatusProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendSMSNewV2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckTransactionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckExistingStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SyncIGROperationCompleted As System.Threading.SendOrPostCallback
        
        Private StoreStoRtsNotProcessedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TermsAndConditionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NewTransactionTrialKaryawanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TrialTransactionListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TrialTransactionDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendWhatsAppOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WhatsAppSwitchToSMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AWBTTFSupplierGetListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AWBTTFSupplierCreateAWBOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StoreOfflineProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StationOpenConsListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StationOpenConsDetailListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RAIProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DraftRAOListAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DraftRAOListDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RAOProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsListAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsNewOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsListDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsDetailUpdateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsDetailAddDeleteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDCPickupNoListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WHOListDCOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WHOListExpOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WHOListDGAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WHIListDGAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WHOListTakakiOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WHIListTakakiOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StationTerminalListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private HubTerminalListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PickupAtHubListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PickupAtHubAccountListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private HubToHubAccountListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WHIListHubToHubOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WHOListHubToHubOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckDstHUBOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WHOListHubToCustomerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSuratJalanByDriverIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSuratJalanDetailByDriverIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSuratJalanByDriverIDWithDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CourierHandOverGetListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CourierHandOverProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLokerListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAwbInLokerListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WHOListInstantPickupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InstantPickupReturListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InstantPickupReturProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDaftarJemputByDriverIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDaftarJemputDetailByDriverIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDaftarJemputByDriverIDWithDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDaftarBatalJemputByDriverIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDaftarBatalJemputDetailByDriverIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDaftarBatalJemputByDriverIDWithDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetAccountAutoOrderThirdPartyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDaftarSamedayJemputByDriverIDWithDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateReasonReturToDoorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WHIRTSListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WHIGroupingListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WHIGroupingProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WHIListExpSJOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WHIListExpDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WHIListByDCPickupNoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DCRequestGetNextPickupNoSampleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DCPickingNewOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DCPickingDraftOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DCPickingFinalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DCPickingRotiOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRackInStoreListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DCPickingManualOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RTSCreateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RTSEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RTSShEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetHubDeliveryListForRTSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CannotDopOnRtsDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SRRCreateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SRREmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SRRShEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StationGroupingListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StationGroupingConsNewOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StationGroupingDetailListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StationGroupingConsUpdateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private StationGroupingConsProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DispatchListHubOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DispatchProcessHubOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DispatchPrintSJHubOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DispatchReturListHubOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ArriveDriverListHubOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ArriveDriverProcessHubOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ArriveListHubOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ArriveProcessHubOperationCompleted As System.Threading.SendOrPostCallback
        
        Private HubGroupingListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private HubConsPickupListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private HubConsIncomingListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EComNewPickupListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EcomNewHubPickupListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EcomNewHubPickupListV2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoOrderNewTransactionDeliveryManOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoOrderNewTransactionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoOrderNewTransactionMultiDropOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoOrderThirdPartyUpdTrxDeliveryManOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoOrderUpdateStatusPUQv2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoOrderUpdateStatusPUQOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoOrderUpdateStatusPULv2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoOrderUpdateStatusHDVv2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoOrderUpdateStatusHDVOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoOrderUpdateStatusHDSv2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoOrderUpdateStatusHDSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoOrderUpdateStatusOOCRTSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoOrderUpdateStatusRTSFLROperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoOrderCancelOrderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoOrderAdjustStatusRTSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAddInsuranceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BatchTrackNumReserveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BatchTrackNumCreateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DispatchListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DispatchProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DispatchPrintSJOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DispatchReturListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PickupCheckPINOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PickupRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PickupProcessedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ArriveDriverListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ArriveDriverProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ArriveListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ArriveProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateRackListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdatePJBHubPostalCodeListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateHubPostalCodeListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateAccountHubPostalCodeListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateInstantHubPostalCodeListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdatePoinkuHubPostalCodeListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCourierDeliveryCostList_ObsoleteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCourierAddressDeliveryCostListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCourierDooringDeliveryCostListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCourierPickupDeliveryCostListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCourierFleetRentalCostListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateHubExpeditionListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateLastMileExpeditionListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetHubProcessTypeExpeditionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetHubProcessTypeExpeditionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMandatoryExpeditionConsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetMandatoryExpeditionConsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FleetRentalUpdateStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountFleetRentalVehicleTypeListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetAccountFleetRentalVehicleTypeListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFleetRentalVehicleTypeListByAccountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NewAccountDownloadTemplateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NewAccountValidateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NewAccountCreateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NewAccountDeleteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NewAccountCopyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NewAccountSearchByKeywordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NewAccountGetInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NewAccountUpdateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NewAccountSupplierAddressCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSuppAddrCodeListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NewExpeditionDownloadTemplateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NewExpeditionValidateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NewExpeditionCreateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoCopyAndReturnCreateAWBOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoCopyAndReturnGetTrackNumListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCopyAndReturnTrackNumListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCopyAndReturnAccountListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateSavingRevenueListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateETAListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateRateAreaCustomAccountListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateRateCustomListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateRateDCCustomListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Update3PLRateCustomListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateRateSellerCategoryAreaCustomListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateRateSellerSubCategoryAreaCustomListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateRateRentalFleetListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DraftRAIListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetRegionHubListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRegionListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStationListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStationPartnerListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStationRouteListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountPickupAddressListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetAccountPickupAddressListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountPickupAddressListByPAccountOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountPickupListByStationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountPickupListByStationZoneOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStationHubListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetHubListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetHubPartnerListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRackListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetHubExpeditionListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetReprintKeywordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetIncomingSuratJalanListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private QueryToolsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private QueryCallProcedureDatatableOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PettyCashSubCategoryListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PettyCashReportListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PettyCashHubExpenseAddOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PettyCashHubExpenseDeleteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PettyCashHubExpenseApprovalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PettyCashHubExpenseDeleteRecordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PettyCashHubFindRecordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PettyCashHubFinalizeRecordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PettyCashHubProcessJournalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DocumentUploadCategoryListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DocumentUploadAddFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DocumentUploadFindRecordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TanyaDataITTokoCategoryListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TanyaDataITTokoGetDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TanyaDataITTokoEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLoginByUserAndTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateLoginByUserAndTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountSupplierIndomaretListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateAccountSupplierIndomaretOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetReversePickupOAwbOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NewTransactionDraftBySalesOrderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NewTransactionBySalesOrderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NewTransactionDraftECommerceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NewTransactionECommerceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateTransactionDeliveryInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private NewTransactionBatchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExpireNewTransactionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTransactionDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateTransactionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTransactionUpdateLogChangeTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoOrderSwitchKeepFallbackOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoOrderSwitchKeepFallbackExpressOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoOrderSwitchKeepFallbackRegularOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoOrderSwitchKeepFallbackSamedayOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoOrderSwitchKeepFallbackSamedayMobilOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoOrderDoorPickupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoOrderDoorPickupUpdateStatusHOSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AutoOrderNewTransactionV2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateFavoriteAddressOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertFavoriteAddressDraftOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertFavoriteAddressOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFavoriteAddressListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFavoriteAddressListIPPHOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebExpGetHubListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebExpGetExpeditionListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebExpGetExpeditionSLAListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTransactionConstOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPackageCategoryListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDeliveryCostWeightDimensionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDeliveryCostFleetRentalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDeliveryCostCoreOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDeliveryCostOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDeliveryCostV2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDeliveryServiceListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDeliveryServiceListV2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTransactionListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetConsigneeHistoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetIndomaretStoreListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetIndomaretStoreLocationListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetIndomaretDCListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetIndomaretDCDepoListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSuggestionStoreOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPropinsiListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetKotaKabupatenListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetKecamatanListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetKelurahanListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetKodePosListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPostalCodeListByKeywordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDCListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDCDGAAccountListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDCDGAAccountListDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDCDGAListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IndomaretStoreClosedListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IndomaretStoreClosedOpenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MotherstoreValidationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetIndogrosirStoreListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMisterDonutStoreListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPointCoffeeStandAloneStoreListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRegionHubListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DOPEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CDVEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CDSEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CDSSenderEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CDSConfirmationGetTransactionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CDSConfirmationSetConfirmationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PINListRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WHOOriShEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WHOOriEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ComplainEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetServiceTypeListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCountryListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProvinceListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCityListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSubDistrictAndPostalCodeListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDistrictListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSubDistrictListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPostalCodeListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPostalCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSubDistrictListByPostalCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDistrictByKeywordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCountryListByKeywordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPackageConditionListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetThirdPartyListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetExpeditionListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetExpeditionListMatrixOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetJalurEkspedisiListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountCategoryListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountSubCategoryListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetECommerceListWithCategoryAndSubCategoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetECommerceListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetECommerceListByFinTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetVehicleTypeListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTrackingStatusListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTrackingStatusListForReportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTrackingStatusMappingListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountDCListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetAccountDCListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountCityTruckingListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetAccountCityTruckingListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountCityDoorListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetAccountCityDoorListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountCityDoorToPickupListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetAccountCityDoorToPickupListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountCityPickupListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetAccountCityPickupListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountSettingTypeListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountSettingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetAccountSettingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountMaxWeightOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetAccountMaxWeightOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountMaxWeight3PLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetAccountMaxWeight3PLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountMaxPckValueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetAccountMaxPckValueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountMaxCodValueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetAccountMaxCodValueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountMaxDimensionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetAccountMaxDimensionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountMaxAndSpcDimensionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetAccountMaxAndSpcDimensionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountMaxAndSpcDimension3PLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountCountryListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetAccountCountryListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAccountCoAddrNoNumOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetAccountCoAddrNoNumOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEWalletListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBankListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBankListJsonOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetComplainListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetNewTracknumKeywordListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDoorPickupSlotOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateFavoriteAddressDraftOperationCompleted As System.Threading.SendOrPostCallback
        
        Private A_WSDevelopmentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ChekConnectionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidasiIPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoginV2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoginResetPasswordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoginPasswordUpdateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoginPasswordUpdateV2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckUserLoginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetWebProgConstOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFolderLabelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmailLabelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PrintLabelTaxOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PrintConsLabelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PrintLabelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PrintLabelByRefNoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PrintLabelByOrderNoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PrintLabelIndogrosirWalkInOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PrintTandaTerimaIndogrosirWalkInOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PrintSuratJalanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmailSuratJalanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PrintSuratJemputBarangOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PrintAwb3plByIPPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PrintSerahPackingListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PrintTandaTerimaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertTandaTerimaConsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PrintSuratTugasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PrintTerminalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PrintExpeditionPickupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PINCreateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PINEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PINResendOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PINRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DROEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DROShEmailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.ReportWeb.My.MySettings.Default.ReportWeb_CoreService_Service
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event DashboardPartnerPickupRequestCompleted As DashboardPartnerPickupRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event DashboardPartnerPickupInquiryCompleted As DashboardPartnerPickupInquiryCompletedEventHandler
        
        '''<remarks/>
        Public Event DashboardPartnerPickupUpdateStatusCompleted As DashboardPartnerPickupUpdateStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event DashboardPartnerPickupRequestDMSCompleted As DashboardPartnerPickupRequestDMSCompletedEventHandler
        
        '''<remarks/>
        Public Event DashboardPartnerPickupGetSlotCompleted As DashboardPartnerPickupGetSlotCompletedEventHandler
        
        '''<remarks/>
        Public Event DashboardPartnerPickupFavoriteAddressInsertCompleted As DashboardPartnerPickupFavoriteAddressInsertCompletedEventHandler
        
        '''<remarks/>
        Public Event DashboardPartnerPickupFavoriteAddressUpdateCompleted As DashboardPartnerPickupFavoriteAddressUpdateCompletedEventHandler
        
        '''<remarks/>
        Public Event DashboardPartnerPickupGetRequestAddressCompleted As DashboardPartnerPickupGetRequestAddressCompletedEventHandler
        
        '''<remarks/>
        Public Event DashboardPartnerUpdatePickupRequestAddressCompleted As DashboardPartnerUpdatePickupRequestAddressCompletedEventHandler
        
        '''<remarks/>
        Public Event DashboardPartnerUpdateDetailPickupItemsCompleted As DashboardPartnerUpdateDetailPickupItemsCompletedEventHandler
        
        '''<remarks/>
        Public Event DashboardPartnerPickupGetDetailReqIdCompleted As DashboardPartnerPickupGetDetailReqIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPJBAccountItemListByKeywordCompleted As GetPJBAccountItemListByKeywordCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPJBDetailItemListCompleted As GetPJBDetailItemListCompletedEventHandler
        
        '''<remarks/>
        Public Event DashboardPartnerPickupPairAWBPJBCompleted As DashboardPartnerPickupPairAWBPJBCompletedEventHandler
        
        '''<remarks/>
        Public Event DashboardPartnerAutoCreatePickupRequestCompleted As DashboardPartnerAutoCreatePickupRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event DashboardPartnerPickupGetPickupRequestTemplateListCompleted As DashboardPartnerPickupGetPickupRequestTemplateListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTemplatePickupRequestAddressCompleted As GetTemplatePickupRequestAddressCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAutoPickupRequestSettingCompleted As GetAutoPickupRequestSettingCompletedEventHandler
        
        '''<remarks/>
        Public Event SetAutoPickupRequestSettingCompleted As SetAutoPickupRequestSettingCompletedEventHandler
        
        '''<remarks/>
        Public Event DashboardPartnerTemplateAutoPickupRequestCompleted As DashboardPartnerTemplateAutoPickupRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event DashboardPartnerUploadDOCompleted As DashboardPartnerUploadDOCompletedEventHandler
        
        '''<remarks/>
        Public Event DashboardPartnerDODownloadTemplateCompleted As DashboardPartnerDODownloadTemplateCompletedEventHandler
        
        '''<remarks/>
        Public Event DashboardPartnerUploadPOCompleted As DashboardPartnerUploadPOCompletedEventHandler
        
        '''<remarks/>
        Public Event DashboardPartnerPODownloadTemplateCompleted As DashboardPartnerPODownloadTemplateCompletedEventHandler
        
        '''<remarks/>
        Public Event KurirWilayahAutoPickingCompleted As KurirWilayahAutoPickingCompletedEventHandler
        
        '''<remarks/>
        Public Event KurirWilayahAntarTokoListCompleted As KurirWilayahAntarTokoListCompletedEventHandler
        
        '''<remarks/>
        Public Event KurirWilayahDeleteAntarTokoListCompleted As KurirWilayahDeleteAntarTokoListCompletedEventHandler
        
        '''<remarks/>
        Public Event KurirWilayahPushAntarTokoListCompleted As KurirWilayahPushAntarTokoListCompletedEventHandler
        
        '''<remarks/>
        Public Event KurirWilayahAutoJemputTokoCompleted As KurirWilayahAutoJemputTokoCompletedEventHandler
        
        '''<remarks/>
        Public Event KurirWilayahJemputTokoListCompleted As KurirWilayahJemputTokoListCompletedEventHandler
        
        '''<remarks/>
        Public Event KurirWilayahPushJemputTokoListCompleted As KurirWilayahPushJemputTokoListCompletedEventHandler
        
        '''<remarks/>
        Public Event KurirWilayahMappingClusterListCompleted As KurirWilayahMappingClusterListCompletedEventHandler
        
        '''<remarks/>
        Public Event KurirWilayahStatusKendalaPaketCompleted As KurirWilayahStatusKendalaPaketCompletedEventHandler
        
        '''<remarks/>
        Public Event KurirWilayahPushNotifListInsertCompleted As KurirWilayahPushNotifListInsertCompletedEventHandler
        
        '''<remarks/>
        Public Event KurirWilayahPushNotifListPushCompleted As KurirWilayahPushNotifListPushCompletedEventHandler
        
        '''<remarks/>
        Public Event TransactionFileUrlInsertCompleted As TransactionFileUrlInsertCompletedEventHandler
        
        '''<remarks/>
        Public Event TransactionFileUrlDeleteCompleted As TransactionFileUrlDeleteCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBlastEmailTemplateCompleted As GetBlastEmailTemplateCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBlastEmailCategoryCompleted As GetBlastEmailCategoryCompletedEventHandler
        
        '''<remarks/>
        Public Event BlastEmailCompleted As BlastEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event BlastEmailDeleteCompleted As BlastEmailDeleteCompletedEventHandler
        
        '''<remarks/>
        Public Event RajaOngkir_PopulateRateCompleted As RajaOngkir_PopulateRateCompletedEventHandler
        
        '''<remarks/>
        Public Event RajaOngkir_GetRateResponseCompleted As RajaOngkir_GetRateResponseCompletedEventHandler
        
        '''<remarks/>
        Public Event RajaOngkir_CreateMappingSubdistrictCompleted As RajaOngkir_CreateMappingSubdistrictCompletedEventHandler
        
        '''<remarks/>
        Public Event RajaOngkir_PopulateDataCompleted As RajaOngkir_PopulateDataCompletedEventHandler
        
        '''<remarks/>
        Public Event RajaOngkir_EmailResultCompleted As RajaOngkir_EmailResultCompletedEventHandler
        
        '''<remarks/>
        Public Event RajaOngkir_PopulateRate_V2Completed As RajaOngkir_PopulateRate_V2CompletedEventHandler
        
        '''<remarks/>
        Public Event RajaOngkir_GetRateResponse_V2Completed As RajaOngkir_GetRateResponse_V2CompletedEventHandler
        
        '''<remarks/>
        Public Event RajaOngkir_CreateMappingSubdistrict_V2Completed As RajaOngkir_CreateMappingSubdistrict_V2CompletedEventHandler
        
        '''<remarks/>
        Public Event RajaOngkir_PopulateData_V2Completed As RajaOngkir_PopulateData_V2CompletedEventHandler
        
        '''<remarks/>
        Public Event RajaOngkirGetConstValueCompleted As RajaOngkirGetConstValueCompletedEventHandler
        
        '''<remarks/>
        Public Event RajaOngkirGetSubDistrictListCompleted As RajaOngkirGetSubDistrictListCompletedEventHandler
        
        '''<remarks/>
        Public Event RajaOngkirProsesOverrideCompleted As RajaOngkirProsesOverrideCompletedEventHandler
        
        '''<remarks/>
        Public Event RegSeller_CreatePartnerAccountCompleted As RegSeller_CreatePartnerAccountCompletedEventHandler
        
        '''<remarks/>
        Public Event RegSeller_DigitalAccountAcquisitionCompleted As RegSeller_DigitalAccountAcquisitionCompletedEventHandler
        
        '''<remarks/>
        Public Event RegSeller_ResetPartnerAccountCompleted As RegSeller_ResetPartnerAccountCompletedEventHandler
        
        '''<remarks/>
        Public Event RegSeller_AddEmailRewardSchedulerCompleted As RegSeller_AddEmailRewardSchedulerCompletedEventHandler
        
        '''<remarks/>
        Public Event RegSeller_AddEmailIncentiveSchedulerCompleted As RegSeller_AddEmailIncentiveSchedulerCompletedEventHandler
        
        '''<remarks/>
        Public Event RegSeller_SendRewardEmailCompleted As RegSeller_SendRewardEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event RegSeller_SendIncentiveEmailCompleted As RegSeller_SendIncentiveEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event RegSeller_DeleteMailSchedulerCompleted As RegSeller_DeleteMailSchedulerCompletedEventHandler
        
        '''<remarks/>
        Public Event FinUpdateInvoiceTrackNumCompleted As FinUpdateInvoiceTrackNumCompletedEventHandler
        
        '''<remarks/>
        Public Event FinUpdateInvoiceExpeditionCompleted As FinUpdateInvoiceExpeditionCompletedEventHandler
        
        '''<remarks/>
        Public Event NoResiKonsolGetNomorCompleted As NoResiKonsolGetNomorCompletedEventHandler
        
        '''<remarks/>
        Public Event GetToolsStockListCompleted As GetToolsStockListCompletedEventHandler
        
        '''<remarks/>
        Public Event ToolsStockUpdateCompleted As ToolsStockUpdateCompletedEventHandler
        
        '''<remarks/>
        Public Event GetToolsListCompleted As GetToolsListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetToolsSupplierListCompleted As GetToolsSupplierListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetToolsStockRequestListCompleted As GetToolsStockRequestListCompletedEventHandler
        
        '''<remarks/>
        Public Event ToolsRequestCompleted As ToolsRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event GetToolsRequestListCompleted As GetToolsRequestListCompletedEventHandler
        
        '''<remarks/>
        Public Event ToolsFulfillmentCompleted As ToolsFulfillmentCompletedEventHandler
        
        '''<remarks/>
        Public Event GetToolsAwbGroupListCompleted As GetToolsAwbGroupListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetToolsListNewCompleted As GetToolsListNewCompletedEventHandler
        
        '''<remarks/>
        Public Event GetToolsHubListNewCompleted As GetToolsHubListNewCompletedEventHandler
        
        '''<remarks/>
        Public Event GetToolsFulfillmentListNewCompleted As GetToolsFulfillmentListNewCompletedEventHandler
        
        '''<remarks/>
        Public Event ToolsUpdateNewCompleted As ToolsUpdateNewCompletedEventHandler
        
        '''<remarks/>
        Public Event ToolsHubUpdateNewCompleted As ToolsHubUpdateNewCompletedEventHandler
        
        '''<remarks/>
        Public Event ToolsFulfillmentNewCompleted As ToolsFulfillmentNewCompletedEventHandler
        
        '''<remarks/>
        Public Event ToolsCreateAwbCompleted As ToolsCreateAwbCompletedEventHandler
        
        '''<remarks/>
        Public Event GetToolsAwbGroupAllCompleted As GetToolsAwbGroupAllCompletedEventHandler
        
        '''<remarks/>
        Public Event ToolsAddAwbGroupCompleted As ToolsAddAwbGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event ToolsAddToolsCompleted As ToolsAddToolsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetToolsListForDdlCompleted As GetToolsListForDdlCompletedEventHandler
        
        '''<remarks/>
        Public Event PartnerItemListSpecialCaseCompleted As PartnerItemListSpecialCaseCompletedEventHandler
        
        '''<remarks/>
        Public Event PartnerItemListProcessCompleted As PartnerItemListProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event PartnerItemListHubItemCompleted As PartnerItemListHubItemCompletedEventHandler
        
        '''<remarks/>
        Public Event PartnerItemListAllItemCompleted As PartnerItemListAllItemCompletedEventHandler
        
        '''<remarks/>
        Public Event PartnerItemListReportCategoryCompleted As PartnerItemListReportCategoryCompletedEventHandler
        
        '''<remarks/>
        Public Event PartnerItemProcessCompleted As PartnerItemProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event LaundryGetDataByOrderNoCompleted As LaundryGetDataByOrderNoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFeatureUserAccessCompleted As GetFeatureUserAccessCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDbInfoCompleted As GetDbInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetReasonRemoveTrackNumInConsCompleted As GetReasonRemoveTrackNumInConsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTrackNumInConsListOriCompleted As GetTrackNumInConsListOriCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTrackNumInConsListDstCompleted As GetTrackNumInConsListDstCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTrackNumInConsListCompleted As GetTrackNumInConsListCompletedEventHandler
        
        '''<remarks/>
        Public Event TrackNumInConsRemoveOriCompleted As TrackNumInConsRemoveOriCompletedEventHandler
        
        '''<remarks/>
        Public Event TrackNumInConsRemoveDstCompleted As TrackNumInConsRemoveDstCompletedEventHandler
        
        '''<remarks/>
        Public Event TrackNumInConsRemoveCompleted As TrackNumInConsRemoveCompletedEventHandler
        
        '''<remarks/>
        Public Event ApprovalListCompleted As ApprovalListCompletedEventHandler
        
        '''<remarks/>
        Public Event ApprovalProcessCompleted As ApprovalProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event MitraShipperGetCompleted As MitraShipperGetCompletedEventHandler
        
        '''<remarks/>
        Public Event MitraShipperSetCompleted As MitraShipperSetCompletedEventHandler
        
        '''<remarks/>
        Public Event MitraServiceGetCompleted As MitraServiceGetCompletedEventHandler
        
        '''<remarks/>
        Public Event CustomTrackNumStockIndomaretStoreCompleted As CustomTrackNumStockIndomaretStoreCompletedEventHandler
        
        '''<remarks/>
        Public Event CustomTrackNumReleaseStockIndomaretStoreCompleted As CustomTrackNumReleaseStockIndomaretStoreCompletedEventHandler
        
        '''<remarks/>
        Public Event CustomTrackNumStockIndopaketHubCompleted As CustomTrackNumStockIndopaketHubCompletedEventHandler
        
        '''<remarks/>
        Public Event ExtendSTIPeriodGetCostCompleted As ExtendSTIPeriodGetCostCompletedEventHandler
        
        '''<remarks/>
        Public Event ExtendSTIPeriodValidationCompleted As ExtendSTIPeriodValidationCompletedEventHandler
        
        '''<remarks/>
        Public Event ExtendSTIPeriodProcessCompleted As ExtendSTIPeriodProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event StoreDropScheduleCompleted As StoreDropScheduleCompletedEventHandler
        
        '''<remarks/>
        Public Event TestGeoCodingCompleted As TestGeoCodingCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteObsoleteDataCompleted As DeleteObsoleteDataCompletedEventHandler
        
        '''<remarks/>
        Public Event HadiahPromosiGetPromosiCompleted As HadiahPromosiGetPromosiCompletedEventHandler
        
        '''<remarks/>
        Public Event HadiahPromosiCountTransactionCompleted As HadiahPromosiCountTransactionCompletedEventHandler
        
        '''<remarks/>
        Public Event HadiahPromosiAssignCouponCompleted As HadiahPromosiAssignCouponCompletedEventHandler
        
        '''<remarks/>
        Public Event HadiahPromosiSendCouponCompleted As HadiahPromosiSendCouponCompletedEventHandler
        
        '''<remarks/>
        Public Event CustomerInputGetCategoryCompleted As CustomerInputGetCategoryCompletedEventHandler
        
        '''<remarks/>
        Public Event CustomerInputDataCompleted As CustomerInputDataCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckTransactionDeliveryInfoCompleted As CheckTransactionDeliveryInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateStatusDeliveryInfoCompleted As UpdateStatusDeliveryInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckUsePinDeliveryInfoCompleted As CheckUsePinDeliveryInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event CaseReOrderGetOrderCompleted As CaseReOrderGetOrderCompletedEventHandler
        
        '''<remarks/>
        Public Event CaseReOrderCreateOrderCompleted As CaseReOrderCreateOrderCompletedEventHandler
        
        '''<remarks/>
        Public Event ExpeditionAutoOrderPrintLabelv2Completed As ExpeditionAutoOrderPrintLabelv2CompletedEventHandler
        
        '''<remarks/>
        Public Event ExpeditionAutoOrderPrintLabelCompleted As ExpeditionAutoOrderPrintLabelCompletedEventHandler
        
        '''<remarks/>
        Public Event GetExpeditionAutoOrderSettingCompleted As GetExpeditionAutoOrderSettingCompletedEventHandler
        
        '''<remarks/>
        Public Event WHIListAutoOrderExpCompleted As WHIListAutoOrderExpCompletedEventHandler
        
        '''<remarks/>
        Public Event ExpeditionAutoOrderInsertTransactionCompleted As ExpeditionAutoOrderInsertTransactionCompletedEventHandler
        
        '''<remarks/>
        Public Event ExpeditionAutoOrderNewTrxCompleted As ExpeditionAutoOrderNewTrxCompletedEventHandler
        
        '''<remarks/>
        Public Event ExpeditionAutoOrderUpdateStatusHDSCompleted As ExpeditionAutoOrderUpdateStatusHDSCompletedEventHandler
        
        '''<remarks/>
        Public Event ExpeditionAutoOrderUpdateStatusRTSCompleted As ExpeditionAutoOrderUpdateStatusRTSCompletedEventHandler
        
        '''<remarks/>
        Public Event WHOListAutoOrderExpCompleted As WHOListAutoOrderExpCompletedEventHandler
        
        '''<remarks/>
        Public Event ExpeditionAutoOrderValidateConsCompleted As ExpeditionAutoOrderValidateConsCompletedEventHandler
        
        '''<remarks/>
        Public Event ExpeditionAutoOrderInsertConsCompleted As ExpeditionAutoOrderInsertConsCompletedEventHandler
        
        '''<remarks/>
        Public Event ExpeditionAutoOrderNewConsCompleted As ExpeditionAutoOrderNewConsCompletedEventHandler
        
        '''<remarks/>
        Public Event ExpeditionAutoOrderUpdateStatusConsCompleted As ExpeditionAutoOrderUpdateStatusConsCompletedEventHandler
        
        '''<remarks/>
        Public Event ExpeditionAutoOrderResetHitCountCompleted As ExpeditionAutoOrderResetHitCountCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateHDSDownloadTemplateCompleted As UpdateHDSDownloadTemplateCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateHDSValidateCompleted As UpdateHDSValidateCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateHDSProcessCompleted As UpdateHDSProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event DashboardPartnerPickupLastDataCompleted As DashboardPartnerPickupLastDataCompletedEventHandler
        
        '''<remarks/>
        Public Event StationOpenConsProcessCompleted As StationOpenConsProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppCheckErrorConnectionCompleted As WebAppCheckErrorConnectionCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppUserSingleRegistrationCompleted As WebAppUserSingleRegistrationCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppUserSingleLoginCompleted As WebAppUserSingleLoginCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppUserForgotPasswordCompleted As WebAppUserForgotPasswordCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppUserUpdateCompleted As WebAppUserUpdateCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppUserUpdateEmailPhoneCompleted As WebAppUserUpdateEmailPhoneCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppUserUpdateSendKeyCompleted As WebAppUserUpdateSendKeyCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppUserUpdateDirectSendKeyCompleted As WebAppUserUpdateDirectSendKeyCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppUserUpdateResendKeyCompleted As WebAppUserUpdateResendKeyCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppUserDeleteEmailOrPhoneSendKeyCompleted As WebAppUserDeleteEmailOrPhoneSendKeyCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppUserDeleteEmailOrPhoneDirectSendKeyCompleted As WebAppUserDeleteEmailOrPhoneDirectSendKeyCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppUserDeleteEmailOrPhoneResendKeyCompleted As WebAppUserDeleteEmailOrPhoneResendKeyCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppUserGetInfoCompleted As WebAppUserGetInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppDoorPickupSubDistrictAndPostalCodeListCompleted As WebAppDoorPickupSubDistrictAndPostalCodeListCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppDoorPickupDistrictListCompleted As WebAppDoorPickupDistrictListCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppDoorPickupSubDistrictListCompleted As WebAppDoorPickupSubDistrictListCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppDoorPickupPostalCodeListCompleted As WebAppDoorPickupPostalCodeListCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppCheckRateGetDistrictCompleted As WebAppCheckRateGetDistrictCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppCheckRateGetServiceListCompleted As WebAppCheckRateGetServiceListCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppCheckAddInsuranceCompleted As WebAppCheckAddInsuranceCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppCheckAddTaxOriFTZCompleted As WebAppCheckAddTaxOriFTZCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppCheckAddTaxOriFTZV2Completed As WebAppCheckAddTaxOriFTZV2CompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppGetSuggestionStoreCompleted As WebAppGetSuggestionStoreCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppTrackingCompleted As WebAppTrackingCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppTrackingMultiAWBCompleted As WebAppTrackingMultiAWBCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppTransactionDraftCompleted As WebAppTransactionDraftCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppTransactionCompleted As WebAppTransactionCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppTransactionHistoryCompleted As WebAppTransactionHistoryCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppTransactionDetailCompleted As WebAppTransactionDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppUserSetProfilePictureCompleted As WebAppUserSetProfilePictureCompletedEventHandler
        
        '''<remarks/>
        Public Event TestWriteFileCompleted As TestWriteFileCompletedEventHandler
        
        '''<remarks/>
        Public Event TestReadFileCompleted As TestReadFileCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppUserGetLabelCompleted As WebAppUserGetLabelCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppGetOfflineOTPCompleted As WebAppGetOfflineOTPCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppGetServiceDescriptionCompleted As WebAppGetServiceDescriptionCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppUserActivationEmailCompleted As WebAppUserActivationEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppUserActivationSMSCompleted As WebAppUserActivationSMSCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppUserActivationDirectSendEmailCompleted As WebAppUserActivationDirectSendEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppUserActivationDirectSendSMSCompleted As WebAppUserActivationDirectSendSMSCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppUserActivationCompleted As WebAppUserActivationCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppUserActivationResendKeyCompleted As WebAppUserActivationResendKeyCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppGetSuggestionConsigneeCompleted As WebAppGetSuggestionConsigneeCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppGetSuggestionShipperCompleted As WebAppGetSuggestionShipperCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppExtendSTIPeriodGetCostCompleted As WebAppExtendSTIPeriodGetCostCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppExtendSTIPeriodValidationCompleted As WebAppExtendSTIPeriodValidationCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppExtendSTIPeriodProcessCompleted As WebAppExtendSTIPeriodProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppConstCompleted As WebAppConstCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppDailyPostalCodeListCompleted As WebAppDailyPostalCodeListCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppDigAccIdNonActiveCompleted As WebAppDigAccIdNonActiveCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppSetUserActiveCompleted As WebAppSetUserActiveCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppPushStatusCompleted As WebAppPushStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppDoorPickupReminderCompleted As WebAppDoorPickupReminderCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppPrintLabelCompleted As WebAppPrintLabelCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppGetUserStatisticCompleted As WebAppGetUserStatisticCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppUnsubscribeEmailCompleted As WebAppUnsubscribeEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event WebAppSubscribeEmailCompleted As WebAppSubscribeEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event CrmTrackingHistoryCompleted As CrmTrackingHistoryCompletedEventHandler
        
        '''<remarks/>
        Public Event SellerIdamanRegistrationCompleted As SellerIdamanRegistrationCompletedEventHandler
        
        '''<remarks/>
        Public Event SellerIdamanRegistrationValidateKeyColumnsCompleted As SellerIdamanRegistrationValidateKeyColumnsCompletedEventHandler
        
        '''<remarks/>
        Public Event SellerIdaman_FinishedAccountNotificationCompleted As SellerIdaman_FinishedAccountNotificationCompletedEventHandler
        
        '''<remarks/>
        Public Event SellerIdamanGetInfoCompleted As SellerIdamanGetInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event WHOMonitorDCRCompleted As WHOMonitorDCRCompletedEventHandler
        
        '''<remarks/>
        Public Event MonitorConsByDestinationCompleted As MonitorConsByDestinationCompletedEventHandler
        
        '''<remarks/>
        Public Event PrintTrackNumUploadCompleted As PrintTrackNumUploadCompletedEventHandler
        
        '''<remarks/>
        Public Event TrackNumUploadListCompleted As TrackNumUploadListCompletedEventHandler
        
        '''<remarks/>
        Public Event TrackNumUploadQueueArvConCompleted As TrackNumUploadQueueArvConCompletedEventHandler
        
        '''<remarks/>
        Public Event TrackNumUploadProcessArvConCompleted As TrackNumUploadProcessArvConCompletedEventHandler
        
        '''<remarks/>
        Public Event TrackNumUploadEmailArvConCompleted As TrackNumUploadEmailArvConCompletedEventHandler
        
        '''<remarks/>
        Public Event PrintLabelUploadCompleted As PrintLabelUploadCompletedEventHandler
        
        '''<remarks/>
        Public Event PrintLabelUploadAtOriCompleted As PrintLabelUploadAtOriCompletedEventHandler
        
        '''<remarks/>
        Public Event HubAccountPickupListGetCompleted As HubAccountPickupListGetCompletedEventHandler
        
        '''<remarks/>
        Public Event HubAccountPickupListSetCompleted As HubAccountPickupListSetCompletedEventHandler
        
        '''<remarks/>
        Public Event DashboardHubAccountListGetCompleted As DashboardHubAccountListGetCompletedEventHandler
        
        '''<remarks/>
        Public Event DashboardHubAccountListSetCompleted As DashboardHubAccountListSetCompletedEventHandler
        
        '''<remarks/>
        Public Event GetHubAccountListCompleted As GetHubAccountListCompletedEventHandler
        
        '''<remarks/>
        Public Event SuratTugasKurirIPPGetStoreCompleted As SuratTugasKurirIPPGetStoreCompletedEventHandler
        
        '''<remarks/>
        Public Event SuratTugasKurirIPPGetAWBListCompleted As SuratTugasKurirIPPGetAWBListCompletedEventHandler
        
        '''<remarks/>
        Public Event SuratTugasKurirIPPProcessCompleted As SuratTugasKurirIPPProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event SuratTugasKurirIPPValidateKeyCompleted As SuratTugasKurirIPPValidateKeyCompletedEventHandler
        
        '''<remarks/>
        Public Event MissRouteGetConsCompleted As MissRouteGetConsCompletedEventHandler
        
        '''<remarks/>
        Public Event MissRouteProcessCompleted As MissRouteProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOtherExpeditionAWBCompleted As GetOtherExpeditionAWBCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOtherExpeditionAWBv2Completed As GetOtherExpeditionAWBv2CompletedEventHandler
        
        '''<remarks/>
        Public Event SetOtherExpeditionRSCCompleted As SetOtherExpeditionRSCCompletedEventHandler
        
        '''<remarks/>
        Public Event SetOtherExpeditionAWBCompleted As SetOtherExpeditionAWBCompletedEventHandler
        
        '''<remarks/>
        Public Event SetOtherExpeditionRTSCompleted As SetOtherExpeditionRTSCompletedEventHandler
        
        '''<remarks/>
        Public Event CostOtherExpeditionAWBCoreCompleted As CostOtherExpeditionAWBCoreCompletedEventHandler
        
        '''<remarks/>
        Public Event OtherExpeditionExpenseDataCompleted As OtherExpeditionExpenseDataCompletedEventHandler
        
        '''<remarks/>
        Public Event OtherExpeditionExpenseUpdateCompleted As OtherExpeditionExpenseUpdateCompletedEventHandler
        
        '''<remarks/>
        Public Event OtherExpeditionExpenseDeleteCompleted As OtherExpeditionExpenseDeleteCompletedEventHandler
        
        '''<remarks/>
        Public Event ThirdPartyExpenseUpdateCompleted As ThirdPartyExpenseUpdateCompletedEventHandler
        
        '''<remarks/>
        Public Event ThirdPartyExpenseDeleteCompleted As ThirdPartyExpenseDeleteCompletedEventHandler
        
        '''<remarks/>
        Public Event ThreePLOtherExpensesDeleteCompleted As ThreePLOtherExpensesDeleteCompletedEventHandler
        
        '''<remarks/>
        Public Event ThreePLExpenseUpdateCompleted As ThreePLExpenseUpdateCompletedEventHandler
        
        '''<remarks/>
        Public Event ThreePLExpenseDeleteCompleted As ThreePLExpenseDeleteCompletedEventHandler
        
        '''<remarks/>
        Public Event PackingKayuSettingGeneralGetCompleted As PackingKayuSettingGeneralGetCompletedEventHandler
        
        '''<remarks/>
        Public Event PackingKayuSettingGeneralSetCompleted As PackingKayuSettingGeneralSetCompletedEventHandler
        
        '''<remarks/>
        Public Event PackingKayuSettingHubGetCompleted As PackingKayuSettingHubGetCompletedEventHandler
        
        '''<remarks/>
        Public Event PackingKayuSettingHubSetCompleted As PackingKayuSettingHubSetCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAddTaxOriFtzHsCodeListCompleted As GetAddTaxOriFtzHsCodeListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAddTaxOriFtzHsCodeListV2Completed As GetAddTaxOriFtzHsCodeListV2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetTransactionWeightDimensionCompleted As GetTransactionWeightDimensionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetConsWeightCompleted As GetConsWeightCompletedEventHandler
        
        '''<remarks/>
        Public Event ExpeditionPickupListCompleted As ExpeditionPickupListCompletedEventHandler
        
        '''<remarks/>
        Public Event ExpeditionPickupProcessCompleted As ExpeditionPickupProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event SNODraftListCompleted As SNODraftListCompletedEventHandler
        
        '''<remarks/>
        Public Event SNIDraftListCompleted As SNIDraftListCompletedEventHandler
        
        '''<remarks/>
        Public Event TrackingQueryCompleted As TrackingQueryCompletedEventHandler
        
        '''<remarks/>
        Public Event TrackingUpdateStatusCompleted As TrackingUpdateStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event TrackingReverseStatusCompleted As TrackingReverseStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event CustomUpdateStatusCompleted As CustomUpdateStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSuratJalanTokoCompleted As GetSuratJalanTokoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTandaTerimaTokoCompleted As GetTandaTerimaTokoCompletedEventHandler
        
        '''<remarks/>
        Public Event TrackingUploadStatusTemplateCompleted As TrackingUploadStatusTemplateCompletedEventHandler
        
        '''<remarks/>
        Public Event TrackingUploadStatusValidateCompleted As TrackingUploadStatusValidateCompletedEventHandler
        
        '''<remarks/>
        Public Event TrackingUploadStatusProcessCompleted As TrackingUploadStatusProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event SendSMSNewV2Completed As SendSMSNewV2CompletedEventHandler
        
        '''<remarks/>
        Public Event CheckTransactionCompleted As CheckTransactionCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckExistingStatusCompleted As CheckExistingStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event SyncIGRCompleted As SyncIGRCompletedEventHandler
        
        '''<remarks/>
        Public Event StoreStoRtsNotProcessedCompleted As StoreStoRtsNotProcessedCompletedEventHandler
        
        '''<remarks/>
        Public Event TermsAndConditionsCompleted As TermsAndConditionsCompletedEventHandler
        
        '''<remarks/>
        Public Event NewTransactionTrialKaryawanCompleted As NewTransactionTrialKaryawanCompletedEventHandler
        
        '''<remarks/>
        Public Event TrialTransactionListCompleted As TrialTransactionListCompletedEventHandler
        
        '''<remarks/>
        Public Event TrialTransactionDetailCompleted As TrialTransactionDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event SendWhatsAppCompleted As SendWhatsAppCompletedEventHandler
        
        '''<remarks/>
        Public Event WhatsAppSwitchToSMSCompleted As WhatsAppSwitchToSMSCompletedEventHandler
        
        '''<remarks/>
        Public Event AWBTTFSupplierGetListCompleted As AWBTTFSupplierGetListCompletedEventHandler
        
        '''<remarks/>
        Public Event AWBTTFSupplierCreateAWBCompleted As AWBTTFSupplierCreateAWBCompletedEventHandler
        
        '''<remarks/>
        Public Event StoreOfflineProcessCompleted As StoreOfflineProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event StationOpenConsListCompleted As StationOpenConsListCompletedEventHandler
        
        '''<remarks/>
        Public Event StationOpenConsDetailListCompleted As StationOpenConsDetailListCompletedEventHandler
        
        '''<remarks/>
        Public Event RAIProcessCompleted As RAIProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event DraftRAOListAllCompleted As DraftRAOListAllCompletedEventHandler
        
        '''<remarks/>
        Public Event DraftRAOListDetailCompleted As DraftRAOListDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event RAOProcessCompleted As RAOProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsListAllCompleted As ConsListAllCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsNewCompleted As ConsNewCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsProcessCompleted As ConsProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsListDetailCompleted As ConsListDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsDetailUpdateCompleted As ConsDetailUpdateCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsDetailAddDeleteCompleted As ConsDetailAddDeleteCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDCPickupNoListCompleted As GetDCPickupNoListCompletedEventHandler
        
        '''<remarks/>
        Public Event WHOListDCCompleted As WHOListDCCompletedEventHandler
        
        '''<remarks/>
        Public Event WHOListExpCompleted As WHOListExpCompletedEventHandler
        
        '''<remarks/>
        Public Event WHOListDGACompleted As WHOListDGACompletedEventHandler
        
        '''<remarks/>
        Public Event WHIListDGACompleted As WHIListDGACompletedEventHandler
        
        '''<remarks/>
        Public Event WHOListTakakiCompleted As WHOListTakakiCompletedEventHandler
        
        '''<remarks/>
        Public Event WHIListTakakiCompleted As WHIListTakakiCompletedEventHandler
        
        '''<remarks/>
        Public Event StationTerminalListCompleted As StationTerminalListCompletedEventHandler
        
        '''<remarks/>
        Public Event HubTerminalListCompleted As HubTerminalListCompletedEventHandler
        
        '''<remarks/>
        Public Event PickupAtHubListCompleted As PickupAtHubListCompletedEventHandler
        
        '''<remarks/>
        Public Event PickupAtHubAccountListCompleted As PickupAtHubAccountListCompletedEventHandler
        
        '''<remarks/>
        Public Event HubToHubAccountListCompleted As HubToHubAccountListCompletedEventHandler
        
        '''<remarks/>
        Public Event WHIListHubToHubCompleted As WHIListHubToHubCompletedEventHandler
        
        '''<remarks/>
        Public Event WHOListHubToHubCompleted As WHOListHubToHubCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckDstHUBCompleted As CheckDstHUBCompletedEventHandler
        
        '''<remarks/>
        Public Event WHOListHubToCustomerCompleted As WHOListHubToCustomerCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSuratJalanByDriverIDCompleted As GetSuratJalanByDriverIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSuratJalanDetailByDriverIDCompleted As GetSuratJalanDetailByDriverIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSuratJalanByDriverIDWithDetailCompleted As GetSuratJalanByDriverIDWithDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event CourierHandOverGetListCompleted As CourierHandOverGetListCompletedEventHandler
        
        '''<remarks/>
        Public Event CourierHandOverProcessCompleted As CourierHandOverProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLokerListCompleted As GetLokerListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAwbInLokerListCompleted As GetAwbInLokerListCompletedEventHandler
        
        '''<remarks/>
        Public Event WHOListInstantPickupCompleted As WHOListInstantPickupCompletedEventHandler
        
        '''<remarks/>
        Public Event InstantPickupReturListCompleted As InstantPickupReturListCompletedEventHandler
        
        '''<remarks/>
        Public Event InstantPickupReturProcessCompleted As InstantPickupReturProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDaftarJemputByDriverIDCompleted As GetDaftarJemputByDriverIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDaftarJemputDetailByDriverIDCompleted As GetDaftarJemputDetailByDriverIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDaftarJemputByDriverIDWithDetailCompleted As GetDaftarJemputByDriverIDWithDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDaftarBatalJemputByDriverIDCompleted As GetDaftarBatalJemputByDriverIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDaftarBatalJemputDetailByDriverIDCompleted As GetDaftarBatalJemputDetailByDriverIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDaftarBatalJemputByDriverIDWithDetailCompleted As GetDaftarBatalJemputByDriverIDWithDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event SetAccountAutoOrderThirdPartyCompleted As SetAccountAutoOrderThirdPartyCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDaftarSamedayJemputByDriverIDWithDetailCompleted As GetDaftarSamedayJemputByDriverIDWithDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateReasonReturToDoorCompleted As UpdateReasonReturToDoorCompletedEventHandler
        
        '''<remarks/>
        Public Event WHIRTSListCompleted As WHIRTSListCompletedEventHandler
        
        '''<remarks/>
        Public Event WHIGroupingListCompleted As WHIGroupingListCompletedEventHandler
        
        '''<remarks/>
        Public Event WHIGroupingProcessCompleted As WHIGroupingProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event WHIListExpSJCompleted As WHIListExpSJCompletedEventHandler
        
        '''<remarks/>
        Public Event WHIListExpDetailCompleted As WHIListExpDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event WHIListByDCPickupNoCompleted As WHIListByDCPickupNoCompletedEventHandler
        
        '''<remarks/>
        Public Event DCRequestGetNextPickupNoSampleCompleted As DCRequestGetNextPickupNoSampleCompletedEventHandler
        
        '''<remarks/>
        Public Event DCPickingNewCompleted As DCPickingNewCompletedEventHandler
        
        '''<remarks/>
        Public Event DCPickingDraftCompleted As DCPickingDraftCompletedEventHandler
        
        '''<remarks/>
        Public Event DCPickingFinalCompleted As DCPickingFinalCompletedEventHandler
        
        '''<remarks/>
        Public Event DCPickingRotiCompleted As DCPickingRotiCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRackInStoreListCompleted As GetRackInStoreListCompletedEventHandler
        
        '''<remarks/>
        Public Event DCPickingManualCompleted As DCPickingManualCompletedEventHandler
        
        '''<remarks/>
        Public Event RTSCreateCompleted As RTSCreateCompletedEventHandler
        
        '''<remarks/>
        Public Event RTSEmailCompleted As RTSEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event RTSShEmailCompleted As RTSShEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetHubDeliveryListForRTSCompleted As GetHubDeliveryListForRTSCompletedEventHandler
        
        '''<remarks/>
        Public Event CannotDopOnRtsDateCompleted As CannotDopOnRtsDateCompletedEventHandler
        
        '''<remarks/>
        Public Event SRRCreateCompleted As SRRCreateCompletedEventHandler
        
        '''<remarks/>
        Public Event SRREmailCompleted As SRREmailCompletedEventHandler
        
        '''<remarks/>
        Public Event SRRShEmailCompleted As SRRShEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event StationGroupingListCompleted As StationGroupingListCompletedEventHandler
        
        '''<remarks/>
        Public Event StationGroupingConsNewCompleted As StationGroupingConsNewCompletedEventHandler
        
        '''<remarks/>
        Public Event StationGroupingDetailListCompleted As StationGroupingDetailListCompletedEventHandler
        
        '''<remarks/>
        Public Event StationGroupingConsUpdateCompleted As StationGroupingConsUpdateCompletedEventHandler
        
        '''<remarks/>
        Public Event StationGroupingConsProcessCompleted As StationGroupingConsProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event DispatchListHubCompleted As DispatchListHubCompletedEventHandler
        
        '''<remarks/>
        Public Event DispatchProcessHubCompleted As DispatchProcessHubCompletedEventHandler
        
        '''<remarks/>
        Public Event DispatchPrintSJHubCompleted As DispatchPrintSJHubCompletedEventHandler
        
        '''<remarks/>
        Public Event DispatchReturListHubCompleted As DispatchReturListHubCompletedEventHandler
        
        '''<remarks/>
        Public Event ArriveDriverListHubCompleted As ArriveDriverListHubCompletedEventHandler
        
        '''<remarks/>
        Public Event ArriveDriverProcessHubCompleted As ArriveDriverProcessHubCompletedEventHandler
        
        '''<remarks/>
        Public Event ArriveListHubCompleted As ArriveListHubCompletedEventHandler
        
        '''<remarks/>
        Public Event ArriveProcessHubCompleted As ArriveProcessHubCompletedEventHandler
        
        '''<remarks/>
        Public Event HubGroupingListCompleted As HubGroupingListCompletedEventHandler
        
        '''<remarks/>
        Public Event HubConsPickupListCompleted As HubConsPickupListCompletedEventHandler
        
        '''<remarks/>
        Public Event HubConsIncomingListCompleted As HubConsIncomingListCompletedEventHandler
        
        '''<remarks/>
        Public Event EComNewPickupListCompleted As EComNewPickupListCompletedEventHandler
        
        '''<remarks/>
        Public Event EcomNewHubPickupListCompleted As EcomNewHubPickupListCompletedEventHandler
        
        '''<remarks/>
        Public Event EcomNewHubPickupListV2Completed As EcomNewHubPickupListV2CompletedEventHandler
        
        '''<remarks/>
        Public Event AutoOrderNewTransactionDeliveryManCompleted As AutoOrderNewTransactionDeliveryManCompletedEventHandler
        
        '''<remarks/>
        Public Event AutoOrderNewTransactionCompleted As AutoOrderNewTransactionCompletedEventHandler
        
        '''<remarks/>
        Public Event AutoOrderNewTransactionMultiDropCompleted As AutoOrderNewTransactionMultiDropCompletedEventHandler
        
        '''<remarks/>
        Public Event AutoOrderThirdPartyUpdTrxDeliveryManCompleted As AutoOrderThirdPartyUpdTrxDeliveryManCompletedEventHandler
        
        '''<remarks/>
        Public Event AutoOrderUpdateStatusPUQv2Completed As AutoOrderUpdateStatusPUQv2CompletedEventHandler
        
        '''<remarks/>
        Public Event AutoOrderUpdateStatusPUQCompleted As AutoOrderUpdateStatusPUQCompletedEventHandler
        
        '''<remarks/>
        Public Event AutoOrderUpdateStatusPULv2Completed As AutoOrderUpdateStatusPULv2CompletedEventHandler
        
        '''<remarks/>
        Public Event AutoOrderUpdateStatusHDVv2Completed As AutoOrderUpdateStatusHDVv2CompletedEventHandler
        
        '''<remarks/>
        Public Event AutoOrderUpdateStatusHDVCompleted As AutoOrderUpdateStatusHDVCompletedEventHandler
        
        '''<remarks/>
        Public Event AutoOrderUpdateStatusHDSv2Completed As AutoOrderUpdateStatusHDSv2CompletedEventHandler
        
        '''<remarks/>
        Public Event AutoOrderUpdateStatusHDSCompleted As AutoOrderUpdateStatusHDSCompletedEventHandler
        
        '''<remarks/>
        Public Event AutoOrderUpdateStatusOOCRTSCompleted As AutoOrderUpdateStatusOOCRTSCompletedEventHandler
        
        '''<remarks/>
        Public Event AutoOrderUpdateStatusRTSFLRCompleted As AutoOrderUpdateStatusRTSFLRCompletedEventHandler
        
        '''<remarks/>
        Public Event AutoOrderCancelOrderCompleted As AutoOrderCancelOrderCompletedEventHandler
        
        '''<remarks/>
        Public Event AutoOrderAdjustStatusRTSCompleted As AutoOrderAdjustStatusRTSCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAddInsuranceCompleted As GetAddInsuranceCompletedEventHandler
        
        '''<remarks/>
        Public Event BatchTrackNumReserveCompleted As BatchTrackNumReserveCompletedEventHandler
        
        '''<remarks/>
        Public Event BatchTrackNumCreateCompleted As BatchTrackNumCreateCompletedEventHandler
        
        '''<remarks/>
        Public Event DispatchListCompleted As DispatchListCompletedEventHandler
        
        '''<remarks/>
        Public Event DispatchProcessCompleted As DispatchProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event DispatchPrintSJCompleted As DispatchPrintSJCompletedEventHandler
        
        '''<remarks/>
        Public Event DispatchReturListCompleted As DispatchReturListCompletedEventHandler
        
        '''<remarks/>
        Public Event PickupCheckPINCompleted As PickupCheckPINCompletedEventHandler
        
        '''<remarks/>
        Public Event PickupRequestCompleted As PickupRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event PickupProcessedCompleted As PickupProcessedCompletedEventHandler
        
        '''<remarks/>
        Public Event ArriveDriverListCompleted As ArriveDriverListCompletedEventHandler
        
        '''<remarks/>
        Public Event ArriveDriverProcessCompleted As ArriveDriverProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event ArriveListCompleted As ArriveListCompletedEventHandler
        
        '''<remarks/>
        Public Event ArriveProcessCompleted As ArriveProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateRackListCompleted As UpdateRackListCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdatePJBHubPostalCodeListCompleted As UpdatePJBHubPostalCodeListCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateHubPostalCodeListCompleted As UpdateHubPostalCodeListCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateAccountHubPostalCodeListCompleted As UpdateAccountHubPostalCodeListCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateInstantHubPostalCodeListCompleted As UpdateInstantHubPostalCodeListCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdatePoinkuHubPostalCodeListCompleted As UpdatePoinkuHubPostalCodeListCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCourierDeliveryCostList_ObsoleteCompleted As UpdateCourierDeliveryCostList_ObsoleteCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCourierAddressDeliveryCostListCompleted As UpdateCourierAddressDeliveryCostListCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCourierDooringDeliveryCostListCompleted As UpdateCourierDooringDeliveryCostListCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCourierPickupDeliveryCostListCompleted As UpdateCourierPickupDeliveryCostListCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCourierFleetRentalCostListCompleted As UpdateCourierFleetRentalCostListCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateHubExpeditionListCompleted As UpdateHubExpeditionListCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateLastMileExpeditionListCompleted As UpdateLastMileExpeditionListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetHubProcessTypeExpeditionCompleted As GetHubProcessTypeExpeditionCompletedEventHandler
        
        '''<remarks/>
        Public Event SetHubProcessTypeExpeditionCompleted As SetHubProcessTypeExpeditionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMandatoryExpeditionConsCompleted As GetMandatoryExpeditionConsCompletedEventHandler
        
        '''<remarks/>
        Public Event SetMandatoryExpeditionConsCompleted As SetMandatoryExpeditionConsCompletedEventHandler
        
        '''<remarks/>
        Public Event FleetRentalUpdateStatusCompleted As FleetRentalUpdateStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountFleetRentalVehicleTypeListCompleted As GetAccountFleetRentalVehicleTypeListCompletedEventHandler
        
        '''<remarks/>
        Public Event SetAccountFleetRentalVehicleTypeListCompleted As SetAccountFleetRentalVehicleTypeListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFleetRentalVehicleTypeListByAccountCompleted As GetFleetRentalVehicleTypeListByAccountCompletedEventHandler
        
        '''<remarks/>
        Public Event NewAccountDownloadTemplateCompleted As NewAccountDownloadTemplateCompletedEventHandler
        
        '''<remarks/>
        Public Event NewAccountValidateCompleted As NewAccountValidateCompletedEventHandler
        
        '''<remarks/>
        Public Event NewAccountCreateCompleted As NewAccountCreateCompletedEventHandler
        
        '''<remarks/>
        Public Event NewAccountDeleteCompleted As NewAccountDeleteCompletedEventHandler
        
        '''<remarks/>
        Public Event NewAccountCopyCompleted As NewAccountCopyCompletedEventHandler
        
        '''<remarks/>
        Public Event NewAccountSearchByKeywordCompleted As NewAccountSearchByKeywordCompletedEventHandler
        
        '''<remarks/>
        Public Event NewAccountGetInfoCompleted As NewAccountGetInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event NewAccountUpdateCompleted As NewAccountUpdateCompletedEventHandler
        
        '''<remarks/>
        Public Event NewAccountSupplierAddressCodeCompleted As NewAccountSupplierAddressCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSuppAddrCodeListCompleted As GetSuppAddrCodeListCompletedEventHandler
        
        '''<remarks/>
        Public Event NewExpeditionDownloadTemplateCompleted As NewExpeditionDownloadTemplateCompletedEventHandler
        
        '''<remarks/>
        Public Event NewExpeditionValidateCompleted As NewExpeditionValidateCompletedEventHandler
        
        '''<remarks/>
        Public Event NewExpeditionCreateCompleted As NewExpeditionCreateCompletedEventHandler
        
        '''<remarks/>
        Public Event AutoCopyAndReturnCreateAWBCompleted As AutoCopyAndReturnCreateAWBCompletedEventHandler
        
        '''<remarks/>
        Public Event AutoCopyAndReturnGetTrackNumListCompleted As AutoCopyAndReturnGetTrackNumListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCopyAndReturnTrackNumListCompleted As GetCopyAndReturnTrackNumListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCopyAndReturnAccountListCompleted As GetCopyAndReturnAccountListCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateSavingRevenueListCompleted As UpdateSavingRevenueListCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateETAListCompleted As UpdateETAListCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateRateAreaCustomAccountListCompleted As UpdateRateAreaCustomAccountListCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateRateCustomListCompleted As UpdateRateCustomListCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateRateDCCustomListCompleted As UpdateRateDCCustomListCompletedEventHandler
        
        '''<remarks/>
        Public Event Update3PLRateCustomListCompleted As Update3PLRateCustomListCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateRateSellerCategoryAreaCustomListCompleted As UpdateRateSellerCategoryAreaCustomListCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateRateSellerSubCategoryAreaCustomListCompleted As UpdateRateSellerSubCategoryAreaCustomListCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateRateRentalFleetListCompleted As UpdateRateRentalFleetListCompletedEventHandler
        
        '''<remarks/>
        Public Event DraftRAIListCompleted As DraftRAIListCompletedEventHandler
        
        '''<remarks/>
        Public Event SetRegionHubListCompleted As SetRegionHubListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRegionListCompleted As GetRegionListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStationListCompleted As GetStationListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStationPartnerListCompleted As GetStationPartnerListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStationRouteListCompleted As GetStationRouteListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountPickupAddressListCompleted As GetAccountPickupAddressListCompletedEventHandler
        
        '''<remarks/>
        Public Event SetAccountPickupAddressListCompleted As SetAccountPickupAddressListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountPickupAddressListByPAccountCompleted As GetAccountPickupAddressListByPAccountCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountPickupListByStationCompleted As GetAccountPickupListByStationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountPickupListByStationZoneCompleted As GetAccountPickupListByStationZoneCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStationHubListCompleted As GetStationHubListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetHubListCompleted As GetHubListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetHubPartnerListCompleted As GetHubPartnerListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRackListCompleted As GetRackListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetHubExpeditionListCompleted As GetHubExpeditionListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetReprintKeywordCompleted As GetReprintKeywordCompletedEventHandler
        
        '''<remarks/>
        Public Event GetIncomingSuratJalanListCompleted As GetIncomingSuratJalanListCompletedEventHandler
        
        '''<remarks/>
        Public Event QueryToolsCompleted As QueryToolsCompletedEventHandler
        
        '''<remarks/>
        Public Event QueryCallProcedureDatatableCompleted As QueryCallProcedureDatatableCompletedEventHandler
        
        '''<remarks/>
        Public Event PettyCashSubCategoryListCompleted As PettyCashSubCategoryListCompletedEventHandler
        
        '''<remarks/>
        Public Event PettyCashReportListCompleted As PettyCashReportListCompletedEventHandler
        
        '''<remarks/>
        Public Event PettyCashHubExpenseAddCompleted As PettyCashHubExpenseAddCompletedEventHandler
        
        '''<remarks/>
        Public Event PettyCashHubExpenseDeleteCompleted As PettyCashHubExpenseDeleteCompletedEventHandler
        
        '''<remarks/>
        Public Event PettyCashHubExpenseApprovalCompleted As PettyCashHubExpenseApprovalCompletedEventHandler
        
        '''<remarks/>
        Public Event PettyCashHubExpenseDeleteRecordCompleted As PettyCashHubExpenseDeleteRecordCompletedEventHandler
        
        '''<remarks/>
        Public Event PettyCashHubFindRecordCompleted As PettyCashHubFindRecordCompletedEventHandler
        
        '''<remarks/>
        Public Event PettyCashHubFinalizeRecordCompleted As PettyCashHubFinalizeRecordCompletedEventHandler
        
        '''<remarks/>
        Public Event PettyCashHubProcessJournalCompleted As PettyCashHubProcessJournalCompletedEventHandler
        
        '''<remarks/>
        Public Event DocumentUploadCategoryListCompleted As DocumentUploadCategoryListCompletedEventHandler
        
        '''<remarks/>
        Public Event DocumentUploadAddFileCompleted As DocumentUploadAddFileCompletedEventHandler
        
        '''<remarks/>
        Public Event DocumentUploadFindRecordCompleted As DocumentUploadFindRecordCompletedEventHandler
        
        '''<remarks/>
        Public Event TanyaDataITTokoCategoryListCompleted As TanyaDataITTokoCategoryListCompletedEventHandler
        
        '''<remarks/>
        Public Event TanyaDataITTokoGetDataCompleted As TanyaDataITTokoGetDataCompletedEventHandler
        
        '''<remarks/>
        Public Event TanyaDataITTokoEmailCompleted As TanyaDataITTokoEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLoginByUserAndTypeCompleted As GetLoginByUserAndTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateLoginByUserAndTypeCompleted As UpdateLoginByUserAndTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountSupplierIndomaretListCompleted As GetAccountSupplierIndomaretListCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateAccountSupplierIndomaretCompleted As UpdateAccountSupplierIndomaretCompletedEventHandler
        
        '''<remarks/>
        Public Event GetReversePickupOAwbCompleted As GetReversePickupOAwbCompletedEventHandler
        
        '''<remarks/>
        Public Event NewTransactionDraftBySalesOrderCompleted As NewTransactionDraftBySalesOrderCompletedEventHandler
        
        '''<remarks/>
        Public Event NewTransactionBySalesOrderCompleted As NewTransactionBySalesOrderCompletedEventHandler
        
        '''<remarks/>
        Public Event NewTransactionDraftECommerceCompleted As NewTransactionDraftECommerceCompletedEventHandler
        
        '''<remarks/>
        Public Event NewTransactionECommerceCompleted As NewTransactionECommerceCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateTransactionDeliveryInfoCompleted As UpdateTransactionDeliveryInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event NewTransactionBatchCompleted As NewTransactionBatchCompletedEventHandler
        
        '''<remarks/>
        Public Event ExpireNewTransactionCompleted As ExpireNewTransactionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTransactionDataCompleted As GetTransactionDataCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateTransactionCompleted As UpdateTransactionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTransactionUpdateLogChangeTypeCompleted As GetTransactionUpdateLogChangeTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event AutoOrderSwitchKeepFallbackCompleted As AutoOrderSwitchKeepFallbackCompletedEventHandler
        
        '''<remarks/>
        Public Event AutoOrderSwitchKeepFallbackExpressCompleted As AutoOrderSwitchKeepFallbackExpressCompletedEventHandler
        
        '''<remarks/>
        Public Event AutoOrderSwitchKeepFallbackRegularCompleted As AutoOrderSwitchKeepFallbackRegularCompletedEventHandler
        
        '''<remarks/>
        Public Event AutoOrderSwitchKeepFallbackSamedayCompleted As AutoOrderSwitchKeepFallbackSamedayCompletedEventHandler
        
        '''<remarks/>
        Public Event AutoOrderSwitchKeepFallbackSamedayMobilCompleted As AutoOrderSwitchKeepFallbackSamedayMobilCompletedEventHandler
        
        '''<remarks/>
        Public Event AutoOrderDoorPickupCompleted As AutoOrderDoorPickupCompletedEventHandler
        
        '''<remarks/>
        Public Event AutoOrderDoorPickupUpdateStatusHOSCompleted As AutoOrderDoorPickupUpdateStatusHOSCompletedEventHandler
        
        '''<remarks/>
        Public Event AutoOrderNewTransactionV2Completed As AutoOrderNewTransactionV2CompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateFavoriteAddressCompleted As UpdateFavoriteAddressCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertFavoriteAddressDraftCompleted As InsertFavoriteAddressDraftCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertFavoriteAddressCompleted As InsertFavoriteAddressCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFavoriteAddressListCompleted As GetFavoriteAddressListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFavoriteAddressListIPPHOCompleted As GetFavoriteAddressListIPPHOCompletedEventHandler
        
        '''<remarks/>
        Public Event WebExpGetHubListCompleted As WebExpGetHubListCompletedEventHandler
        
        '''<remarks/>
        Public Event WebExpGetExpeditionListCompleted As WebExpGetExpeditionListCompletedEventHandler
        
        '''<remarks/>
        Public Event WebExpGetExpeditionSLAListCompleted As WebExpGetExpeditionSLAListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTransactionConstCompleted As GetTransactionConstCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPackageCategoryListCompleted As GetPackageCategoryListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDeliveryCostWeightDimensionCompleted As GetDeliveryCostWeightDimensionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDeliveryCostFleetRentalCompleted As GetDeliveryCostFleetRentalCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDeliveryCostCoreCompleted As GetDeliveryCostCoreCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDeliveryCostCompleted As GetDeliveryCostCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDeliveryCostV2Completed As GetDeliveryCostV2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetDeliveryServiceListCompleted As GetDeliveryServiceListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDeliveryServiceListV2Completed As GetDeliveryServiceListV2CompletedEventHandler
        
        '''<remarks/>
        Public Event GetTransactionListCompleted As GetTransactionListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetConsigneeHistoryCompleted As GetConsigneeHistoryCompletedEventHandler
        
        '''<remarks/>
        Public Event GetIndomaretStoreListCompleted As GetIndomaretStoreListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetIndomaretStoreLocationListCompleted As GetIndomaretStoreLocationListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetIndomaretDCListCompleted As GetIndomaretDCListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetIndomaretDCDepoListCompleted As GetIndomaretDCDepoListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSuggestionStoreCompleted As GetSuggestionStoreCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPropinsiListCompleted As GetPropinsiListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetKotaKabupatenListCompleted As GetKotaKabupatenListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetKecamatanListCompleted As GetKecamatanListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetKelurahanListCompleted As GetKelurahanListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetKodePosListCompleted As GetKodePosListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPostalCodeListByKeywordCompleted As GetPostalCodeListByKeywordCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDCListCompleted As GetDCListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDCDGAAccountListCompleted As GetDCDGAAccountListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDCDGAAccountListDetailCompleted As GetDCDGAAccountListDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDCDGAListCompleted As GetDCDGAListCompletedEventHandler
        
        '''<remarks/>
        Public Event IndomaretStoreClosedListCompleted As IndomaretStoreClosedListCompletedEventHandler
        
        '''<remarks/>
        Public Event IndomaretStoreClosedOpenCompleted As IndomaretStoreClosedOpenCompletedEventHandler
        
        '''<remarks/>
        Public Event MotherstoreValidationCompleted As MotherstoreValidationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetIndogrosirStoreListCompleted As GetIndogrosirStoreListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMisterDonutStoreListCompleted As GetMisterDonutStoreListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPointCoffeeStandAloneStoreListCompleted As GetPointCoffeeStandAloneStoreListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRegionHubListCompleted As GetRegionHubListCompletedEventHandler
        
        '''<remarks/>
        Public Event DOPEmailCompleted As DOPEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event CDVEmailCompleted As CDVEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event CDSEmailCompleted As CDSEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event CDSSenderEmailCompleted As CDSSenderEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event CDSConfirmationGetTransactionCompleted As CDSConfirmationGetTransactionCompletedEventHandler
        
        '''<remarks/>
        Public Event CDSConfirmationSetConfirmationCompleted As CDSConfirmationSetConfirmationCompletedEventHandler
        
        '''<remarks/>
        Public Event PINListRequestCompleted As PINListRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event WHOOriShEmailCompleted As WHOOriShEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event WHOOriEmailCompleted As WHOOriEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event ComplainEmailCompleted As ComplainEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetServiceTypeListCompleted As GetServiceTypeListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCountryListCompleted As GetCountryListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProvinceListCompleted As GetProvinceListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCityListCompleted As GetCityListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSubDistrictAndPostalCodeListCompleted As GetSubDistrictAndPostalCodeListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDistrictListCompleted As GetDistrictListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSubDistrictListCompleted As GetSubDistrictListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPostalCodeListCompleted As GetPostalCodeListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPostalCodeCompleted As GetPostalCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSubDistrictListByPostalCodeCompleted As GetSubDistrictListByPostalCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDistrictByKeywordCompleted As GetDistrictByKeywordCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCountryListByKeywordCompleted As GetCountryListByKeywordCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPackageConditionListCompleted As GetPackageConditionListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetThirdPartyListCompleted As GetThirdPartyListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetExpeditionListCompleted As GetExpeditionListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetExpeditionListMatrixCompleted As GetExpeditionListMatrixCompletedEventHandler
        
        '''<remarks/>
        Public Event GetJalurEkspedisiListCompleted As GetJalurEkspedisiListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountCategoryListCompleted As GetAccountCategoryListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountSubCategoryListCompleted As GetAccountSubCategoryListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetECommerceListWithCategoryAndSubCategoryCompleted As GetECommerceListWithCategoryAndSubCategoryCompletedEventHandler
        
        '''<remarks/>
        Public Event GetECommerceListCompleted As GetECommerceListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetECommerceListByFinTypeCompleted As GetECommerceListByFinTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetVehicleTypeListCompleted As GetVehicleTypeListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTrackingStatusListCompleted As GetTrackingStatusListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTrackingStatusListForReportCompleted As GetTrackingStatusListForReportCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTrackingStatusMappingListCompleted As GetTrackingStatusMappingListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountDCListCompleted As GetAccountDCListCompletedEventHandler
        
        '''<remarks/>
        Public Event SetAccountDCListCompleted As SetAccountDCListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountCityTruckingListCompleted As GetAccountCityTruckingListCompletedEventHandler
        
        '''<remarks/>
        Public Event SetAccountCityTruckingListCompleted As SetAccountCityTruckingListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountCityDoorListCompleted As GetAccountCityDoorListCompletedEventHandler
        
        '''<remarks/>
        Public Event SetAccountCityDoorListCompleted As SetAccountCityDoorListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountCityDoorToPickupListCompleted As GetAccountCityDoorToPickupListCompletedEventHandler
        
        '''<remarks/>
        Public Event SetAccountCityDoorToPickupListCompleted As SetAccountCityDoorToPickupListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountCityPickupListCompleted As GetAccountCityPickupListCompletedEventHandler
        
        '''<remarks/>
        Public Event SetAccountCityPickupListCompleted As SetAccountCityPickupListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountSettingTypeListCompleted As GetAccountSettingTypeListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountSettingCompleted As GetAccountSettingCompletedEventHandler
        
        '''<remarks/>
        Public Event SetAccountSettingCompleted As SetAccountSettingCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountMaxWeightCompleted As GetAccountMaxWeightCompletedEventHandler
        
        '''<remarks/>
        Public Event SetAccountMaxWeightCompleted As SetAccountMaxWeightCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountMaxWeight3PLCompleted As GetAccountMaxWeight3PLCompletedEventHandler
        
        '''<remarks/>
        Public Event SetAccountMaxWeight3PLCompleted As SetAccountMaxWeight3PLCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountMaxPckValueCompleted As GetAccountMaxPckValueCompletedEventHandler
        
        '''<remarks/>
        Public Event SetAccountMaxPckValueCompleted As SetAccountMaxPckValueCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountMaxCodValueCompleted As GetAccountMaxCodValueCompletedEventHandler
        
        '''<remarks/>
        Public Event SetAccountMaxCodValueCompleted As SetAccountMaxCodValueCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountMaxDimensionCompleted As GetAccountMaxDimensionCompletedEventHandler
        
        '''<remarks/>
        Public Event SetAccountMaxDimensionCompleted As SetAccountMaxDimensionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountMaxAndSpcDimensionCompleted As GetAccountMaxAndSpcDimensionCompletedEventHandler
        
        '''<remarks/>
        Public Event SetAccountMaxAndSpcDimensionCompleted As SetAccountMaxAndSpcDimensionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountMaxAndSpcDimension3PLCompleted As GetAccountMaxAndSpcDimension3PLCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountCountryListCompleted As GetAccountCountryListCompletedEventHandler
        
        '''<remarks/>
        Public Event SetAccountCountryListCompleted As SetAccountCountryListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAccountCoAddrNoNumCompleted As GetAccountCoAddrNoNumCompletedEventHandler
        
        '''<remarks/>
        Public Event SetAccountCoAddrNoNumCompleted As SetAccountCoAddrNoNumCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEWalletListCompleted As GetEWalletListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBankListCompleted As GetBankListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBankListJsonCompleted As GetBankListJsonCompletedEventHandler
        
        '''<remarks/>
        Public Event GetComplainListCompleted As GetComplainListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetNewTracknumKeywordListCompleted As GetNewTracknumKeywordListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDoorPickupSlotCompleted As GetDoorPickupSlotCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateFavoriteAddressDraftCompleted As UpdateFavoriteAddressDraftCompletedEventHandler
        
        '''<remarks/>
        Public Event A_WSDevelopmentCompleted As A_WSDevelopmentCompletedEventHandler
        
        '''<remarks/>
        Public Event ChekConnectionCompleted As ChekConnectionCompletedEventHandler
        
        '''<remarks/>
        Public Event ValidasiIPCompleted As ValidasiIPCompletedEventHandler
        
        '''<remarks/>
        Public Event LoginCompleted As LoginCompletedEventHandler
        
        '''<remarks/>
        Public Event LoginV2Completed As LoginV2CompletedEventHandler
        
        '''<remarks/>
        Public Event LoginResetPasswordCompleted As LoginResetPasswordCompletedEventHandler
        
        '''<remarks/>
        Public Event LoginPasswordUpdateCompleted As LoginPasswordUpdateCompletedEventHandler
        
        '''<remarks/>
        Public Event LoginPasswordUpdateV2Completed As LoginPasswordUpdateV2CompletedEventHandler
        
        '''<remarks/>
        Public Event CheckUserLoginCompleted As CheckUserLoginCompletedEventHandler
        
        '''<remarks/>
        Public Event GetWebProgConstCompleted As GetWebProgConstCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFolderLabelCompleted As GetFolderLabelCompletedEventHandler
        
        '''<remarks/>
        Public Event EmailLabelCompleted As EmailLabelCompletedEventHandler
        
        '''<remarks/>
        Public Event PrintLabelTaxCompleted As PrintLabelTaxCompletedEventHandler
        
        '''<remarks/>
        Public Event PrintConsLabelCompleted As PrintConsLabelCompletedEventHandler
        
        '''<remarks/>
        Public Event PrintLabelCompleted As PrintLabelCompletedEventHandler
        
        '''<remarks/>
        Public Event PrintLabelByRefNoCompleted As PrintLabelByRefNoCompletedEventHandler
        
        '''<remarks/>
        Public Event PrintLabelByOrderNoCompleted As PrintLabelByOrderNoCompletedEventHandler
        
        '''<remarks/>
        Public Event PrintLabelIndogrosirWalkInCompleted As PrintLabelIndogrosirWalkInCompletedEventHandler
        
        '''<remarks/>
        Public Event PrintTandaTerimaIndogrosirWalkInCompleted As PrintTandaTerimaIndogrosirWalkInCompletedEventHandler
        
        '''<remarks/>
        Public Event PrintSuratJalanCompleted As PrintSuratJalanCompletedEventHandler
        
        '''<remarks/>
        Public Event EmailSuratJalanCompleted As EmailSuratJalanCompletedEventHandler
        
        '''<remarks/>
        Public Event PrintSuratJemputBarangCompleted As PrintSuratJemputBarangCompletedEventHandler
        
        '''<remarks/>
        Public Event PrintAwb3plByIPPCompleted As PrintAwb3plByIPPCompletedEventHandler
        
        '''<remarks/>
        Public Event PrintSerahPackingListCompleted As PrintSerahPackingListCompletedEventHandler
        
        '''<remarks/>
        Public Event PrintTandaTerimaCompleted As PrintTandaTerimaCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertTandaTerimaConsCompleted As InsertTandaTerimaConsCompletedEventHandler
        
        '''<remarks/>
        Public Event PrintSuratTugasCompleted As PrintSuratTugasCompletedEventHandler
        
        '''<remarks/>
        Public Event PrintTerminalCompleted As PrintTerminalCompletedEventHandler
        
        '''<remarks/>
        Public Event PrintExpeditionPickupCompleted As PrintExpeditionPickupCompletedEventHandler
        
        '''<remarks/>
        Public Event PINCreateCompleted As PINCreateCompletedEventHandler
        
        '''<remarks/>
        Public Event PINEmailCompleted As PINEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event PINResendCompleted As PINResendCompletedEventHandler
        
        '''<remarks/>
        Public Event PINRequestCompleted As PINRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event DROEmailCompleted As DROEmailCompletedEventHandler
        
        '''<remarks/>
        Public Event DROShEmailCompleted As DROShEmailCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DashboardPartnerPickupRequest", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DashboardPartnerPickupRequest(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef DsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("DashboardPartnerPickupRequest", New Object() {AppName, AppVersion, Param, DsData})
            DsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPickupRequestAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal DsData As System.Data.DataSet)
            Me.DashboardPartnerPickupRequestAsync(AppName, AppVersion, Param, DsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPickupRequestAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal DsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.DashboardPartnerPickupRequestOperationCompleted Is Nothing) Then
                Me.DashboardPartnerPickupRequestOperationCompleted = AddressOf Me.OnDashboardPartnerPickupRequestOperationCompleted
            End If
            Me.InvokeAsync("DashboardPartnerPickupRequest", New Object() {AppName, AppVersion, Param, DsData}, Me.DashboardPartnerPickupRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnDashboardPartnerPickupRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.DashboardPartnerPickupRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DashboardPartnerPickupRequestCompleted(Me, New DashboardPartnerPickupRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DashboardPartnerPickupInquiry", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DashboardPartnerPickupInquiry(ByVal Appname As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("DashboardPartnerPickupInquiry", New Object() {Appname, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPickupInquiryAsync(ByVal Appname As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.DashboardPartnerPickupInquiryAsync(Appname, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPickupInquiryAsync(ByVal Appname As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.DashboardPartnerPickupInquiryOperationCompleted Is Nothing) Then
                Me.DashboardPartnerPickupInquiryOperationCompleted = AddressOf Me.OnDashboardPartnerPickupInquiryOperationCompleted
            End If
            Me.InvokeAsync("DashboardPartnerPickupInquiry", New Object() {Appname, AppVersion, Param, dsData}, Me.DashboardPartnerPickupInquiryOperationCompleted, userState)
        End Sub
        
        Private Sub OnDashboardPartnerPickupInquiryOperationCompleted(ByVal arg As Object)
            If (Not (Me.DashboardPartnerPickupInquiryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DashboardPartnerPickupInquiryCompleted(Me, New DashboardPartnerPickupInquiryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DashboardPartnerPickupUpdateStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DashboardPartnerPickupUpdateStatus(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("DashboardPartnerPickupUpdateStatus", New Object() {AppName, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPickupUpdateStatusAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.DashboardPartnerPickupUpdateStatusAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPickupUpdateStatusAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.DashboardPartnerPickupUpdateStatusOperationCompleted Is Nothing) Then
                Me.DashboardPartnerPickupUpdateStatusOperationCompleted = AddressOf Me.OnDashboardPartnerPickupUpdateStatusOperationCompleted
            End If
            Me.InvokeAsync("DashboardPartnerPickupUpdateStatus", New Object() {AppName, AppVersion, Param, dsData}, Me.DashboardPartnerPickupUpdateStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnDashboardPartnerPickupUpdateStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.DashboardPartnerPickupUpdateStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DashboardPartnerPickupUpdateStatusCompleted(Me, New DashboardPartnerPickupUpdateStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DashboardPartnerPickupRequestDMS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DashboardPartnerPickupRequestDMS(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object
            Dim results() As Object = Me.Invoke("DashboardPartnerPickupRequestDMS", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPickupRequestDMSAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.DashboardPartnerPickupRequestDMSAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPickupRequestDMSAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DashboardPartnerPickupRequestDMSOperationCompleted Is Nothing) Then
                Me.DashboardPartnerPickupRequestDMSOperationCompleted = AddressOf Me.OnDashboardPartnerPickupRequestDMSOperationCompleted
            End If
            Me.InvokeAsync("DashboardPartnerPickupRequestDMS", New Object() {AppName, AppVersion, Param}, Me.DashboardPartnerPickupRequestDMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnDashboardPartnerPickupRequestDMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.DashboardPartnerPickupRequestDMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DashboardPartnerPickupRequestDMSCompleted(Me, New DashboardPartnerPickupRequestDMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DashboardPartnerPickupGetSlot", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DashboardPartnerPickupGetSlot(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DashboardPartnerPickupGetSlot", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPickupGetSlotAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.DashboardPartnerPickupGetSlotAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPickupGetSlotAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DashboardPartnerPickupGetSlotOperationCompleted Is Nothing) Then
                Me.DashboardPartnerPickupGetSlotOperationCompleted = AddressOf Me.OnDashboardPartnerPickupGetSlotOperationCompleted
            End If
            Me.InvokeAsync("DashboardPartnerPickupGetSlot", New Object() {AppName, AppVersion, Param}, Me.DashboardPartnerPickupGetSlotOperationCompleted, userState)
        End Sub
        
        Private Sub OnDashboardPartnerPickupGetSlotOperationCompleted(ByVal arg As Object)
            If (Not (Me.DashboardPartnerPickupGetSlotCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DashboardPartnerPickupGetSlotCompleted(Me, New DashboardPartnerPickupGetSlotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DashboardPartnerPickupFavoriteAddressInsert", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DashboardPartnerPickupFavoriteAddressInsert(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DashboardPartnerPickupFavoriteAddressInsert", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPickupFavoriteAddressInsertAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.DashboardPartnerPickupFavoriteAddressInsertAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPickupFavoriteAddressInsertAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DashboardPartnerPickupFavoriteAddressInsertOperationCompleted Is Nothing) Then
                Me.DashboardPartnerPickupFavoriteAddressInsertOperationCompleted = AddressOf Me.OnDashboardPartnerPickupFavoriteAddressInsertOperationCompleted
            End If
            Me.InvokeAsync("DashboardPartnerPickupFavoriteAddressInsert", New Object() {AppName, AppVersion, Param}, Me.DashboardPartnerPickupFavoriteAddressInsertOperationCompleted, userState)
        End Sub
        
        Private Sub OnDashboardPartnerPickupFavoriteAddressInsertOperationCompleted(ByVal arg As Object)
            If (Not (Me.DashboardPartnerPickupFavoriteAddressInsertCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DashboardPartnerPickupFavoriteAddressInsertCompleted(Me, New DashboardPartnerPickupFavoriteAddressInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DashboardPartnerPickupFavoriteAddressUpdate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DashboardPartnerPickupFavoriteAddressUpdate(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DashboardPartnerPickupFavoriteAddressUpdate", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPickupFavoriteAddressUpdateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.DashboardPartnerPickupFavoriteAddressUpdateAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPickupFavoriteAddressUpdateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DashboardPartnerPickupFavoriteAddressUpdateOperationCompleted Is Nothing) Then
                Me.DashboardPartnerPickupFavoriteAddressUpdateOperationCompleted = AddressOf Me.OnDashboardPartnerPickupFavoriteAddressUpdateOperationCompleted
            End If
            Me.InvokeAsync("DashboardPartnerPickupFavoriteAddressUpdate", New Object() {AppName, AppVersion, Param}, Me.DashboardPartnerPickupFavoriteAddressUpdateOperationCompleted, userState)
        End Sub
        
        Private Sub OnDashboardPartnerPickupFavoriteAddressUpdateOperationCompleted(ByVal arg As Object)
            If (Not (Me.DashboardPartnerPickupFavoriteAddressUpdateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DashboardPartnerPickupFavoriteAddressUpdateCompleted(Me, New DashboardPartnerPickupFavoriteAddressUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DashboardPartnerPickupGetRequestAddress", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DashboardPartnerPickupGetRequestAddress(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DashboardPartnerPickupGetRequestAddress", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPickupGetRequestAddressAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.DashboardPartnerPickupGetRequestAddressAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPickupGetRequestAddressAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DashboardPartnerPickupGetRequestAddressOperationCompleted Is Nothing) Then
                Me.DashboardPartnerPickupGetRequestAddressOperationCompleted = AddressOf Me.OnDashboardPartnerPickupGetRequestAddressOperationCompleted
            End If
            Me.InvokeAsync("DashboardPartnerPickupGetRequestAddress", New Object() {AppName, AppVersion, Param}, Me.DashboardPartnerPickupGetRequestAddressOperationCompleted, userState)
        End Sub
        
        Private Sub OnDashboardPartnerPickupGetRequestAddressOperationCompleted(ByVal arg As Object)
            If (Not (Me.DashboardPartnerPickupGetRequestAddressCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DashboardPartnerPickupGetRequestAddressCompleted(Me, New DashboardPartnerPickupGetRequestAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DashboardPartnerUpdatePickupRequestAddress", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DashboardPartnerUpdatePickupRequestAddress(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DashboardPartnerUpdatePickupRequestAddress", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerUpdatePickupRequestAddressAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.DashboardPartnerUpdatePickupRequestAddressAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerUpdatePickupRequestAddressAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DashboardPartnerUpdatePickupRequestAddressOperationCompleted Is Nothing) Then
                Me.DashboardPartnerUpdatePickupRequestAddressOperationCompleted = AddressOf Me.OnDashboardPartnerUpdatePickupRequestAddressOperationCompleted
            End If
            Me.InvokeAsync("DashboardPartnerUpdatePickupRequestAddress", New Object() {AppName, AppVersion, Param}, Me.DashboardPartnerUpdatePickupRequestAddressOperationCompleted, userState)
        End Sub
        
        Private Sub OnDashboardPartnerUpdatePickupRequestAddressOperationCompleted(ByVal arg As Object)
            If (Not (Me.DashboardPartnerUpdatePickupRequestAddressCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DashboardPartnerUpdatePickupRequestAddressCompleted(Me, New DashboardPartnerUpdatePickupRequestAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DashboardPartnerUpdateDetailPickupItems", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DashboardPartnerUpdateDetailPickupItems(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef DsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("DashboardPartnerUpdateDetailPickupItems", New Object() {AppName, AppVersion, Param, DsData})
            DsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerUpdateDetailPickupItemsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal DsData As System.Data.DataSet)
            Me.DashboardPartnerUpdateDetailPickupItemsAsync(AppName, AppVersion, Param, DsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerUpdateDetailPickupItemsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal DsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.DashboardPartnerUpdateDetailPickupItemsOperationCompleted Is Nothing) Then
                Me.DashboardPartnerUpdateDetailPickupItemsOperationCompleted = AddressOf Me.OnDashboardPartnerUpdateDetailPickupItemsOperationCompleted
            End If
            Me.InvokeAsync("DashboardPartnerUpdateDetailPickupItems", New Object() {AppName, AppVersion, Param, DsData}, Me.DashboardPartnerUpdateDetailPickupItemsOperationCompleted, userState)
        End Sub
        
        Private Sub OnDashboardPartnerUpdateDetailPickupItemsOperationCompleted(ByVal arg As Object)
            If (Not (Me.DashboardPartnerUpdateDetailPickupItemsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DashboardPartnerUpdateDetailPickupItemsCompleted(Me, New DashboardPartnerUpdateDetailPickupItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DashboardPartnerPickupGetDetailReqId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DashboardPartnerPickupGetDetailReqId(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DashboardPartnerPickupGetDetailReqId", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPickupGetDetailReqIdAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.DashboardPartnerPickupGetDetailReqIdAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPickupGetDetailReqIdAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DashboardPartnerPickupGetDetailReqIdOperationCompleted Is Nothing) Then
                Me.DashboardPartnerPickupGetDetailReqIdOperationCompleted = AddressOf Me.OnDashboardPartnerPickupGetDetailReqIdOperationCompleted
            End If
            Me.InvokeAsync("DashboardPartnerPickupGetDetailReqId", New Object() {AppName, AppVersion, Param}, Me.DashboardPartnerPickupGetDetailReqIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnDashboardPartnerPickupGetDetailReqIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.DashboardPartnerPickupGetDetailReqIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DashboardPartnerPickupGetDetailReqIdCompleted(Me, New DashboardPartnerPickupGetDetailReqIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPJBAccountItemListByKeyword", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPJBAccountItemListByKeyword(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetPJBAccountItemListByKeyword", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPJBAccountItemListByKeywordAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetPJBAccountItemListByKeywordAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPJBAccountItemListByKeywordAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetPJBAccountItemListByKeywordOperationCompleted Is Nothing) Then
                Me.GetPJBAccountItemListByKeywordOperationCompleted = AddressOf Me.OnGetPJBAccountItemListByKeywordOperationCompleted
            End If
            Me.InvokeAsync("GetPJBAccountItemListByKeyword", New Object() {AppName, AppVersion, Param}, Me.GetPJBAccountItemListByKeywordOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPJBAccountItemListByKeywordOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPJBAccountItemListByKeywordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPJBAccountItemListByKeywordCompleted(Me, New GetPJBAccountItemListByKeywordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPJBDetailItemList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPJBDetailItemList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetPJBDetailItemList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPJBDetailItemListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetPJBDetailItemListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPJBDetailItemListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetPJBDetailItemListOperationCompleted Is Nothing) Then
                Me.GetPJBDetailItemListOperationCompleted = AddressOf Me.OnGetPJBDetailItemListOperationCompleted
            End If
            Me.InvokeAsync("GetPJBDetailItemList", New Object() {AppName, AppVersion, Param}, Me.GetPJBDetailItemListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPJBDetailItemListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPJBDetailItemListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPJBDetailItemListCompleted(Me, New GetPJBDetailItemListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DashboardPartnerPickupPairAWBPJB", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DashboardPartnerPickupPairAWBPJB(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DashboardPartnerPickupPairAWBPJB", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPickupPairAWBPJBAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.DashboardPartnerPickupPairAWBPJBAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPickupPairAWBPJBAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DashboardPartnerPickupPairAWBPJBOperationCompleted Is Nothing) Then
                Me.DashboardPartnerPickupPairAWBPJBOperationCompleted = AddressOf Me.OnDashboardPartnerPickupPairAWBPJBOperationCompleted
            End If
            Me.InvokeAsync("DashboardPartnerPickupPairAWBPJB", New Object() {AppName, AppVersion, Param}, Me.DashboardPartnerPickupPairAWBPJBOperationCompleted, userState)
        End Sub
        
        Private Sub OnDashboardPartnerPickupPairAWBPJBOperationCompleted(ByVal arg As Object)
            If (Not (Me.DashboardPartnerPickupPairAWBPJBCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DashboardPartnerPickupPairAWBPJBCompleted(Me, New DashboardPartnerPickupPairAWBPJBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DashboardPartnerAutoCreatePickupRequest", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DashboardPartnerAutoCreatePickupRequest(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object
            Dim results() As Object = Me.Invoke("DashboardPartnerAutoCreatePickupRequest", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerAutoCreatePickupRequestAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.DashboardPartnerAutoCreatePickupRequestAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerAutoCreatePickupRequestAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DashboardPartnerAutoCreatePickupRequestOperationCompleted Is Nothing) Then
                Me.DashboardPartnerAutoCreatePickupRequestOperationCompleted = AddressOf Me.OnDashboardPartnerAutoCreatePickupRequestOperationCompleted
            End If
            Me.InvokeAsync("DashboardPartnerAutoCreatePickupRequest", New Object() {AppName, AppVersion, Param}, Me.DashboardPartnerAutoCreatePickupRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnDashboardPartnerAutoCreatePickupRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.DashboardPartnerAutoCreatePickupRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DashboardPartnerAutoCreatePickupRequestCompleted(Me, New DashboardPartnerAutoCreatePickupRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DashboardPartnerPickupGetPickupRequestTemplateList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DashboardPartnerPickupGetPickupRequestTemplateList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DashboardPartnerPickupGetPickupRequestTemplateList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPickupGetPickupRequestTemplateListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.DashboardPartnerPickupGetPickupRequestTemplateListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPickupGetPickupRequestTemplateListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DashboardPartnerPickupGetPickupRequestTemplateListOperationCompleted Is Nothing) Then
                Me.DashboardPartnerPickupGetPickupRequestTemplateListOperationCompleted = AddressOf Me.OnDashboardPartnerPickupGetPickupRequestTemplateListOperationCompleted
            End If
            Me.InvokeAsync("DashboardPartnerPickupGetPickupRequestTemplateList", New Object() {AppName, AppVersion, Param}, Me.DashboardPartnerPickupGetPickupRequestTemplateListOperationCompleted, userState)
        End Sub
        
        Private Sub OnDashboardPartnerPickupGetPickupRequestTemplateListOperationCompleted(ByVal arg As Object)
            If (Not (Me.DashboardPartnerPickupGetPickupRequestTemplateListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DashboardPartnerPickupGetPickupRequestTemplateListCompleted(Me, New DashboardPartnerPickupGetPickupRequestTemplateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTemplatePickupRequestAddress", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTemplatePickupRequestAddress(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetTemplatePickupRequestAddress", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTemplatePickupRequestAddressAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetTemplatePickupRequestAddressAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTemplatePickupRequestAddressAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetTemplatePickupRequestAddressOperationCompleted Is Nothing) Then
                Me.GetTemplatePickupRequestAddressOperationCompleted = AddressOf Me.OnGetTemplatePickupRequestAddressOperationCompleted
            End If
            Me.InvokeAsync("GetTemplatePickupRequestAddress", New Object() {AppName, AppVersion, Param}, Me.GetTemplatePickupRequestAddressOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTemplatePickupRequestAddressOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTemplatePickupRequestAddressCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTemplatePickupRequestAddressCompleted(Me, New GetTemplatePickupRequestAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAutoPickupRequestSetting", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAutoPickupRequestSetting(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAutoPickupRequestSetting", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAutoPickupRequestSettingAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetAutoPickupRequestSettingAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAutoPickupRequestSettingAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAutoPickupRequestSettingOperationCompleted Is Nothing) Then
                Me.GetAutoPickupRequestSettingOperationCompleted = AddressOf Me.OnGetAutoPickupRequestSettingOperationCompleted
            End If
            Me.InvokeAsync("GetAutoPickupRequestSetting", New Object() {AppName, AppVersion, Param}, Me.GetAutoPickupRequestSettingOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAutoPickupRequestSettingOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAutoPickupRequestSettingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAutoPickupRequestSettingCompleted(Me, New GetAutoPickupRequestSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetAutoPickupRequestSetting", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetAutoPickupRequestSetting(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SetAutoPickupRequestSetting", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetAutoPickupRequestSettingAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SetAutoPickupRequestSettingAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetAutoPickupRequestSettingAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SetAutoPickupRequestSettingOperationCompleted Is Nothing) Then
                Me.SetAutoPickupRequestSettingOperationCompleted = AddressOf Me.OnSetAutoPickupRequestSettingOperationCompleted
            End If
            Me.InvokeAsync("SetAutoPickupRequestSetting", New Object() {AppName, AppVersion, Param}, Me.SetAutoPickupRequestSettingOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetAutoPickupRequestSettingOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetAutoPickupRequestSettingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetAutoPickupRequestSettingCompleted(Me, New SetAutoPickupRequestSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DashboardPartnerTemplateAutoPickupRequest", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DashboardPartnerTemplateAutoPickupRequest(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef DsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("DashboardPartnerTemplateAutoPickupRequest", New Object() {AppName, AppVersion, Param, DsData})
            DsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerTemplateAutoPickupRequestAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal DsData As System.Data.DataSet)
            Me.DashboardPartnerTemplateAutoPickupRequestAsync(AppName, AppVersion, Param, DsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerTemplateAutoPickupRequestAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal DsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.DashboardPartnerTemplateAutoPickupRequestOperationCompleted Is Nothing) Then
                Me.DashboardPartnerTemplateAutoPickupRequestOperationCompleted = AddressOf Me.OnDashboardPartnerTemplateAutoPickupRequestOperationCompleted
            End If
            Me.InvokeAsync("DashboardPartnerTemplateAutoPickupRequest", New Object() {AppName, AppVersion, Param, DsData}, Me.DashboardPartnerTemplateAutoPickupRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnDashboardPartnerTemplateAutoPickupRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.DashboardPartnerTemplateAutoPickupRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DashboardPartnerTemplateAutoPickupRequestCompleted(Me, New DashboardPartnerTemplateAutoPickupRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DashboardPartnerUploadDO", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DashboardPartnerUploadDO(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef DsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("DashboardPartnerUploadDO", New Object() {AppName, AppVersion, Param, DsData})
            DsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerUploadDOAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal DsData As System.Data.DataSet)
            Me.DashboardPartnerUploadDOAsync(AppName, AppVersion, Param, DsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerUploadDOAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal DsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.DashboardPartnerUploadDOOperationCompleted Is Nothing) Then
                Me.DashboardPartnerUploadDOOperationCompleted = AddressOf Me.OnDashboardPartnerUploadDOOperationCompleted
            End If
            Me.InvokeAsync("DashboardPartnerUploadDO", New Object() {AppName, AppVersion, Param, DsData}, Me.DashboardPartnerUploadDOOperationCompleted, userState)
        End Sub
        
        Private Sub OnDashboardPartnerUploadDOOperationCompleted(ByVal arg As Object)
            If (Not (Me.DashboardPartnerUploadDOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DashboardPartnerUploadDOCompleted(Me, New DashboardPartnerUploadDOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DashboardPartnerDODownloadTemplate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DashboardPartnerDODownloadTemplate(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsTemplate As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("DashboardPartnerDODownloadTemplate", New Object() {AppName, AppVersion, Param, dsTemplate})
            dsTemplate = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerDODownloadTemplateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsTemplate As System.Data.DataSet)
            Me.DashboardPartnerDODownloadTemplateAsync(AppName, AppVersion, Param, dsTemplate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerDODownloadTemplateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsTemplate As System.Data.DataSet, ByVal userState As Object)
            If (Me.DashboardPartnerDODownloadTemplateOperationCompleted Is Nothing) Then
                Me.DashboardPartnerDODownloadTemplateOperationCompleted = AddressOf Me.OnDashboardPartnerDODownloadTemplateOperationCompleted
            End If
            Me.InvokeAsync("DashboardPartnerDODownloadTemplate", New Object() {AppName, AppVersion, Param, dsTemplate}, Me.DashboardPartnerDODownloadTemplateOperationCompleted, userState)
        End Sub
        
        Private Sub OnDashboardPartnerDODownloadTemplateOperationCompleted(ByVal arg As Object)
            If (Not (Me.DashboardPartnerDODownloadTemplateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DashboardPartnerDODownloadTemplateCompleted(Me, New DashboardPartnerDODownloadTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DashboardPartnerUploadPO", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DashboardPartnerUploadPO(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef DsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("DashboardPartnerUploadPO", New Object() {AppName, AppVersion, Param, DsData})
            DsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerUploadPOAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal DsData As System.Data.DataSet)
            Me.DashboardPartnerUploadPOAsync(AppName, AppVersion, Param, DsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerUploadPOAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal DsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.DashboardPartnerUploadPOOperationCompleted Is Nothing) Then
                Me.DashboardPartnerUploadPOOperationCompleted = AddressOf Me.OnDashboardPartnerUploadPOOperationCompleted
            End If
            Me.InvokeAsync("DashboardPartnerUploadPO", New Object() {AppName, AppVersion, Param, DsData}, Me.DashboardPartnerUploadPOOperationCompleted, userState)
        End Sub
        
        Private Sub OnDashboardPartnerUploadPOOperationCompleted(ByVal arg As Object)
            If (Not (Me.DashboardPartnerUploadPOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DashboardPartnerUploadPOCompleted(Me, New DashboardPartnerUploadPOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DashboardPartnerPODownloadTemplate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DashboardPartnerPODownloadTemplate(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsTemplate As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("DashboardPartnerPODownloadTemplate", New Object() {AppName, AppVersion, Param, dsTemplate})
            dsTemplate = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPODownloadTemplateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsTemplate As System.Data.DataSet)
            Me.DashboardPartnerPODownloadTemplateAsync(AppName, AppVersion, Param, dsTemplate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPODownloadTemplateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsTemplate As System.Data.DataSet, ByVal userState As Object)
            If (Me.DashboardPartnerPODownloadTemplateOperationCompleted Is Nothing) Then
                Me.DashboardPartnerPODownloadTemplateOperationCompleted = AddressOf Me.OnDashboardPartnerPODownloadTemplateOperationCompleted
            End If
            Me.InvokeAsync("DashboardPartnerPODownloadTemplate", New Object() {AppName, AppVersion, Param, dsTemplate}, Me.DashboardPartnerPODownloadTemplateOperationCompleted, userState)
        End Sub
        
        Private Sub OnDashboardPartnerPODownloadTemplateOperationCompleted(ByVal arg As Object)
            If (Not (Me.DashboardPartnerPODownloadTemplateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DashboardPartnerPODownloadTemplateCompleted(Me, New DashboardPartnerPODownloadTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KurirWilayahAutoPicking", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function KurirWilayahAutoPicking(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("KurirWilayahAutoPicking", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub KurirWilayahAutoPickingAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.KurirWilayahAutoPickingAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub KurirWilayahAutoPickingAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.KurirWilayahAutoPickingOperationCompleted Is Nothing) Then
                Me.KurirWilayahAutoPickingOperationCompleted = AddressOf Me.OnKurirWilayahAutoPickingOperationCompleted
            End If
            Me.InvokeAsync("KurirWilayahAutoPicking", New Object() {AppName, AppVersion, Param}, Me.KurirWilayahAutoPickingOperationCompleted, userState)
        End Sub
        
        Private Sub OnKurirWilayahAutoPickingOperationCompleted(ByVal arg As Object)
            If (Not (Me.KurirWilayahAutoPickingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent KurirWilayahAutoPickingCompleted(Me, New KurirWilayahAutoPickingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KurirWilayahAntarTokoList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function KurirWilayahAntarTokoList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("KurirWilayahAntarTokoList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub KurirWilayahAntarTokoListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.KurirWilayahAntarTokoListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub KurirWilayahAntarTokoListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.KurirWilayahAntarTokoListOperationCompleted Is Nothing) Then
                Me.KurirWilayahAntarTokoListOperationCompleted = AddressOf Me.OnKurirWilayahAntarTokoListOperationCompleted
            End If
            Me.InvokeAsync("KurirWilayahAntarTokoList", New Object() {AppName, AppVersion, Param}, Me.KurirWilayahAntarTokoListOperationCompleted, userState)
        End Sub
        
        Private Sub OnKurirWilayahAntarTokoListOperationCompleted(ByVal arg As Object)
            If (Not (Me.KurirWilayahAntarTokoListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent KurirWilayahAntarTokoListCompleted(Me, New KurirWilayahAntarTokoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KurirWilayahDeleteAntarTokoList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub KurirWilayahDeleteAntarTokoList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.Invoke("KurirWilayahDeleteAntarTokoList", New Object() {AppName, AppVersion, Param})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub KurirWilayahDeleteAntarTokoListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.KurirWilayahDeleteAntarTokoListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub KurirWilayahDeleteAntarTokoListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.KurirWilayahDeleteAntarTokoListOperationCompleted Is Nothing) Then
                Me.KurirWilayahDeleteAntarTokoListOperationCompleted = AddressOf Me.OnKurirWilayahDeleteAntarTokoListOperationCompleted
            End If
            Me.InvokeAsync("KurirWilayahDeleteAntarTokoList", New Object() {AppName, AppVersion, Param}, Me.KurirWilayahDeleteAntarTokoListOperationCompleted, userState)
        End Sub
        
        Private Sub OnKurirWilayahDeleteAntarTokoListOperationCompleted(ByVal arg As Object)
            If (Not (Me.KurirWilayahDeleteAntarTokoListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent KurirWilayahDeleteAntarTokoListCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KurirWilayahPushAntarTokoList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function KurirWilayahPushAntarTokoList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("KurirWilayahPushAntarTokoList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub KurirWilayahPushAntarTokoListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.KurirWilayahPushAntarTokoListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub KurirWilayahPushAntarTokoListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.KurirWilayahPushAntarTokoListOperationCompleted Is Nothing) Then
                Me.KurirWilayahPushAntarTokoListOperationCompleted = AddressOf Me.OnKurirWilayahPushAntarTokoListOperationCompleted
            End If
            Me.InvokeAsync("KurirWilayahPushAntarTokoList", New Object() {AppName, AppVersion, Param}, Me.KurirWilayahPushAntarTokoListOperationCompleted, userState)
        End Sub
        
        Private Sub OnKurirWilayahPushAntarTokoListOperationCompleted(ByVal arg As Object)
            If (Not (Me.KurirWilayahPushAntarTokoListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent KurirWilayahPushAntarTokoListCompleted(Me, New KurirWilayahPushAntarTokoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KurirWilayahAutoJemputToko", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function KurirWilayahAutoJemputToko(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("KurirWilayahAutoJemputToko", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub KurirWilayahAutoJemputTokoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.KurirWilayahAutoJemputTokoAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub KurirWilayahAutoJemputTokoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.KurirWilayahAutoJemputTokoOperationCompleted Is Nothing) Then
                Me.KurirWilayahAutoJemputTokoOperationCompleted = AddressOf Me.OnKurirWilayahAutoJemputTokoOperationCompleted
            End If
            Me.InvokeAsync("KurirWilayahAutoJemputToko", New Object() {AppName, AppVersion, Param}, Me.KurirWilayahAutoJemputTokoOperationCompleted, userState)
        End Sub
        
        Private Sub OnKurirWilayahAutoJemputTokoOperationCompleted(ByVal arg As Object)
            If (Not (Me.KurirWilayahAutoJemputTokoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent KurirWilayahAutoJemputTokoCompleted(Me, New KurirWilayahAutoJemputTokoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KurirWilayahJemputTokoList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function KurirWilayahJemputTokoList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("KurirWilayahJemputTokoList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub KurirWilayahJemputTokoListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.KurirWilayahJemputTokoListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub KurirWilayahJemputTokoListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.KurirWilayahJemputTokoListOperationCompleted Is Nothing) Then
                Me.KurirWilayahJemputTokoListOperationCompleted = AddressOf Me.OnKurirWilayahJemputTokoListOperationCompleted
            End If
            Me.InvokeAsync("KurirWilayahJemputTokoList", New Object() {AppName, AppVersion, Param}, Me.KurirWilayahJemputTokoListOperationCompleted, userState)
        End Sub
        
        Private Sub OnKurirWilayahJemputTokoListOperationCompleted(ByVal arg As Object)
            If (Not (Me.KurirWilayahJemputTokoListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent KurirWilayahJemputTokoListCompleted(Me, New KurirWilayahJemputTokoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KurirWilayahPushJemputTokoList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function KurirWilayahPushJemputTokoList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("KurirWilayahPushJemputTokoList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub KurirWilayahPushJemputTokoListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.KurirWilayahPushJemputTokoListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub KurirWilayahPushJemputTokoListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.KurirWilayahPushJemputTokoListOperationCompleted Is Nothing) Then
                Me.KurirWilayahPushJemputTokoListOperationCompleted = AddressOf Me.OnKurirWilayahPushJemputTokoListOperationCompleted
            End If
            Me.InvokeAsync("KurirWilayahPushJemputTokoList", New Object() {AppName, AppVersion, Param}, Me.KurirWilayahPushJemputTokoListOperationCompleted, userState)
        End Sub
        
        Private Sub OnKurirWilayahPushJemputTokoListOperationCompleted(ByVal arg As Object)
            If (Not (Me.KurirWilayahPushJemputTokoListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent KurirWilayahPushJemputTokoListCompleted(Me, New KurirWilayahPushJemputTokoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KurirWilayahMappingClusterList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function KurirWilayahMappingClusterList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("KurirWilayahMappingClusterList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub KurirWilayahMappingClusterListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.KurirWilayahMappingClusterListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub KurirWilayahMappingClusterListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.KurirWilayahMappingClusterListOperationCompleted Is Nothing) Then
                Me.KurirWilayahMappingClusterListOperationCompleted = AddressOf Me.OnKurirWilayahMappingClusterListOperationCompleted
            End If
            Me.InvokeAsync("KurirWilayahMappingClusterList", New Object() {AppName, AppVersion, Param}, Me.KurirWilayahMappingClusterListOperationCompleted, userState)
        End Sub
        
        Private Sub OnKurirWilayahMappingClusterListOperationCompleted(ByVal arg As Object)
            If (Not (Me.KurirWilayahMappingClusterListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent KurirWilayahMappingClusterListCompleted(Me, New KurirWilayahMappingClusterListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KurirWilayahStatusKendalaPaket", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function KurirWilayahStatusKendalaPaket(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("KurirWilayahStatusKendalaPaket", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub KurirWilayahStatusKendalaPaketAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.KurirWilayahStatusKendalaPaketAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub KurirWilayahStatusKendalaPaketAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.KurirWilayahStatusKendalaPaketOperationCompleted Is Nothing) Then
                Me.KurirWilayahStatusKendalaPaketOperationCompleted = AddressOf Me.OnKurirWilayahStatusKendalaPaketOperationCompleted
            End If
            Me.InvokeAsync("KurirWilayahStatusKendalaPaket", New Object() {AppName, AppVersion, Param}, Me.KurirWilayahStatusKendalaPaketOperationCompleted, userState)
        End Sub
        
        Private Sub OnKurirWilayahStatusKendalaPaketOperationCompleted(ByVal arg As Object)
            If (Not (Me.KurirWilayahStatusKendalaPaketCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent KurirWilayahStatusKendalaPaketCompleted(Me, New KurirWilayahStatusKendalaPaketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KurirWilayahPushNotifListInsert", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function KurirWilayahPushNotifListInsert(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object
            Dim results() As Object = Me.Invoke("KurirWilayahPushNotifListInsert", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object)
        End Function
        
        '''<remarks/>
        Public Overloads Sub KurirWilayahPushNotifListInsertAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.KurirWilayahPushNotifListInsertAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub KurirWilayahPushNotifListInsertAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.KurirWilayahPushNotifListInsertOperationCompleted Is Nothing) Then
                Me.KurirWilayahPushNotifListInsertOperationCompleted = AddressOf Me.OnKurirWilayahPushNotifListInsertOperationCompleted
            End If
            Me.InvokeAsync("KurirWilayahPushNotifListInsert", New Object() {AppName, AppVersion, Param}, Me.KurirWilayahPushNotifListInsertOperationCompleted, userState)
        End Sub
        
        Private Sub OnKurirWilayahPushNotifListInsertOperationCompleted(ByVal arg As Object)
            If (Not (Me.KurirWilayahPushNotifListInsertCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent KurirWilayahPushNotifListInsertCompleted(Me, New KurirWilayahPushNotifListInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KurirWilayahPushNotifListPush", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function KurirWilayahPushNotifListPush(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("KurirWilayahPushNotifListPush", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub KurirWilayahPushNotifListPushAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.KurirWilayahPushNotifListPushAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub KurirWilayahPushNotifListPushAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.KurirWilayahPushNotifListPushOperationCompleted Is Nothing) Then
                Me.KurirWilayahPushNotifListPushOperationCompleted = AddressOf Me.OnKurirWilayahPushNotifListPushOperationCompleted
            End If
            Me.InvokeAsync("KurirWilayahPushNotifListPush", New Object() {AppName, AppVersion, Param}, Me.KurirWilayahPushNotifListPushOperationCompleted, userState)
        End Sub
        
        Private Sub OnKurirWilayahPushNotifListPushOperationCompleted(ByVal arg As Object)
            If (Not (Me.KurirWilayahPushNotifListPushCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent KurirWilayahPushNotifListPushCompleted(Me, New KurirWilayahPushNotifListPushCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransactionFileUrlInsert", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TransactionFileUrlInsert(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("TransactionFileUrlInsert", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub TransactionFileUrlInsertAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.TransactionFileUrlInsertAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TransactionFileUrlInsertAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.TransactionFileUrlInsertOperationCompleted Is Nothing) Then
                Me.TransactionFileUrlInsertOperationCompleted = AddressOf Me.OnTransactionFileUrlInsertOperationCompleted
            End If
            Me.InvokeAsync("TransactionFileUrlInsert", New Object() {AppName, AppVersion, Param}, Me.TransactionFileUrlInsertOperationCompleted, userState)
        End Sub
        
        Private Sub OnTransactionFileUrlInsertOperationCompleted(ByVal arg As Object)
            If (Not (Me.TransactionFileUrlInsertCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TransactionFileUrlInsertCompleted(Me, New TransactionFileUrlInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransactionFileUrlDelete", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TransactionFileUrlDelete(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("TransactionFileUrlDelete", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub TransactionFileUrlDeleteAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.TransactionFileUrlDeleteAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TransactionFileUrlDeleteAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.TransactionFileUrlDeleteOperationCompleted Is Nothing) Then
                Me.TransactionFileUrlDeleteOperationCompleted = AddressOf Me.OnTransactionFileUrlDeleteOperationCompleted
            End If
            Me.InvokeAsync("TransactionFileUrlDelete", New Object() {AppName, AppVersion, Param}, Me.TransactionFileUrlDeleteOperationCompleted, userState)
        End Sub
        
        Private Sub OnTransactionFileUrlDeleteOperationCompleted(ByVal arg As Object)
            If (Not (Me.TransactionFileUrlDeleteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TransactionFileUrlDeleteCompleted(Me, New TransactionFileUrlDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBlastEmailTemplate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBlastEmailTemplate(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetBlastEmailTemplate", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBlastEmailTemplateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetBlastEmailTemplateAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBlastEmailTemplateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetBlastEmailTemplateOperationCompleted Is Nothing) Then
                Me.GetBlastEmailTemplateOperationCompleted = AddressOf Me.OnGetBlastEmailTemplateOperationCompleted
            End If
            Me.InvokeAsync("GetBlastEmailTemplate", New Object() {AppName, AppVersion, Param}, Me.GetBlastEmailTemplateOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBlastEmailTemplateOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBlastEmailTemplateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBlastEmailTemplateCompleted(Me, New GetBlastEmailTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBlastEmailCategory", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBlastEmailCategory(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetBlastEmailCategory", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBlastEmailCategoryAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetBlastEmailCategoryAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBlastEmailCategoryAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetBlastEmailCategoryOperationCompleted Is Nothing) Then
                Me.GetBlastEmailCategoryOperationCompleted = AddressOf Me.OnGetBlastEmailCategoryOperationCompleted
            End If
            Me.InvokeAsync("GetBlastEmailCategory", New Object() {AppName, AppVersion, Param}, Me.GetBlastEmailCategoryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBlastEmailCategoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBlastEmailCategoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBlastEmailCategoryCompleted(Me, New GetBlastEmailCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BlastEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub BlastEmail(ByVal Param() As Object)
            Me.Invoke("BlastEmail", New Object() {Param})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BlastEmailAsync(ByVal Param() As Object)
            Me.BlastEmailAsync(Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BlastEmailAsync(ByVal Param() As Object, ByVal userState As Object)
            If (Me.BlastEmailOperationCompleted Is Nothing) Then
                Me.BlastEmailOperationCompleted = AddressOf Me.OnBlastEmailOperationCompleted
            End If
            Me.InvokeAsync("BlastEmail", New Object() {Param}, Me.BlastEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnBlastEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.BlastEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BlastEmailCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BlastEmailDelete", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BlastEmailDelete(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("BlastEmailDelete", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub BlastEmailDeleteAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.BlastEmailDeleteAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BlastEmailDeleteAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.BlastEmailDeleteOperationCompleted Is Nothing) Then
                Me.BlastEmailDeleteOperationCompleted = AddressOf Me.OnBlastEmailDeleteOperationCompleted
            End If
            Me.InvokeAsync("BlastEmailDelete", New Object() {AppName, AppVersion, Param}, Me.BlastEmailDeleteOperationCompleted, userState)
        End Sub
        
        Private Sub OnBlastEmailDeleteOperationCompleted(ByVal arg As Object)
            If (Not (Me.BlastEmailDeleteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BlastEmailDeleteCompleted(Me, New BlastEmailDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RajaOngkir_PopulateRate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RajaOngkir_PopulateRate(ByVal Param() As Object)
            Me.Invoke("RajaOngkir_PopulateRate", New Object() {Param})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RajaOngkir_PopulateRateAsync(ByVal Param() As Object)
            Me.RajaOngkir_PopulateRateAsync(Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RajaOngkir_PopulateRateAsync(ByVal Param() As Object, ByVal userState As Object)
            If (Me.RajaOngkir_PopulateRateOperationCompleted Is Nothing) Then
                Me.RajaOngkir_PopulateRateOperationCompleted = AddressOf Me.OnRajaOngkir_PopulateRateOperationCompleted
            End If
            Me.InvokeAsync("RajaOngkir_PopulateRate", New Object() {Param}, Me.RajaOngkir_PopulateRateOperationCompleted, userState)
        End Sub
        
        Private Sub OnRajaOngkir_PopulateRateOperationCompleted(ByVal arg As Object)
            If (Not (Me.RajaOngkir_PopulateRateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RajaOngkir_PopulateRateCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RajaOngkir_GetRateResponse", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RajaOngkir_GetRateResponse(ByVal Param() As Object)
            Me.Invoke("RajaOngkir_GetRateResponse", New Object() {Param})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RajaOngkir_GetRateResponseAsync(ByVal Param() As Object)
            Me.RajaOngkir_GetRateResponseAsync(Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RajaOngkir_GetRateResponseAsync(ByVal Param() As Object, ByVal userState As Object)
            If (Me.RajaOngkir_GetRateResponseOperationCompleted Is Nothing) Then
                Me.RajaOngkir_GetRateResponseOperationCompleted = AddressOf Me.OnRajaOngkir_GetRateResponseOperationCompleted
            End If
            Me.InvokeAsync("RajaOngkir_GetRateResponse", New Object() {Param}, Me.RajaOngkir_GetRateResponseOperationCompleted, userState)
        End Sub
        
        Private Sub OnRajaOngkir_GetRateResponseOperationCompleted(ByVal arg As Object)
            If (Not (Me.RajaOngkir_GetRateResponseCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RajaOngkir_GetRateResponseCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RajaOngkir_CreateMappingSubdistrict", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RajaOngkir_CreateMappingSubdistrict(ByVal Param() As Object)
            Me.Invoke("RajaOngkir_CreateMappingSubdistrict", New Object() {Param})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RajaOngkir_CreateMappingSubdistrictAsync(ByVal Param() As Object)
            Me.RajaOngkir_CreateMappingSubdistrictAsync(Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RajaOngkir_CreateMappingSubdistrictAsync(ByVal Param() As Object, ByVal userState As Object)
            If (Me.RajaOngkir_CreateMappingSubdistrictOperationCompleted Is Nothing) Then
                Me.RajaOngkir_CreateMappingSubdistrictOperationCompleted = AddressOf Me.OnRajaOngkir_CreateMappingSubdistrictOperationCompleted
            End If
            Me.InvokeAsync("RajaOngkir_CreateMappingSubdistrict", New Object() {Param}, Me.RajaOngkir_CreateMappingSubdistrictOperationCompleted, userState)
        End Sub
        
        Private Sub OnRajaOngkir_CreateMappingSubdistrictOperationCompleted(ByVal arg As Object)
            If (Not (Me.RajaOngkir_CreateMappingSubdistrictCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RajaOngkir_CreateMappingSubdistrictCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RajaOngkir_PopulateData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RajaOngkir_PopulateData()
            Me.Invoke("RajaOngkir_PopulateData", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RajaOngkir_PopulateDataAsync()
            Me.RajaOngkir_PopulateDataAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RajaOngkir_PopulateDataAsync(ByVal userState As Object)
            If (Me.RajaOngkir_PopulateDataOperationCompleted Is Nothing) Then
                Me.RajaOngkir_PopulateDataOperationCompleted = AddressOf Me.OnRajaOngkir_PopulateDataOperationCompleted
            End If
            Me.InvokeAsync("RajaOngkir_PopulateData", New Object(-1) {}, Me.RajaOngkir_PopulateDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnRajaOngkir_PopulateDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.RajaOngkir_PopulateDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RajaOngkir_PopulateDataCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RajaOngkir_EmailResult", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RajaOngkir_EmailResult()
            Me.Invoke("RajaOngkir_EmailResult", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RajaOngkir_EmailResultAsync()
            Me.RajaOngkir_EmailResultAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RajaOngkir_EmailResultAsync(ByVal userState As Object)
            If (Me.RajaOngkir_EmailResultOperationCompleted Is Nothing) Then
                Me.RajaOngkir_EmailResultOperationCompleted = AddressOf Me.OnRajaOngkir_EmailResultOperationCompleted
            End If
            Me.InvokeAsync("RajaOngkir_EmailResult", New Object(-1) {}, Me.RajaOngkir_EmailResultOperationCompleted, userState)
        End Sub
        
        Private Sub OnRajaOngkir_EmailResultOperationCompleted(ByVal arg As Object)
            If (Not (Me.RajaOngkir_EmailResultCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RajaOngkir_EmailResultCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RajaOngkir_PopulateRate_V2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RajaOngkir_PopulateRate_V2()
            Me.Invoke("RajaOngkir_PopulateRate_V2", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RajaOngkir_PopulateRate_V2Async()
            Me.RajaOngkir_PopulateRate_V2Async(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RajaOngkir_PopulateRate_V2Async(ByVal userState As Object)
            If (Me.RajaOngkir_PopulateRate_V2OperationCompleted Is Nothing) Then
                Me.RajaOngkir_PopulateRate_V2OperationCompleted = AddressOf Me.OnRajaOngkir_PopulateRate_V2OperationCompleted
            End If
            Me.InvokeAsync("RajaOngkir_PopulateRate_V2", New Object(-1) {}, Me.RajaOngkir_PopulateRate_V2OperationCompleted, userState)
        End Sub
        
        Private Sub OnRajaOngkir_PopulateRate_V2OperationCompleted(ByVal arg As Object)
            If (Not (Me.RajaOngkir_PopulateRate_V2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RajaOngkir_PopulateRate_V2Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RajaOngkir_GetRateResponse_V2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RajaOngkir_GetRateResponse_V2()
            Me.Invoke("RajaOngkir_GetRateResponse_V2", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RajaOngkir_GetRateResponse_V2Async()
            Me.RajaOngkir_GetRateResponse_V2Async(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RajaOngkir_GetRateResponse_V2Async(ByVal userState As Object)
            If (Me.RajaOngkir_GetRateResponse_V2OperationCompleted Is Nothing) Then
                Me.RajaOngkir_GetRateResponse_V2OperationCompleted = AddressOf Me.OnRajaOngkir_GetRateResponse_V2OperationCompleted
            End If
            Me.InvokeAsync("RajaOngkir_GetRateResponse_V2", New Object(-1) {}, Me.RajaOngkir_GetRateResponse_V2OperationCompleted, userState)
        End Sub
        
        Private Sub OnRajaOngkir_GetRateResponse_V2OperationCompleted(ByVal arg As Object)
            If (Not (Me.RajaOngkir_GetRateResponse_V2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RajaOngkir_GetRateResponse_V2Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RajaOngkir_CreateMappingSubdistrict_V2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RajaOngkir_CreateMappingSubdistrict_V2()
            Me.Invoke("RajaOngkir_CreateMappingSubdistrict_V2", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RajaOngkir_CreateMappingSubdistrict_V2Async()
            Me.RajaOngkir_CreateMappingSubdistrict_V2Async(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RajaOngkir_CreateMappingSubdistrict_V2Async(ByVal userState As Object)
            If (Me.RajaOngkir_CreateMappingSubdistrict_V2OperationCompleted Is Nothing) Then
                Me.RajaOngkir_CreateMappingSubdistrict_V2OperationCompleted = AddressOf Me.OnRajaOngkir_CreateMappingSubdistrict_V2OperationCompleted
            End If
            Me.InvokeAsync("RajaOngkir_CreateMappingSubdistrict_V2", New Object(-1) {}, Me.RajaOngkir_CreateMappingSubdistrict_V2OperationCompleted, userState)
        End Sub
        
        Private Sub OnRajaOngkir_CreateMappingSubdistrict_V2OperationCompleted(ByVal arg As Object)
            If (Not (Me.RajaOngkir_CreateMappingSubdistrict_V2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RajaOngkir_CreateMappingSubdistrict_V2Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RajaOngkir_PopulateData_V2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RajaOngkir_PopulateData_V2()
            Me.Invoke("RajaOngkir_PopulateData_V2", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RajaOngkir_PopulateData_V2Async()
            Me.RajaOngkir_PopulateData_V2Async(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RajaOngkir_PopulateData_V2Async(ByVal userState As Object)
            If (Me.RajaOngkir_PopulateData_V2OperationCompleted Is Nothing) Then
                Me.RajaOngkir_PopulateData_V2OperationCompleted = AddressOf Me.OnRajaOngkir_PopulateData_V2OperationCompleted
            End If
            Me.InvokeAsync("RajaOngkir_PopulateData_V2", New Object(-1) {}, Me.RajaOngkir_PopulateData_V2OperationCompleted, userState)
        End Sub
        
        Private Sub OnRajaOngkir_PopulateData_V2OperationCompleted(ByVal arg As Object)
            If (Not (Me.RajaOngkir_PopulateData_V2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RajaOngkir_PopulateData_V2Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RajaOngkirGetConstValue", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RajaOngkirGetConstValue(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("RajaOngkirGetConstValue", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RajaOngkirGetConstValueAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.RajaOngkirGetConstValueAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RajaOngkirGetConstValueAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.RajaOngkirGetConstValueOperationCompleted Is Nothing) Then
                Me.RajaOngkirGetConstValueOperationCompleted = AddressOf Me.OnRajaOngkirGetConstValueOperationCompleted
            End If
            Me.InvokeAsync("RajaOngkirGetConstValue", New Object() {AppName, AppVersion, Param}, Me.RajaOngkirGetConstValueOperationCompleted, userState)
        End Sub
        
        Private Sub OnRajaOngkirGetConstValueOperationCompleted(ByVal arg As Object)
            If (Not (Me.RajaOngkirGetConstValueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RajaOngkirGetConstValueCompleted(Me, New RajaOngkirGetConstValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RajaOngkirGetSubDistrictList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RajaOngkirGetSubDistrictList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("RajaOngkirGetSubDistrictList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RajaOngkirGetSubDistrictListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.RajaOngkirGetSubDistrictListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RajaOngkirGetSubDistrictListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.RajaOngkirGetSubDistrictListOperationCompleted Is Nothing) Then
                Me.RajaOngkirGetSubDistrictListOperationCompleted = AddressOf Me.OnRajaOngkirGetSubDistrictListOperationCompleted
            End If
            Me.InvokeAsync("RajaOngkirGetSubDistrictList", New Object() {AppName, AppVersion, Param}, Me.RajaOngkirGetSubDistrictListOperationCompleted, userState)
        End Sub
        
        Private Sub OnRajaOngkirGetSubDistrictListOperationCompleted(ByVal arg As Object)
            If (Not (Me.RajaOngkirGetSubDistrictListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RajaOngkirGetSubDistrictListCompleted(Me, New RajaOngkirGetSubDistrictListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RajaOngkirProsesOverride", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RajaOngkirProsesOverride(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("RajaOngkirProsesOverride", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RajaOngkirProsesOverrideAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.RajaOngkirProsesOverrideAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RajaOngkirProsesOverrideAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.RajaOngkirProsesOverrideOperationCompleted Is Nothing) Then
                Me.RajaOngkirProsesOverrideOperationCompleted = AddressOf Me.OnRajaOngkirProsesOverrideOperationCompleted
            End If
            Me.InvokeAsync("RajaOngkirProsesOverride", New Object() {AppName, AppVersion, Param}, Me.RajaOngkirProsesOverrideOperationCompleted, userState)
        End Sub
        
        Private Sub OnRajaOngkirProsesOverrideOperationCompleted(ByVal arg As Object)
            If (Not (Me.RajaOngkirProsesOverrideCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RajaOngkirProsesOverrideCompleted(Me, New RajaOngkirProsesOverrideCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegSeller_CreatePartnerAccount", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RegSeller_CreatePartnerAccount(ByVal Param() As Object)
            Me.Invoke("RegSeller_CreatePartnerAccount", New Object() {Param})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegSeller_CreatePartnerAccountAsync(ByVal Param() As Object)
            Me.RegSeller_CreatePartnerAccountAsync(Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegSeller_CreatePartnerAccountAsync(ByVal Param() As Object, ByVal userState As Object)
            If (Me.RegSeller_CreatePartnerAccountOperationCompleted Is Nothing) Then
                Me.RegSeller_CreatePartnerAccountOperationCompleted = AddressOf Me.OnRegSeller_CreatePartnerAccountOperationCompleted
            End If
            Me.InvokeAsync("RegSeller_CreatePartnerAccount", New Object() {Param}, Me.RegSeller_CreatePartnerAccountOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegSeller_CreatePartnerAccountOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegSeller_CreatePartnerAccountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegSeller_CreatePartnerAccountCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegSeller_DigitalAccountAcquisition", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RegSeller_DigitalAccountAcquisition()
            Me.Invoke("RegSeller_DigitalAccountAcquisition", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegSeller_DigitalAccountAcquisitionAsync()
            Me.RegSeller_DigitalAccountAcquisitionAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegSeller_DigitalAccountAcquisitionAsync(ByVal userState As Object)
            If (Me.RegSeller_DigitalAccountAcquisitionOperationCompleted Is Nothing) Then
                Me.RegSeller_DigitalAccountAcquisitionOperationCompleted = AddressOf Me.OnRegSeller_DigitalAccountAcquisitionOperationCompleted
            End If
            Me.InvokeAsync("RegSeller_DigitalAccountAcquisition", New Object(-1) {}, Me.RegSeller_DigitalAccountAcquisitionOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegSeller_DigitalAccountAcquisitionOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegSeller_DigitalAccountAcquisitionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegSeller_DigitalAccountAcquisitionCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegSeller_ResetPartnerAccount", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RegSeller_ResetPartnerAccount(ByVal Param() As Object)
            Me.Invoke("RegSeller_ResetPartnerAccount", New Object() {Param})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegSeller_ResetPartnerAccountAsync(ByVal Param() As Object)
            Me.RegSeller_ResetPartnerAccountAsync(Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegSeller_ResetPartnerAccountAsync(ByVal Param() As Object, ByVal userState As Object)
            If (Me.RegSeller_ResetPartnerAccountOperationCompleted Is Nothing) Then
                Me.RegSeller_ResetPartnerAccountOperationCompleted = AddressOf Me.OnRegSeller_ResetPartnerAccountOperationCompleted
            End If
            Me.InvokeAsync("RegSeller_ResetPartnerAccount", New Object() {Param}, Me.RegSeller_ResetPartnerAccountOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegSeller_ResetPartnerAccountOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegSeller_ResetPartnerAccountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegSeller_ResetPartnerAccountCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegSeller_AddEmailRewardScheduler", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RegSeller_AddEmailRewardScheduler()
            Me.Invoke("RegSeller_AddEmailRewardScheduler", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegSeller_AddEmailRewardSchedulerAsync()
            Me.RegSeller_AddEmailRewardSchedulerAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegSeller_AddEmailRewardSchedulerAsync(ByVal userState As Object)
            If (Me.RegSeller_AddEmailRewardSchedulerOperationCompleted Is Nothing) Then
                Me.RegSeller_AddEmailRewardSchedulerOperationCompleted = AddressOf Me.OnRegSeller_AddEmailRewardSchedulerOperationCompleted
            End If
            Me.InvokeAsync("RegSeller_AddEmailRewardScheduler", New Object(-1) {}, Me.RegSeller_AddEmailRewardSchedulerOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegSeller_AddEmailRewardSchedulerOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegSeller_AddEmailRewardSchedulerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegSeller_AddEmailRewardSchedulerCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegSeller_AddEmailIncentiveScheduler", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RegSeller_AddEmailIncentiveScheduler()
            Me.Invoke("RegSeller_AddEmailIncentiveScheduler", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegSeller_AddEmailIncentiveSchedulerAsync()
            Me.RegSeller_AddEmailIncentiveSchedulerAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegSeller_AddEmailIncentiveSchedulerAsync(ByVal userState As Object)
            If (Me.RegSeller_AddEmailIncentiveSchedulerOperationCompleted Is Nothing) Then
                Me.RegSeller_AddEmailIncentiveSchedulerOperationCompleted = AddressOf Me.OnRegSeller_AddEmailIncentiveSchedulerOperationCompleted
            End If
            Me.InvokeAsync("RegSeller_AddEmailIncentiveScheduler", New Object(-1) {}, Me.RegSeller_AddEmailIncentiveSchedulerOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegSeller_AddEmailIncentiveSchedulerOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegSeller_AddEmailIncentiveSchedulerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegSeller_AddEmailIncentiveSchedulerCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegSeller_SendRewardEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RegSeller_SendRewardEmail(ByVal Param() As Object)
            Me.Invoke("RegSeller_SendRewardEmail", New Object() {Param})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegSeller_SendRewardEmailAsync(ByVal Param() As Object)
            Me.RegSeller_SendRewardEmailAsync(Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegSeller_SendRewardEmailAsync(ByVal Param() As Object, ByVal userState As Object)
            If (Me.RegSeller_SendRewardEmailOperationCompleted Is Nothing) Then
                Me.RegSeller_SendRewardEmailOperationCompleted = AddressOf Me.OnRegSeller_SendRewardEmailOperationCompleted
            End If
            Me.InvokeAsync("RegSeller_SendRewardEmail", New Object() {Param}, Me.RegSeller_SendRewardEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegSeller_SendRewardEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegSeller_SendRewardEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegSeller_SendRewardEmailCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegSeller_SendIncentiveEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RegSeller_SendIncentiveEmail(ByVal Param() As Object)
            Me.Invoke("RegSeller_SendIncentiveEmail", New Object() {Param})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegSeller_SendIncentiveEmailAsync(ByVal Param() As Object)
            Me.RegSeller_SendIncentiveEmailAsync(Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegSeller_SendIncentiveEmailAsync(ByVal Param() As Object, ByVal userState As Object)
            If (Me.RegSeller_SendIncentiveEmailOperationCompleted Is Nothing) Then
                Me.RegSeller_SendIncentiveEmailOperationCompleted = AddressOf Me.OnRegSeller_SendIncentiveEmailOperationCompleted
            End If
            Me.InvokeAsync("RegSeller_SendIncentiveEmail", New Object() {Param}, Me.RegSeller_SendIncentiveEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegSeller_SendIncentiveEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegSeller_SendIncentiveEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegSeller_SendIncentiveEmailCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegSeller_DeleteMailScheduler", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RegSeller_DeleteMailScheduler(ByVal Param() As Object)
            Me.Invoke("RegSeller_DeleteMailScheduler", New Object() {Param})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegSeller_DeleteMailSchedulerAsync(ByVal Param() As Object)
            Me.RegSeller_DeleteMailSchedulerAsync(Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegSeller_DeleteMailSchedulerAsync(ByVal Param() As Object, ByVal userState As Object)
            If (Me.RegSeller_DeleteMailSchedulerOperationCompleted Is Nothing) Then
                Me.RegSeller_DeleteMailSchedulerOperationCompleted = AddressOf Me.OnRegSeller_DeleteMailSchedulerOperationCompleted
            End If
            Me.InvokeAsync("RegSeller_DeleteMailScheduler", New Object() {Param}, Me.RegSeller_DeleteMailSchedulerOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegSeller_DeleteMailSchedulerOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegSeller_DeleteMailSchedulerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegSeller_DeleteMailSchedulerCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FinUpdateInvoiceTrackNum", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FinUpdateInvoiceTrackNum(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("FinUpdateInvoiceTrackNum", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FinUpdateInvoiceTrackNumAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.FinUpdateInvoiceTrackNumAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FinUpdateInvoiceTrackNumAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.FinUpdateInvoiceTrackNumOperationCompleted Is Nothing) Then
                Me.FinUpdateInvoiceTrackNumOperationCompleted = AddressOf Me.OnFinUpdateInvoiceTrackNumOperationCompleted
            End If
            Me.InvokeAsync("FinUpdateInvoiceTrackNum", New Object() {AppName, AppVersion, Param}, Me.FinUpdateInvoiceTrackNumOperationCompleted, userState)
        End Sub
        
        Private Sub OnFinUpdateInvoiceTrackNumOperationCompleted(ByVal arg As Object)
            If (Not (Me.FinUpdateInvoiceTrackNumCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FinUpdateInvoiceTrackNumCompleted(Me, New FinUpdateInvoiceTrackNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FinUpdateInvoiceExpedition", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FinUpdateInvoiceExpedition(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("FinUpdateInvoiceExpedition", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FinUpdateInvoiceExpeditionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.FinUpdateInvoiceExpeditionAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FinUpdateInvoiceExpeditionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.FinUpdateInvoiceExpeditionOperationCompleted Is Nothing) Then
                Me.FinUpdateInvoiceExpeditionOperationCompleted = AddressOf Me.OnFinUpdateInvoiceExpeditionOperationCompleted
            End If
            Me.InvokeAsync("FinUpdateInvoiceExpedition", New Object() {AppName, AppVersion, Param}, Me.FinUpdateInvoiceExpeditionOperationCompleted, userState)
        End Sub
        
        Private Sub OnFinUpdateInvoiceExpeditionOperationCompleted(ByVal arg As Object)
            If (Not (Me.FinUpdateInvoiceExpeditionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FinUpdateInvoiceExpeditionCompleted(Me, New FinUpdateInvoiceExpeditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NoResiKonsolGetNomor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NoResiKonsolGetNomor(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("NoResiKonsolGetNomor", New Object() {AppName, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub NoResiKonsolGetNomorAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.NoResiKonsolGetNomorAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NoResiKonsolGetNomorAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.NoResiKonsolGetNomorOperationCompleted Is Nothing) Then
                Me.NoResiKonsolGetNomorOperationCompleted = AddressOf Me.OnNoResiKonsolGetNomorOperationCompleted
            End If
            Me.InvokeAsync("NoResiKonsolGetNomor", New Object() {AppName, AppVersion, Param, dsData}, Me.NoResiKonsolGetNomorOperationCompleted, userState)
        End Sub
        
        Private Sub OnNoResiKonsolGetNomorOperationCompleted(ByVal arg As Object)
            If (Not (Me.NoResiKonsolGetNomorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NoResiKonsolGetNomorCompleted(Me, New NoResiKonsolGetNomorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetToolsStockList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetToolsStockList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetToolsStockList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetToolsStockListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetToolsStockListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetToolsStockListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetToolsStockListOperationCompleted Is Nothing) Then
                Me.GetToolsStockListOperationCompleted = AddressOf Me.OnGetToolsStockListOperationCompleted
            End If
            Me.InvokeAsync("GetToolsStockList", New Object() {AppName, AppVersion, Param}, Me.GetToolsStockListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetToolsStockListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetToolsStockListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetToolsStockListCompleted(Me, New GetToolsStockListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ToolsStockUpdate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ToolsStockUpdate(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ToolsStockUpdate", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ToolsStockUpdateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ToolsStockUpdateAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ToolsStockUpdateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ToolsStockUpdateOperationCompleted Is Nothing) Then
                Me.ToolsStockUpdateOperationCompleted = AddressOf Me.OnToolsStockUpdateOperationCompleted
            End If
            Me.InvokeAsync("ToolsStockUpdate", New Object() {AppName, AppVersion, Param}, Me.ToolsStockUpdateOperationCompleted, userState)
        End Sub
        
        Private Sub OnToolsStockUpdateOperationCompleted(ByVal arg As Object)
            If (Not (Me.ToolsStockUpdateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ToolsStockUpdateCompleted(Me, New ToolsStockUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetToolsList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetToolsList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetToolsList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetToolsListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetToolsListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetToolsListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetToolsListOperationCompleted Is Nothing) Then
                Me.GetToolsListOperationCompleted = AddressOf Me.OnGetToolsListOperationCompleted
            End If
            Me.InvokeAsync("GetToolsList", New Object() {AppName, AppVersion, Param}, Me.GetToolsListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetToolsListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetToolsListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetToolsListCompleted(Me, New GetToolsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetToolsSupplierList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetToolsSupplierList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetToolsSupplierList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetToolsSupplierListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetToolsSupplierListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetToolsSupplierListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetToolsSupplierListOperationCompleted Is Nothing) Then
                Me.GetToolsSupplierListOperationCompleted = AddressOf Me.OnGetToolsSupplierListOperationCompleted
            End If
            Me.InvokeAsync("GetToolsSupplierList", New Object() {AppName, AppVersion, Param}, Me.GetToolsSupplierListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetToolsSupplierListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetToolsSupplierListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetToolsSupplierListCompleted(Me, New GetToolsSupplierListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetToolsStockRequestList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetToolsStockRequestList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetToolsStockRequestList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetToolsStockRequestListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetToolsStockRequestListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetToolsStockRequestListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetToolsStockRequestListOperationCompleted Is Nothing) Then
                Me.GetToolsStockRequestListOperationCompleted = AddressOf Me.OnGetToolsStockRequestListOperationCompleted
            End If
            Me.InvokeAsync("GetToolsStockRequestList", New Object() {AppName, AppVersion, Param}, Me.GetToolsStockRequestListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetToolsStockRequestListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetToolsStockRequestListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetToolsStockRequestListCompleted(Me, New GetToolsStockRequestListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ToolsRequest", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ToolsRequest(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ToolsRequest", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ToolsRequestAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ToolsRequestAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ToolsRequestAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ToolsRequestOperationCompleted Is Nothing) Then
                Me.ToolsRequestOperationCompleted = AddressOf Me.OnToolsRequestOperationCompleted
            End If
            Me.InvokeAsync("ToolsRequest", New Object() {AppName, AppVersion, Param}, Me.ToolsRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnToolsRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.ToolsRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ToolsRequestCompleted(Me, New ToolsRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetToolsRequestList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetToolsRequestList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetToolsRequestList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetToolsRequestListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetToolsRequestListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetToolsRequestListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetToolsRequestListOperationCompleted Is Nothing) Then
                Me.GetToolsRequestListOperationCompleted = AddressOf Me.OnGetToolsRequestListOperationCompleted
            End If
            Me.InvokeAsync("GetToolsRequestList", New Object() {AppName, AppVersion, Param}, Me.GetToolsRequestListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetToolsRequestListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetToolsRequestListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetToolsRequestListCompleted(Me, New GetToolsRequestListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ToolsFulfillment", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ToolsFulfillment(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ToolsFulfillment", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ToolsFulfillmentAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ToolsFulfillmentAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ToolsFulfillmentAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ToolsFulfillmentOperationCompleted Is Nothing) Then
                Me.ToolsFulfillmentOperationCompleted = AddressOf Me.OnToolsFulfillmentOperationCompleted
            End If
            Me.InvokeAsync("ToolsFulfillment", New Object() {AppName, AppVersion, Param}, Me.ToolsFulfillmentOperationCompleted, userState)
        End Sub
        
        Private Sub OnToolsFulfillmentOperationCompleted(ByVal arg As Object)
            If (Not (Me.ToolsFulfillmentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ToolsFulfillmentCompleted(Me, New ToolsFulfillmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetToolsAwbGroupList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetToolsAwbGroupList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetToolsAwbGroupList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetToolsAwbGroupListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetToolsAwbGroupListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetToolsAwbGroupListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetToolsAwbGroupListOperationCompleted Is Nothing) Then
                Me.GetToolsAwbGroupListOperationCompleted = AddressOf Me.OnGetToolsAwbGroupListOperationCompleted
            End If
            Me.InvokeAsync("GetToolsAwbGroupList", New Object() {AppName, AppVersion, Param}, Me.GetToolsAwbGroupListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetToolsAwbGroupListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetToolsAwbGroupListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetToolsAwbGroupListCompleted(Me, New GetToolsAwbGroupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetToolsListNew", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetToolsListNew(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetToolsListNew", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetToolsListNewAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetToolsListNewAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetToolsListNewAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetToolsListNewOperationCompleted Is Nothing) Then
                Me.GetToolsListNewOperationCompleted = AddressOf Me.OnGetToolsListNewOperationCompleted
            End If
            Me.InvokeAsync("GetToolsListNew", New Object() {AppName, AppVersion, Param}, Me.GetToolsListNewOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetToolsListNewOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetToolsListNewCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetToolsListNewCompleted(Me, New GetToolsListNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetToolsHubListNew", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetToolsHubListNew(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetToolsHubListNew", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetToolsHubListNewAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetToolsHubListNewAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetToolsHubListNewAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetToolsHubListNewOperationCompleted Is Nothing) Then
                Me.GetToolsHubListNewOperationCompleted = AddressOf Me.OnGetToolsHubListNewOperationCompleted
            End If
            Me.InvokeAsync("GetToolsHubListNew", New Object() {AppName, AppVersion, Param}, Me.GetToolsHubListNewOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetToolsHubListNewOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetToolsHubListNewCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetToolsHubListNewCompleted(Me, New GetToolsHubListNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetToolsFulfillmentListNew", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetToolsFulfillmentListNew(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetToolsFulfillmentListNew", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetToolsFulfillmentListNewAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetToolsFulfillmentListNewAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetToolsFulfillmentListNewAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetToolsFulfillmentListNewOperationCompleted Is Nothing) Then
                Me.GetToolsFulfillmentListNewOperationCompleted = AddressOf Me.OnGetToolsFulfillmentListNewOperationCompleted
            End If
            Me.InvokeAsync("GetToolsFulfillmentListNew", New Object() {AppName, AppVersion, Param}, Me.GetToolsFulfillmentListNewOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetToolsFulfillmentListNewOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetToolsFulfillmentListNewCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetToolsFulfillmentListNewCompleted(Me, New GetToolsFulfillmentListNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ToolsUpdateNew", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ToolsUpdateNew(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ToolsUpdateNew", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ToolsUpdateNewAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ToolsUpdateNewAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ToolsUpdateNewAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ToolsUpdateNewOperationCompleted Is Nothing) Then
                Me.ToolsUpdateNewOperationCompleted = AddressOf Me.OnToolsUpdateNewOperationCompleted
            End If
            Me.InvokeAsync("ToolsUpdateNew", New Object() {AppName, AppVersion, Param}, Me.ToolsUpdateNewOperationCompleted, userState)
        End Sub
        
        Private Sub OnToolsUpdateNewOperationCompleted(ByVal arg As Object)
            If (Not (Me.ToolsUpdateNewCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ToolsUpdateNewCompleted(Me, New ToolsUpdateNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ToolsHubUpdateNew", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ToolsHubUpdateNew(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ToolsHubUpdateNew", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ToolsHubUpdateNewAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ToolsHubUpdateNewAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ToolsHubUpdateNewAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ToolsHubUpdateNewOperationCompleted Is Nothing) Then
                Me.ToolsHubUpdateNewOperationCompleted = AddressOf Me.OnToolsHubUpdateNewOperationCompleted
            End If
            Me.InvokeAsync("ToolsHubUpdateNew", New Object() {AppName, AppVersion, Param}, Me.ToolsHubUpdateNewOperationCompleted, userState)
        End Sub
        
        Private Sub OnToolsHubUpdateNewOperationCompleted(ByVal arg As Object)
            If (Not (Me.ToolsHubUpdateNewCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ToolsHubUpdateNewCompleted(Me, New ToolsHubUpdateNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ToolsFulfillmentNew", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ToolsFulfillmentNew(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("ToolsFulfillmentNew", New Object() {AppName, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ToolsFulfillmentNewAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.ToolsFulfillmentNewAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ToolsFulfillmentNewAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.ToolsFulfillmentNewOperationCompleted Is Nothing) Then
                Me.ToolsFulfillmentNewOperationCompleted = AddressOf Me.OnToolsFulfillmentNewOperationCompleted
            End If
            Me.InvokeAsync("ToolsFulfillmentNew", New Object() {AppName, AppVersion, Param, dsData}, Me.ToolsFulfillmentNewOperationCompleted, userState)
        End Sub
        
        Private Sub OnToolsFulfillmentNewOperationCompleted(ByVal arg As Object)
            If (Not (Me.ToolsFulfillmentNewCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ToolsFulfillmentNewCompleted(Me, New ToolsFulfillmentNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ToolsCreateAwb", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ToolsCreateAwb(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("ToolsCreateAwb", New Object() {AppName, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ToolsCreateAwbAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.ToolsCreateAwbAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ToolsCreateAwbAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.ToolsCreateAwbOperationCompleted Is Nothing) Then
                Me.ToolsCreateAwbOperationCompleted = AddressOf Me.OnToolsCreateAwbOperationCompleted
            End If
            Me.InvokeAsync("ToolsCreateAwb", New Object() {AppName, AppVersion, Param, dsData}, Me.ToolsCreateAwbOperationCompleted, userState)
        End Sub
        
        Private Sub OnToolsCreateAwbOperationCompleted(ByVal arg As Object)
            If (Not (Me.ToolsCreateAwbCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ToolsCreateAwbCompleted(Me, New ToolsCreateAwbCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetToolsAwbGroupAll", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetToolsAwbGroupAll(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetToolsAwbGroupAll", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetToolsAwbGroupAllAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetToolsAwbGroupAllAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetToolsAwbGroupAllAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetToolsAwbGroupAllOperationCompleted Is Nothing) Then
                Me.GetToolsAwbGroupAllOperationCompleted = AddressOf Me.OnGetToolsAwbGroupAllOperationCompleted
            End If
            Me.InvokeAsync("GetToolsAwbGroupAll", New Object() {AppName, AppVersion, Param}, Me.GetToolsAwbGroupAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetToolsAwbGroupAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetToolsAwbGroupAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetToolsAwbGroupAllCompleted(Me, New GetToolsAwbGroupAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ToolsAddAwbGroup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ToolsAddAwbGroup(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ToolsAddAwbGroup", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ToolsAddAwbGroupAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ToolsAddAwbGroupAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ToolsAddAwbGroupAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ToolsAddAwbGroupOperationCompleted Is Nothing) Then
                Me.ToolsAddAwbGroupOperationCompleted = AddressOf Me.OnToolsAddAwbGroupOperationCompleted
            End If
            Me.InvokeAsync("ToolsAddAwbGroup", New Object() {AppName, AppVersion, Param}, Me.ToolsAddAwbGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnToolsAddAwbGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.ToolsAddAwbGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ToolsAddAwbGroupCompleted(Me, New ToolsAddAwbGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ToolsAddTools", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ToolsAddTools(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ToolsAddTools", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ToolsAddToolsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ToolsAddToolsAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ToolsAddToolsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ToolsAddToolsOperationCompleted Is Nothing) Then
                Me.ToolsAddToolsOperationCompleted = AddressOf Me.OnToolsAddToolsOperationCompleted
            End If
            Me.InvokeAsync("ToolsAddTools", New Object() {AppName, AppVersion, Param}, Me.ToolsAddToolsOperationCompleted, userState)
        End Sub
        
        Private Sub OnToolsAddToolsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ToolsAddToolsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ToolsAddToolsCompleted(Me, New ToolsAddToolsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetToolsListForDdl", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetToolsListForDdl(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetToolsListForDdl", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetToolsListForDdlAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetToolsListForDdlAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetToolsListForDdlAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetToolsListForDdlOperationCompleted Is Nothing) Then
                Me.GetToolsListForDdlOperationCompleted = AddressOf Me.OnGetToolsListForDdlOperationCompleted
            End If
            Me.InvokeAsync("GetToolsListForDdl", New Object() {AppName, AppVersion, Param}, Me.GetToolsListForDdlOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetToolsListForDdlOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetToolsListForDdlCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetToolsListForDdlCompleted(Me, New GetToolsListForDdlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PartnerItemListSpecialCase", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PartnerItemListSpecialCase(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PartnerItemListSpecialCase", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PartnerItemListSpecialCaseAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PartnerItemListSpecialCaseAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PartnerItemListSpecialCaseAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PartnerItemListSpecialCaseOperationCompleted Is Nothing) Then
                Me.PartnerItemListSpecialCaseOperationCompleted = AddressOf Me.OnPartnerItemListSpecialCaseOperationCompleted
            End If
            Me.InvokeAsync("PartnerItemListSpecialCase", New Object() {AppName, AppVersion, Param}, Me.PartnerItemListSpecialCaseOperationCompleted, userState)
        End Sub
        
        Private Sub OnPartnerItemListSpecialCaseOperationCompleted(ByVal arg As Object)
            If (Not (Me.PartnerItemListSpecialCaseCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PartnerItemListSpecialCaseCompleted(Me, New PartnerItemListSpecialCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PartnerItemListProcess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PartnerItemListProcess(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PartnerItemListProcess", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PartnerItemListProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PartnerItemListProcessAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PartnerItemListProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PartnerItemListProcessOperationCompleted Is Nothing) Then
                Me.PartnerItemListProcessOperationCompleted = AddressOf Me.OnPartnerItemListProcessOperationCompleted
            End If
            Me.InvokeAsync("PartnerItemListProcess", New Object() {AppName, AppVersion, Param}, Me.PartnerItemListProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnPartnerItemListProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.PartnerItemListProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PartnerItemListProcessCompleted(Me, New PartnerItemListProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PartnerItemListHubItem", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PartnerItemListHubItem(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PartnerItemListHubItem", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PartnerItemListHubItemAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PartnerItemListHubItemAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PartnerItemListHubItemAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PartnerItemListHubItemOperationCompleted Is Nothing) Then
                Me.PartnerItemListHubItemOperationCompleted = AddressOf Me.OnPartnerItemListHubItemOperationCompleted
            End If
            Me.InvokeAsync("PartnerItemListHubItem", New Object() {AppName, AppVersion, Param}, Me.PartnerItemListHubItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnPartnerItemListHubItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.PartnerItemListHubItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PartnerItemListHubItemCompleted(Me, New PartnerItemListHubItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PartnerItemListAllItem", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PartnerItemListAllItem(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PartnerItemListAllItem", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PartnerItemListAllItemAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PartnerItemListAllItemAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PartnerItemListAllItemAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PartnerItemListAllItemOperationCompleted Is Nothing) Then
                Me.PartnerItemListAllItemOperationCompleted = AddressOf Me.OnPartnerItemListAllItemOperationCompleted
            End If
            Me.InvokeAsync("PartnerItemListAllItem", New Object() {AppName, AppVersion, Param}, Me.PartnerItemListAllItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnPartnerItemListAllItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.PartnerItemListAllItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PartnerItemListAllItemCompleted(Me, New PartnerItemListAllItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PartnerItemListReportCategory", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PartnerItemListReportCategory(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PartnerItemListReportCategory", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PartnerItemListReportCategoryAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PartnerItemListReportCategoryAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PartnerItemListReportCategoryAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PartnerItemListReportCategoryOperationCompleted Is Nothing) Then
                Me.PartnerItemListReportCategoryOperationCompleted = AddressOf Me.OnPartnerItemListReportCategoryOperationCompleted
            End If
            Me.InvokeAsync("PartnerItemListReportCategory", New Object() {AppName, AppVersion, Param}, Me.PartnerItemListReportCategoryOperationCompleted, userState)
        End Sub
        
        Private Sub OnPartnerItemListReportCategoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.PartnerItemListReportCategoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PartnerItemListReportCategoryCompleted(Me, New PartnerItemListReportCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PartnerItemProcess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PartnerItemProcess(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("PartnerItemProcess", New Object() {AppName, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PartnerItemProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.PartnerItemProcessAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PartnerItemProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.PartnerItemProcessOperationCompleted Is Nothing) Then
                Me.PartnerItemProcessOperationCompleted = AddressOf Me.OnPartnerItemProcessOperationCompleted
            End If
            Me.InvokeAsync("PartnerItemProcess", New Object() {AppName, AppVersion, Param, dsData}, Me.PartnerItemProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnPartnerItemProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.PartnerItemProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PartnerItemProcessCompleted(Me, New PartnerItemProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LaundryGetDataByOrderNo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LaundryGetDataByOrderNo(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("LaundryGetDataByOrderNo", New Object() {AppName, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub LaundryGetDataByOrderNoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.LaundryGetDataByOrderNoAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LaundryGetDataByOrderNoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.LaundryGetDataByOrderNoOperationCompleted Is Nothing) Then
                Me.LaundryGetDataByOrderNoOperationCompleted = AddressOf Me.OnLaundryGetDataByOrderNoOperationCompleted
            End If
            Me.InvokeAsync("LaundryGetDataByOrderNo", New Object() {AppName, AppVersion, Param, dsData}, Me.LaundryGetDataByOrderNoOperationCompleted, userState)
        End Sub
        
        Private Sub OnLaundryGetDataByOrderNoOperationCompleted(ByVal arg As Object)
            If (Not (Me.LaundryGetDataByOrderNoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LaundryGetDataByOrderNoCompleted(Me, New LaundryGetDataByOrderNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFeatureUserAccess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFeatureUserAccess(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetFeatureUserAccess", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFeatureUserAccessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetFeatureUserAccessAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFeatureUserAccessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetFeatureUserAccessOperationCompleted Is Nothing) Then
                Me.GetFeatureUserAccessOperationCompleted = AddressOf Me.OnGetFeatureUserAccessOperationCompleted
            End If
            Me.InvokeAsync("GetFeatureUserAccess", New Object() {AppName, AppVersion, Param}, Me.GetFeatureUserAccessOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFeatureUserAccessOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFeatureUserAccessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFeatureUserAccessCompleted(Me, New GetFeatureUserAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDbInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDbInfo(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetDbInfo", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDbInfoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetDbInfoAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDbInfoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetDbInfoOperationCompleted Is Nothing) Then
                Me.GetDbInfoOperationCompleted = AddressOf Me.OnGetDbInfoOperationCompleted
            End If
            Me.InvokeAsync("GetDbInfo", New Object() {AppName, AppVersion, Param}, Me.GetDbInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDbInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDbInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDbInfoCompleted(Me, New GetDbInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReasonRemoveTrackNumInCons", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReasonRemoveTrackNumInCons(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetReasonRemoveTrackNumInCons", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetReasonRemoveTrackNumInConsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetReasonRemoveTrackNumInConsAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetReasonRemoveTrackNumInConsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetReasonRemoveTrackNumInConsOperationCompleted Is Nothing) Then
                Me.GetReasonRemoveTrackNumInConsOperationCompleted = AddressOf Me.OnGetReasonRemoveTrackNumInConsOperationCompleted
            End If
            Me.InvokeAsync("GetReasonRemoveTrackNumInCons", New Object() {AppName, AppVersion, Param}, Me.GetReasonRemoveTrackNumInConsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetReasonRemoveTrackNumInConsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetReasonRemoveTrackNumInConsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetReasonRemoveTrackNumInConsCompleted(Me, New GetReasonRemoveTrackNumInConsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTrackNumInConsListOri", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTrackNumInConsListOri(ByVal AppName As String, ByVal AppVersion As String, ByVal OriCode As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetTrackNumInConsListOri", New Object() {AppName, AppVersion, OriCode, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTrackNumInConsListOriAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal OriCode As String, ByVal Param() As Object)
            Me.GetTrackNumInConsListOriAsync(AppName, AppVersion, OriCode, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTrackNumInConsListOriAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal OriCode As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetTrackNumInConsListOriOperationCompleted Is Nothing) Then
                Me.GetTrackNumInConsListOriOperationCompleted = AddressOf Me.OnGetTrackNumInConsListOriOperationCompleted
            End If
            Me.InvokeAsync("GetTrackNumInConsListOri", New Object() {AppName, AppVersion, OriCode, Param}, Me.GetTrackNumInConsListOriOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTrackNumInConsListOriOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTrackNumInConsListOriCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTrackNumInConsListOriCompleted(Me, New GetTrackNumInConsListOriCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTrackNumInConsListDst", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTrackNumInConsListDst(ByVal AppName As String, ByVal AppVersion As String, ByVal DstCode As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetTrackNumInConsListDst", New Object() {AppName, AppVersion, DstCode, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTrackNumInConsListDstAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal DstCode As String, ByVal Param() As Object)
            Me.GetTrackNumInConsListDstAsync(AppName, AppVersion, DstCode, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTrackNumInConsListDstAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal DstCode As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetTrackNumInConsListDstOperationCompleted Is Nothing) Then
                Me.GetTrackNumInConsListDstOperationCompleted = AddressOf Me.OnGetTrackNumInConsListDstOperationCompleted
            End If
            Me.InvokeAsync("GetTrackNumInConsListDst", New Object() {AppName, AppVersion, DstCode, Param}, Me.GetTrackNumInConsListDstOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTrackNumInConsListDstOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTrackNumInConsListDstCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTrackNumInConsListDstCompleted(Me, New GetTrackNumInConsListDstCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTrackNumInConsList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTrackNumInConsList(ByVal AppName As String, ByVal AppVersion As String, ByVal OriCode As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetTrackNumInConsList", New Object() {AppName, AppVersion, OriCode, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTrackNumInConsListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal OriCode As String, ByVal Param() As Object)
            Me.GetTrackNumInConsListAsync(AppName, AppVersion, OriCode, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTrackNumInConsListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal OriCode As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetTrackNumInConsListOperationCompleted Is Nothing) Then
                Me.GetTrackNumInConsListOperationCompleted = AddressOf Me.OnGetTrackNumInConsListOperationCompleted
            End If
            Me.InvokeAsync("GetTrackNumInConsList", New Object() {AppName, AppVersion, OriCode, Param}, Me.GetTrackNumInConsListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTrackNumInConsListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTrackNumInConsListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTrackNumInConsListCompleted(Me, New GetTrackNumInConsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TrackNumInConsRemoveOri", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TrackNumInConsRemoveOri(ByVal AppName As String, ByVal AppVersion As String, ByVal OriCode As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("TrackNumInConsRemoveOri", New Object() {AppName, AppVersion, OriCode, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub TrackNumInConsRemoveOriAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal OriCode As String, ByVal Param() As Object)
            Me.TrackNumInConsRemoveOriAsync(AppName, AppVersion, OriCode, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TrackNumInConsRemoveOriAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal OriCode As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.TrackNumInConsRemoveOriOperationCompleted Is Nothing) Then
                Me.TrackNumInConsRemoveOriOperationCompleted = AddressOf Me.OnTrackNumInConsRemoveOriOperationCompleted
            End If
            Me.InvokeAsync("TrackNumInConsRemoveOri", New Object() {AppName, AppVersion, OriCode, Param}, Me.TrackNumInConsRemoveOriOperationCompleted, userState)
        End Sub
        
        Private Sub OnTrackNumInConsRemoveOriOperationCompleted(ByVal arg As Object)
            If (Not (Me.TrackNumInConsRemoveOriCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TrackNumInConsRemoveOriCompleted(Me, New TrackNumInConsRemoveOriCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TrackNumInConsRemoveDst", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TrackNumInConsRemoveDst(ByVal AppName As String, ByVal AppVersion As String, ByVal DstCode As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("TrackNumInConsRemoveDst", New Object() {AppName, AppVersion, DstCode, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub TrackNumInConsRemoveDstAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal DstCode As String, ByVal Param() As Object)
            Me.TrackNumInConsRemoveDstAsync(AppName, AppVersion, DstCode, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TrackNumInConsRemoveDstAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal DstCode As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.TrackNumInConsRemoveDstOperationCompleted Is Nothing) Then
                Me.TrackNumInConsRemoveDstOperationCompleted = AddressOf Me.OnTrackNumInConsRemoveDstOperationCompleted
            End If
            Me.InvokeAsync("TrackNumInConsRemoveDst", New Object() {AppName, AppVersion, DstCode, Param}, Me.TrackNumInConsRemoveDstOperationCompleted, userState)
        End Sub
        
        Private Sub OnTrackNumInConsRemoveDstOperationCompleted(ByVal arg As Object)
            If (Not (Me.TrackNumInConsRemoveDstCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TrackNumInConsRemoveDstCompleted(Me, New TrackNumInConsRemoveDstCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TrackNumInConsRemove", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TrackNumInConsRemove(ByVal AppName As String, ByVal AppVersion As String, ByVal OriCode As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("TrackNumInConsRemove", New Object() {AppName, AppVersion, OriCode, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub TrackNumInConsRemoveAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal OriCode As String, ByVal Param() As Object)
            Me.TrackNumInConsRemoveAsync(AppName, AppVersion, OriCode, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TrackNumInConsRemoveAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal OriCode As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.TrackNumInConsRemoveOperationCompleted Is Nothing) Then
                Me.TrackNumInConsRemoveOperationCompleted = AddressOf Me.OnTrackNumInConsRemoveOperationCompleted
            End If
            Me.InvokeAsync("TrackNumInConsRemove", New Object() {AppName, AppVersion, OriCode, Param}, Me.TrackNumInConsRemoveOperationCompleted, userState)
        End Sub
        
        Private Sub OnTrackNumInConsRemoveOperationCompleted(ByVal arg As Object)
            If (Not (Me.TrackNumInConsRemoveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TrackNumInConsRemoveCompleted(Me, New TrackNumInConsRemoveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ApprovalList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ApprovalList(ByVal AppName As String, ByVal AppVersion As String, ByVal CheckerCode As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ApprovalList", New Object() {AppName, AppVersion, CheckerCode, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ApprovalListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal CheckerCode As String, ByVal Param() As Object)
            Me.ApprovalListAsync(AppName, AppVersion, CheckerCode, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ApprovalListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal CheckerCode As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ApprovalListOperationCompleted Is Nothing) Then
                Me.ApprovalListOperationCompleted = AddressOf Me.OnApprovalListOperationCompleted
            End If
            Me.InvokeAsync("ApprovalList", New Object() {AppName, AppVersion, CheckerCode, Param}, Me.ApprovalListOperationCompleted, userState)
        End Sub
        
        Private Sub OnApprovalListOperationCompleted(ByVal arg As Object)
            If (Not (Me.ApprovalListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ApprovalListCompleted(Me, New ApprovalListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ApprovalProcess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ApprovalProcess(ByVal AppName As String, ByVal AppVersion As String, ByVal CheckerCode As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ApprovalProcess", New Object() {AppName, AppVersion, CheckerCode, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ApprovalProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal CheckerCode As String, ByVal Param() As Object)
            Me.ApprovalProcessAsync(AppName, AppVersion, CheckerCode, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ApprovalProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal CheckerCode As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ApprovalProcessOperationCompleted Is Nothing) Then
                Me.ApprovalProcessOperationCompleted = AddressOf Me.OnApprovalProcessOperationCompleted
            End If
            Me.InvokeAsync("ApprovalProcess", New Object() {AppName, AppVersion, CheckerCode, Param}, Me.ApprovalProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnApprovalProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.ApprovalProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ApprovalProcessCompleted(Me, New ApprovalProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MitraShipperGet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MitraShipperGet(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("MitraShipperGet", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub MitraShipperGetAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.MitraShipperGetAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MitraShipperGetAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.MitraShipperGetOperationCompleted Is Nothing) Then
                Me.MitraShipperGetOperationCompleted = AddressOf Me.OnMitraShipperGetOperationCompleted
            End If
            Me.InvokeAsync("MitraShipperGet", New Object() {AppName, AppVersion, Param}, Me.MitraShipperGetOperationCompleted, userState)
        End Sub
        
        Private Sub OnMitraShipperGetOperationCompleted(ByVal arg As Object)
            If (Not (Me.MitraShipperGetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MitraShipperGetCompleted(Me, New MitraShipperGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MitraShipperSet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MitraShipperSet(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("MitraShipperSet", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub MitraShipperSetAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.MitraShipperSetAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MitraShipperSetAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.MitraShipperSetOperationCompleted Is Nothing) Then
                Me.MitraShipperSetOperationCompleted = AddressOf Me.OnMitraShipperSetOperationCompleted
            End If
            Me.InvokeAsync("MitraShipperSet", New Object() {AppName, AppVersion, Param}, Me.MitraShipperSetOperationCompleted, userState)
        End Sub
        
        Private Sub OnMitraShipperSetOperationCompleted(ByVal arg As Object)
            If (Not (Me.MitraShipperSetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MitraShipperSetCompleted(Me, New MitraShipperSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MitraServiceGet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MitraServiceGet(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("MitraServiceGet", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub MitraServiceGetAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.MitraServiceGetAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MitraServiceGetAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.MitraServiceGetOperationCompleted Is Nothing) Then
                Me.MitraServiceGetOperationCompleted = AddressOf Me.OnMitraServiceGetOperationCompleted
            End If
            Me.InvokeAsync("MitraServiceGet", New Object() {AppName, AppVersion, Param}, Me.MitraServiceGetOperationCompleted, userState)
        End Sub
        
        Private Sub OnMitraServiceGetOperationCompleted(ByVal arg As Object)
            If (Not (Me.MitraServiceGetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MitraServiceGetCompleted(Me, New MitraServiceGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CustomTrackNumStockIndomaretStore", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CustomTrackNumStockIndomaretStore(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("CustomTrackNumStockIndomaretStore", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CustomTrackNumStockIndomaretStoreAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.CustomTrackNumStockIndomaretStoreAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CustomTrackNumStockIndomaretStoreAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.CustomTrackNumStockIndomaretStoreOperationCompleted Is Nothing) Then
                Me.CustomTrackNumStockIndomaretStoreOperationCompleted = AddressOf Me.OnCustomTrackNumStockIndomaretStoreOperationCompleted
            End If
            Me.InvokeAsync("CustomTrackNumStockIndomaretStore", New Object() {AppName, AppVersion, Param}, Me.CustomTrackNumStockIndomaretStoreOperationCompleted, userState)
        End Sub
        
        Private Sub OnCustomTrackNumStockIndomaretStoreOperationCompleted(ByVal arg As Object)
            If (Not (Me.CustomTrackNumStockIndomaretStoreCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CustomTrackNumStockIndomaretStoreCompleted(Me, New CustomTrackNumStockIndomaretStoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CustomTrackNumReleaseStockIndomaretStore", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CustomTrackNumReleaseStockIndomaretStore(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("CustomTrackNumReleaseStockIndomaretStore", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CustomTrackNumReleaseStockIndomaretStoreAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.CustomTrackNumReleaseStockIndomaretStoreAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CustomTrackNumReleaseStockIndomaretStoreAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.CustomTrackNumReleaseStockIndomaretStoreOperationCompleted Is Nothing) Then
                Me.CustomTrackNumReleaseStockIndomaretStoreOperationCompleted = AddressOf Me.OnCustomTrackNumReleaseStockIndomaretStoreOperationCompleted
            End If
            Me.InvokeAsync("CustomTrackNumReleaseStockIndomaretStore", New Object() {AppName, AppVersion, Param}, Me.CustomTrackNumReleaseStockIndomaretStoreOperationCompleted, userState)
        End Sub
        
        Private Sub OnCustomTrackNumReleaseStockIndomaretStoreOperationCompleted(ByVal arg As Object)
            If (Not (Me.CustomTrackNumReleaseStockIndomaretStoreCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CustomTrackNumReleaseStockIndomaretStoreCompleted(Me, New CustomTrackNumReleaseStockIndomaretStoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CustomTrackNumStockIndopaketHub", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CustomTrackNumStockIndopaketHub(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("CustomTrackNumStockIndopaketHub", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CustomTrackNumStockIndopaketHubAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.CustomTrackNumStockIndopaketHubAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CustomTrackNumStockIndopaketHubAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.CustomTrackNumStockIndopaketHubOperationCompleted Is Nothing) Then
                Me.CustomTrackNumStockIndopaketHubOperationCompleted = AddressOf Me.OnCustomTrackNumStockIndopaketHubOperationCompleted
            End If
            Me.InvokeAsync("CustomTrackNumStockIndopaketHub", New Object() {AppName, AppVersion, Param}, Me.CustomTrackNumStockIndopaketHubOperationCompleted, userState)
        End Sub
        
        Private Sub OnCustomTrackNumStockIndopaketHubOperationCompleted(ByVal arg As Object)
            If (Not (Me.CustomTrackNumStockIndopaketHubCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CustomTrackNumStockIndopaketHubCompleted(Me, New CustomTrackNumStockIndopaketHubCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExtendSTIPeriodGetCost", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExtendSTIPeriodGetCost(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ExtendSTIPeriodGetCost", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExtendSTIPeriodGetCostAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ExtendSTIPeriodGetCostAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExtendSTIPeriodGetCostAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ExtendSTIPeriodGetCostOperationCompleted Is Nothing) Then
                Me.ExtendSTIPeriodGetCostOperationCompleted = AddressOf Me.OnExtendSTIPeriodGetCostOperationCompleted
            End If
            Me.InvokeAsync("ExtendSTIPeriodGetCost", New Object() {AppName, AppVersion, Param}, Me.ExtendSTIPeriodGetCostOperationCompleted, userState)
        End Sub
        
        Private Sub OnExtendSTIPeriodGetCostOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExtendSTIPeriodGetCostCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExtendSTIPeriodGetCostCompleted(Me, New ExtendSTIPeriodGetCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExtendSTIPeriodValidation", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExtendSTIPeriodValidation(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ExtendSTIPeriodValidation", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExtendSTIPeriodValidationAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ExtendSTIPeriodValidationAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExtendSTIPeriodValidationAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ExtendSTIPeriodValidationOperationCompleted Is Nothing) Then
                Me.ExtendSTIPeriodValidationOperationCompleted = AddressOf Me.OnExtendSTIPeriodValidationOperationCompleted
            End If
            Me.InvokeAsync("ExtendSTIPeriodValidation", New Object() {AppName, AppVersion, Param}, Me.ExtendSTIPeriodValidationOperationCompleted, userState)
        End Sub
        
        Private Sub OnExtendSTIPeriodValidationOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExtendSTIPeriodValidationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExtendSTIPeriodValidationCompleted(Me, New ExtendSTIPeriodValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExtendSTIPeriodProcess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExtendSTIPeriodProcess(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ExtendSTIPeriodProcess", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExtendSTIPeriodProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ExtendSTIPeriodProcessAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExtendSTIPeriodProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ExtendSTIPeriodProcessOperationCompleted Is Nothing) Then
                Me.ExtendSTIPeriodProcessOperationCompleted = AddressOf Me.OnExtendSTIPeriodProcessOperationCompleted
            End If
            Me.InvokeAsync("ExtendSTIPeriodProcess", New Object() {AppName, AppVersion, Param}, Me.ExtendSTIPeriodProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnExtendSTIPeriodProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExtendSTIPeriodProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExtendSTIPeriodProcessCompleted(Me, New ExtendSTIPeriodProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StoreDropSchedule", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function StoreDropSchedule(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("StoreDropSchedule", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub StoreDropScheduleAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.StoreDropScheduleAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StoreDropScheduleAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.StoreDropScheduleOperationCompleted Is Nothing) Then
                Me.StoreDropScheduleOperationCompleted = AddressOf Me.OnStoreDropScheduleOperationCompleted
            End If
            Me.InvokeAsync("StoreDropSchedule", New Object() {AppName, AppVersion, Param}, Me.StoreDropScheduleOperationCompleted, userState)
        End Sub
        
        Private Sub OnStoreDropScheduleOperationCompleted(ByVal arg As Object)
            If (Not (Me.StoreDropScheduleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StoreDropScheduleCompleted(Me, New StoreDropScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestGeoCoding", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub TestGeoCoding(ByVal Address As String, ByVal PostalCode As String)
            Me.Invoke("TestGeoCoding", New Object() {Address, PostalCode})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TestGeoCodingAsync(ByVal Address As String, ByVal PostalCode As String)
            Me.TestGeoCodingAsync(Address, PostalCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TestGeoCodingAsync(ByVal Address As String, ByVal PostalCode As String, ByVal userState As Object)
            If (Me.TestGeoCodingOperationCompleted Is Nothing) Then
                Me.TestGeoCodingOperationCompleted = AddressOf Me.OnTestGeoCodingOperationCompleted
            End If
            Me.InvokeAsync("TestGeoCoding", New Object() {Address, PostalCode}, Me.TestGeoCodingOperationCompleted, userState)
        End Sub
        
        Private Sub OnTestGeoCodingOperationCompleted(ByVal arg As Object)
            If (Not (Me.TestGeoCodingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TestGeoCodingCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteObsoleteData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteObsoleteData()
            Me.Invoke("DeleteObsoleteData", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteObsoleteDataAsync()
            Me.DeleteObsoleteDataAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteObsoleteDataAsync(ByVal userState As Object)
            If (Me.DeleteObsoleteDataOperationCompleted Is Nothing) Then
                Me.DeleteObsoleteDataOperationCompleted = AddressOf Me.OnDeleteObsoleteDataOperationCompleted
            End If
            Me.InvokeAsync("DeleteObsoleteData", New Object(-1) {}, Me.DeleteObsoleteDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteObsoleteDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteObsoleteDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteObsoleteDataCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HadiahPromosiGetPromosi", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HadiahPromosiGetPromosi(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("HadiahPromosiGetPromosi", New Object() {AppName, AppVersion, Param, dsData})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub HadiahPromosiGetPromosiAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.HadiahPromosiGetPromosiAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HadiahPromosiGetPromosiAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.HadiahPromosiGetPromosiOperationCompleted Is Nothing) Then
                Me.HadiahPromosiGetPromosiOperationCompleted = AddressOf Me.OnHadiahPromosiGetPromosiOperationCompleted
            End If
            Me.InvokeAsync("HadiahPromosiGetPromosi", New Object() {AppName, AppVersion, Param, dsData}, Me.HadiahPromosiGetPromosiOperationCompleted, userState)
        End Sub
        
        Private Sub OnHadiahPromosiGetPromosiOperationCompleted(ByVal arg As Object)
            If (Not (Me.HadiahPromosiGetPromosiCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HadiahPromosiGetPromosiCompleted(Me, New HadiahPromosiGetPromosiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HadiahPromosiCountTransaction", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HadiahPromosiCountTransaction(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("HadiahPromosiCountTransaction", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub HadiahPromosiCountTransactionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.HadiahPromosiCountTransactionAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HadiahPromosiCountTransactionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.HadiahPromosiCountTransactionOperationCompleted Is Nothing) Then
                Me.HadiahPromosiCountTransactionOperationCompleted = AddressOf Me.OnHadiahPromosiCountTransactionOperationCompleted
            End If
            Me.InvokeAsync("HadiahPromosiCountTransaction", New Object() {AppName, AppVersion, Param}, Me.HadiahPromosiCountTransactionOperationCompleted, userState)
        End Sub
        
        Private Sub OnHadiahPromosiCountTransactionOperationCompleted(ByVal arg As Object)
            If (Not (Me.HadiahPromosiCountTransactionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HadiahPromosiCountTransactionCompleted(Me, New HadiahPromosiCountTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HadiahPromosiAssignCoupon", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HadiahPromosiAssignCoupon(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("HadiahPromosiAssignCoupon", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub HadiahPromosiAssignCouponAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.HadiahPromosiAssignCouponAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HadiahPromosiAssignCouponAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.HadiahPromosiAssignCouponOperationCompleted Is Nothing) Then
                Me.HadiahPromosiAssignCouponOperationCompleted = AddressOf Me.OnHadiahPromosiAssignCouponOperationCompleted
            End If
            Me.InvokeAsync("HadiahPromosiAssignCoupon", New Object() {AppName, AppVersion, Param}, Me.HadiahPromosiAssignCouponOperationCompleted, userState)
        End Sub
        
        Private Sub OnHadiahPromosiAssignCouponOperationCompleted(ByVal arg As Object)
            If (Not (Me.HadiahPromosiAssignCouponCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HadiahPromosiAssignCouponCompleted(Me, New HadiahPromosiAssignCouponCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HadiahPromosiSendCoupon", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HadiahPromosiSendCoupon(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("HadiahPromosiSendCoupon", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub HadiahPromosiSendCouponAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.HadiahPromosiSendCouponAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HadiahPromosiSendCouponAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.HadiahPromosiSendCouponOperationCompleted Is Nothing) Then
                Me.HadiahPromosiSendCouponOperationCompleted = AddressOf Me.OnHadiahPromosiSendCouponOperationCompleted
            End If
            Me.InvokeAsync("HadiahPromosiSendCoupon", New Object() {AppName, AppVersion, Param}, Me.HadiahPromosiSendCouponOperationCompleted, userState)
        End Sub
        
        Private Sub OnHadiahPromosiSendCouponOperationCompleted(ByVal arg As Object)
            If (Not (Me.HadiahPromosiSendCouponCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HadiahPromosiSendCouponCompleted(Me, New HadiahPromosiSendCouponCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CustomerInputGetCategory", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CustomerInputGetCategory(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("CustomerInputGetCategory", New Object() {AppName, AppVersion, Param, dsData})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CustomerInputGetCategoryAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.CustomerInputGetCategoryAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CustomerInputGetCategoryAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.CustomerInputGetCategoryOperationCompleted Is Nothing) Then
                Me.CustomerInputGetCategoryOperationCompleted = AddressOf Me.OnCustomerInputGetCategoryOperationCompleted
            End If
            Me.InvokeAsync("CustomerInputGetCategory", New Object() {AppName, AppVersion, Param, dsData}, Me.CustomerInputGetCategoryOperationCompleted, userState)
        End Sub
        
        Private Sub OnCustomerInputGetCategoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.CustomerInputGetCategoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CustomerInputGetCategoryCompleted(Me, New CustomerInputGetCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CustomerInputData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CustomerInputData(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("CustomerInputData", New Object() {AppName, AppVersion, Param, dsData})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CustomerInputDataAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.CustomerInputDataAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CustomerInputDataAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.CustomerInputDataOperationCompleted Is Nothing) Then
                Me.CustomerInputDataOperationCompleted = AddressOf Me.OnCustomerInputDataOperationCompleted
            End If
            Me.InvokeAsync("CustomerInputData", New Object() {AppName, AppVersion, Param, dsData}, Me.CustomerInputDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnCustomerInputDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.CustomerInputDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CustomerInputDataCompleted(Me, New CustomerInputDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckTransactionDeliveryInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckTransactionDeliveryInfo(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("CheckTransactionDeliveryInfo", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckTransactionDeliveryInfoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.CheckTransactionDeliveryInfoAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckTransactionDeliveryInfoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.CheckTransactionDeliveryInfoOperationCompleted Is Nothing) Then
                Me.CheckTransactionDeliveryInfoOperationCompleted = AddressOf Me.OnCheckTransactionDeliveryInfoOperationCompleted
            End If
            Me.InvokeAsync("CheckTransactionDeliveryInfo", New Object() {AppName, AppVersion, Param}, Me.CheckTransactionDeliveryInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckTransactionDeliveryInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckTransactionDeliveryInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckTransactionDeliveryInfoCompleted(Me, New CheckTransactionDeliveryInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateStatusDeliveryInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateStatusDeliveryInfo(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateStatusDeliveryInfo", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateStatusDeliveryInfoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdateStatusDeliveryInfoAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateStatusDeliveryInfoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateStatusDeliveryInfoOperationCompleted Is Nothing) Then
                Me.UpdateStatusDeliveryInfoOperationCompleted = AddressOf Me.OnUpdateStatusDeliveryInfoOperationCompleted
            End If
            Me.InvokeAsync("UpdateStatusDeliveryInfo", New Object() {AppName, AppVersion, Param}, Me.UpdateStatusDeliveryInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateStatusDeliveryInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateStatusDeliveryInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateStatusDeliveryInfoCompleted(Me, New UpdateStatusDeliveryInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckUsePinDeliveryInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckUsePinDeliveryInfo(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("CheckUsePinDeliveryInfo", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckUsePinDeliveryInfoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.CheckUsePinDeliveryInfoAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckUsePinDeliveryInfoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.CheckUsePinDeliveryInfoOperationCompleted Is Nothing) Then
                Me.CheckUsePinDeliveryInfoOperationCompleted = AddressOf Me.OnCheckUsePinDeliveryInfoOperationCompleted
            End If
            Me.InvokeAsync("CheckUsePinDeliveryInfo", New Object() {AppName, AppVersion, Param}, Me.CheckUsePinDeliveryInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckUsePinDeliveryInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckUsePinDeliveryInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckUsePinDeliveryInfoCompleted(Me, New CheckUsePinDeliveryInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CaseReOrderGetOrder", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CaseReOrderGetOrder(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("CaseReOrderGetOrder", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CaseReOrderGetOrderAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.CaseReOrderGetOrderAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CaseReOrderGetOrderAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.CaseReOrderGetOrderOperationCompleted Is Nothing) Then
                Me.CaseReOrderGetOrderOperationCompleted = AddressOf Me.OnCaseReOrderGetOrderOperationCompleted
            End If
            Me.InvokeAsync("CaseReOrderGetOrder", New Object() {AppName, AppVersion, Param}, Me.CaseReOrderGetOrderOperationCompleted, userState)
        End Sub
        
        Private Sub OnCaseReOrderGetOrderOperationCompleted(ByVal arg As Object)
            If (Not (Me.CaseReOrderGetOrderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CaseReOrderGetOrderCompleted(Me, New CaseReOrderGetOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CaseReOrderCreateOrder", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CaseReOrderCreateOrder(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("CaseReOrderCreateOrder", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CaseReOrderCreateOrderAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.CaseReOrderCreateOrderAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CaseReOrderCreateOrderAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.CaseReOrderCreateOrderOperationCompleted Is Nothing) Then
                Me.CaseReOrderCreateOrderOperationCompleted = AddressOf Me.OnCaseReOrderCreateOrderOperationCompleted
            End If
            Me.InvokeAsync("CaseReOrderCreateOrder", New Object() {AppName, AppVersion, Param}, Me.CaseReOrderCreateOrderOperationCompleted, userState)
        End Sub
        
        Private Sub OnCaseReOrderCreateOrderOperationCompleted(ByVal arg As Object)
            If (Not (Me.CaseReOrderCreateOrderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CaseReOrderCreateOrderCompleted(Me, New CaseReOrderCreateOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExpeditionAutoOrderPrintLabelv2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExpeditionAutoOrderPrintLabelv2(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsResult As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("ExpeditionAutoOrderPrintLabelv2", New Object() {AppName, AppVersion, Param, dsResult})
            dsResult = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExpeditionAutoOrderPrintLabelv2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsResult As System.Data.DataSet)
            Me.ExpeditionAutoOrderPrintLabelv2Async(AppName, AppVersion, Param, dsResult, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExpeditionAutoOrderPrintLabelv2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsResult As System.Data.DataSet, ByVal userState As Object)
            If (Me.ExpeditionAutoOrderPrintLabelv2OperationCompleted Is Nothing) Then
                Me.ExpeditionAutoOrderPrintLabelv2OperationCompleted = AddressOf Me.OnExpeditionAutoOrderPrintLabelv2OperationCompleted
            End If
            Me.InvokeAsync("ExpeditionAutoOrderPrintLabelv2", New Object() {AppName, AppVersion, Param, dsResult}, Me.ExpeditionAutoOrderPrintLabelv2OperationCompleted, userState)
        End Sub
        
        Private Sub OnExpeditionAutoOrderPrintLabelv2OperationCompleted(ByVal arg As Object)
            If (Not (Me.ExpeditionAutoOrderPrintLabelv2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExpeditionAutoOrderPrintLabelv2Completed(Me, New ExpeditionAutoOrderPrintLabelv2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExpeditionAutoOrderPrintLabel", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExpeditionAutoOrderPrintLabel(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ExpeditionAutoOrderPrintLabel", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExpeditionAutoOrderPrintLabelAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ExpeditionAutoOrderPrintLabelAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExpeditionAutoOrderPrintLabelAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ExpeditionAutoOrderPrintLabelOperationCompleted Is Nothing) Then
                Me.ExpeditionAutoOrderPrintLabelOperationCompleted = AddressOf Me.OnExpeditionAutoOrderPrintLabelOperationCompleted
            End If
            Me.InvokeAsync("ExpeditionAutoOrderPrintLabel", New Object() {AppName, AppVersion, Param}, Me.ExpeditionAutoOrderPrintLabelOperationCompleted, userState)
        End Sub
        
        Private Sub OnExpeditionAutoOrderPrintLabelOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExpeditionAutoOrderPrintLabelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExpeditionAutoOrderPrintLabelCompleted(Me, New ExpeditionAutoOrderPrintLabelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExpeditionAutoOrderSetting", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetExpeditionAutoOrderSetting(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("GetExpeditionAutoOrderSetting", New Object() {AppName, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetExpeditionAutoOrderSettingAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.GetExpeditionAutoOrderSettingAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetExpeditionAutoOrderSettingAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.GetExpeditionAutoOrderSettingOperationCompleted Is Nothing) Then
                Me.GetExpeditionAutoOrderSettingOperationCompleted = AddressOf Me.OnGetExpeditionAutoOrderSettingOperationCompleted
            End If
            Me.InvokeAsync("GetExpeditionAutoOrderSetting", New Object() {AppName, AppVersion, Param, dsData}, Me.GetExpeditionAutoOrderSettingOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetExpeditionAutoOrderSettingOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetExpeditionAutoOrderSettingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetExpeditionAutoOrderSettingCompleted(Me, New GetExpeditionAutoOrderSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WHIListAutoOrderExp", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WHIListAutoOrderExp(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WHIListAutoOrderExp", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WHIListAutoOrderExpAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.WHIListAutoOrderExpAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WHIListAutoOrderExpAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WHIListAutoOrderExpOperationCompleted Is Nothing) Then
                Me.WHIListAutoOrderExpOperationCompleted = AddressOf Me.OnWHIListAutoOrderExpOperationCompleted
            End If
            Me.InvokeAsync("WHIListAutoOrderExp", New Object() {AppName, AppVersion, Hub, Param}, Me.WHIListAutoOrderExpOperationCompleted, userState)
        End Sub
        
        Private Sub OnWHIListAutoOrderExpOperationCompleted(ByVal arg As Object)
            If (Not (Me.WHIListAutoOrderExpCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WHIListAutoOrderExpCompleted(Me, New WHIListAutoOrderExpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExpeditionAutoOrderInsertTransaction", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExpeditionAutoOrderInsertTransaction(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("ExpeditionAutoOrderInsertTransaction", New Object() {AppName, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExpeditionAutoOrderInsertTransactionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.ExpeditionAutoOrderInsertTransactionAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExpeditionAutoOrderInsertTransactionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.ExpeditionAutoOrderInsertTransactionOperationCompleted Is Nothing) Then
                Me.ExpeditionAutoOrderInsertTransactionOperationCompleted = AddressOf Me.OnExpeditionAutoOrderInsertTransactionOperationCompleted
            End If
            Me.InvokeAsync("ExpeditionAutoOrderInsertTransaction", New Object() {AppName, AppVersion, Param, dsData}, Me.ExpeditionAutoOrderInsertTransactionOperationCompleted, userState)
        End Sub
        
        Private Sub OnExpeditionAutoOrderInsertTransactionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExpeditionAutoOrderInsertTransactionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExpeditionAutoOrderInsertTransactionCompleted(Me, New ExpeditionAutoOrderInsertTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExpeditionAutoOrderNewTrx", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExpeditionAutoOrderNewTrx(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ExpeditionAutoOrderNewTrx", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExpeditionAutoOrderNewTrxAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ExpeditionAutoOrderNewTrxAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExpeditionAutoOrderNewTrxAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ExpeditionAutoOrderNewTrxOperationCompleted Is Nothing) Then
                Me.ExpeditionAutoOrderNewTrxOperationCompleted = AddressOf Me.OnExpeditionAutoOrderNewTrxOperationCompleted
            End If
            Me.InvokeAsync("ExpeditionAutoOrderNewTrx", New Object() {AppName, AppVersion, Param}, Me.ExpeditionAutoOrderNewTrxOperationCompleted, userState)
        End Sub
        
        Private Sub OnExpeditionAutoOrderNewTrxOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExpeditionAutoOrderNewTrxCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExpeditionAutoOrderNewTrxCompleted(Me, New ExpeditionAutoOrderNewTrxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExpeditionAutoOrderUpdateStatusHDS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExpeditionAutoOrderUpdateStatusHDS(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ExpeditionAutoOrderUpdateStatusHDS", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExpeditionAutoOrderUpdateStatusHDSAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ExpeditionAutoOrderUpdateStatusHDSAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExpeditionAutoOrderUpdateStatusHDSAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ExpeditionAutoOrderUpdateStatusHDSOperationCompleted Is Nothing) Then
                Me.ExpeditionAutoOrderUpdateStatusHDSOperationCompleted = AddressOf Me.OnExpeditionAutoOrderUpdateStatusHDSOperationCompleted
            End If
            Me.InvokeAsync("ExpeditionAutoOrderUpdateStatusHDS", New Object() {AppName, AppVersion, Param}, Me.ExpeditionAutoOrderUpdateStatusHDSOperationCompleted, userState)
        End Sub
        
        Private Sub OnExpeditionAutoOrderUpdateStatusHDSOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExpeditionAutoOrderUpdateStatusHDSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExpeditionAutoOrderUpdateStatusHDSCompleted(Me, New ExpeditionAutoOrderUpdateStatusHDSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExpeditionAutoOrderUpdateStatusRTS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExpeditionAutoOrderUpdateStatusRTS(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ExpeditionAutoOrderUpdateStatusRTS", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExpeditionAutoOrderUpdateStatusRTSAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ExpeditionAutoOrderUpdateStatusRTSAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExpeditionAutoOrderUpdateStatusRTSAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ExpeditionAutoOrderUpdateStatusRTSOperationCompleted Is Nothing) Then
                Me.ExpeditionAutoOrderUpdateStatusRTSOperationCompleted = AddressOf Me.OnExpeditionAutoOrderUpdateStatusRTSOperationCompleted
            End If
            Me.InvokeAsync("ExpeditionAutoOrderUpdateStatusRTS", New Object() {AppName, AppVersion, Param}, Me.ExpeditionAutoOrderUpdateStatusRTSOperationCompleted, userState)
        End Sub
        
        Private Sub OnExpeditionAutoOrderUpdateStatusRTSOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExpeditionAutoOrderUpdateStatusRTSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExpeditionAutoOrderUpdateStatusRTSCompleted(Me, New ExpeditionAutoOrderUpdateStatusRTSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WHOListAutoOrderExp", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WHOListAutoOrderExp(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WHOListAutoOrderExp", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WHOListAutoOrderExpAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.WHOListAutoOrderExpAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WHOListAutoOrderExpAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WHOListAutoOrderExpOperationCompleted Is Nothing) Then
                Me.WHOListAutoOrderExpOperationCompleted = AddressOf Me.OnWHOListAutoOrderExpOperationCompleted
            End If
            Me.InvokeAsync("WHOListAutoOrderExp", New Object() {AppName, AppVersion, Hub, Param}, Me.WHOListAutoOrderExpOperationCompleted, userState)
        End Sub
        
        Private Sub OnWHOListAutoOrderExpOperationCompleted(ByVal arg As Object)
            If (Not (Me.WHOListAutoOrderExpCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WHOListAutoOrderExpCompleted(Me, New WHOListAutoOrderExpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExpeditionAutoOrderValidateCons", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExpeditionAutoOrderValidateCons(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ExpeditionAutoOrderValidateCons", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExpeditionAutoOrderValidateConsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ExpeditionAutoOrderValidateConsAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExpeditionAutoOrderValidateConsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ExpeditionAutoOrderValidateConsOperationCompleted Is Nothing) Then
                Me.ExpeditionAutoOrderValidateConsOperationCompleted = AddressOf Me.OnExpeditionAutoOrderValidateConsOperationCompleted
            End If
            Me.InvokeAsync("ExpeditionAutoOrderValidateCons", New Object() {AppName, AppVersion, Param}, Me.ExpeditionAutoOrderValidateConsOperationCompleted, userState)
        End Sub
        
        Private Sub OnExpeditionAutoOrderValidateConsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExpeditionAutoOrderValidateConsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExpeditionAutoOrderValidateConsCompleted(Me, New ExpeditionAutoOrderValidateConsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExpeditionAutoOrderInsertCons", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExpeditionAutoOrderInsertCons(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("ExpeditionAutoOrderInsertCons", New Object() {AppName, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExpeditionAutoOrderInsertConsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.ExpeditionAutoOrderInsertConsAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExpeditionAutoOrderInsertConsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.ExpeditionAutoOrderInsertConsOperationCompleted Is Nothing) Then
                Me.ExpeditionAutoOrderInsertConsOperationCompleted = AddressOf Me.OnExpeditionAutoOrderInsertConsOperationCompleted
            End If
            Me.InvokeAsync("ExpeditionAutoOrderInsertCons", New Object() {AppName, AppVersion, Param, dsData}, Me.ExpeditionAutoOrderInsertConsOperationCompleted, userState)
        End Sub
        
        Private Sub OnExpeditionAutoOrderInsertConsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExpeditionAutoOrderInsertConsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExpeditionAutoOrderInsertConsCompleted(Me, New ExpeditionAutoOrderInsertConsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExpeditionAutoOrderNewCons", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExpeditionAutoOrderNewCons(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ExpeditionAutoOrderNewCons", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExpeditionAutoOrderNewConsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ExpeditionAutoOrderNewConsAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExpeditionAutoOrderNewConsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ExpeditionAutoOrderNewConsOperationCompleted Is Nothing) Then
                Me.ExpeditionAutoOrderNewConsOperationCompleted = AddressOf Me.OnExpeditionAutoOrderNewConsOperationCompleted
            End If
            Me.InvokeAsync("ExpeditionAutoOrderNewCons", New Object() {AppName, AppVersion, Param}, Me.ExpeditionAutoOrderNewConsOperationCompleted, userState)
        End Sub
        
        Private Sub OnExpeditionAutoOrderNewConsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExpeditionAutoOrderNewConsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExpeditionAutoOrderNewConsCompleted(Me, New ExpeditionAutoOrderNewConsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExpeditionAutoOrderUpdateStatusCons", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExpeditionAutoOrderUpdateStatusCons(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ExpeditionAutoOrderUpdateStatusCons", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExpeditionAutoOrderUpdateStatusConsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ExpeditionAutoOrderUpdateStatusConsAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExpeditionAutoOrderUpdateStatusConsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ExpeditionAutoOrderUpdateStatusConsOperationCompleted Is Nothing) Then
                Me.ExpeditionAutoOrderUpdateStatusConsOperationCompleted = AddressOf Me.OnExpeditionAutoOrderUpdateStatusConsOperationCompleted
            End If
            Me.InvokeAsync("ExpeditionAutoOrderUpdateStatusCons", New Object() {AppName, AppVersion, Param}, Me.ExpeditionAutoOrderUpdateStatusConsOperationCompleted, userState)
        End Sub
        
        Private Sub OnExpeditionAutoOrderUpdateStatusConsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExpeditionAutoOrderUpdateStatusConsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExpeditionAutoOrderUpdateStatusConsCompleted(Me, New ExpeditionAutoOrderUpdateStatusConsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExpeditionAutoOrderResetHitCount", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExpeditionAutoOrderResetHitCount(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ExpeditionAutoOrderResetHitCount", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExpeditionAutoOrderResetHitCountAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ExpeditionAutoOrderResetHitCountAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExpeditionAutoOrderResetHitCountAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ExpeditionAutoOrderResetHitCountOperationCompleted Is Nothing) Then
                Me.ExpeditionAutoOrderResetHitCountOperationCompleted = AddressOf Me.OnExpeditionAutoOrderResetHitCountOperationCompleted
            End If
            Me.InvokeAsync("ExpeditionAutoOrderResetHitCount", New Object() {AppName, AppVersion, Param}, Me.ExpeditionAutoOrderResetHitCountOperationCompleted, userState)
        End Sub
        
        Private Sub OnExpeditionAutoOrderResetHitCountOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExpeditionAutoOrderResetHitCountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExpeditionAutoOrderResetHitCountCompleted(Me, New ExpeditionAutoOrderResetHitCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateHDSDownloadTemplate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateHDSDownloadTemplate(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsTemplate As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("UpdateHDSDownloadTemplate", New Object() {AppName, AppVersion, Param, dsTemplate})
            dsTemplate = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateHDSDownloadTemplateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsTemplate As System.Data.DataSet)
            Me.UpdateHDSDownloadTemplateAsync(AppName, AppVersion, Param, dsTemplate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateHDSDownloadTemplateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsTemplate As System.Data.DataSet, ByVal userState As Object)
            If (Me.UpdateHDSDownloadTemplateOperationCompleted Is Nothing) Then
                Me.UpdateHDSDownloadTemplateOperationCompleted = AddressOf Me.OnUpdateHDSDownloadTemplateOperationCompleted
            End If
            Me.InvokeAsync("UpdateHDSDownloadTemplate", New Object() {AppName, AppVersion, Param, dsTemplate}, Me.UpdateHDSDownloadTemplateOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateHDSDownloadTemplateOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateHDSDownloadTemplateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateHDSDownloadTemplateCompleted(Me, New UpdateHDSDownloadTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateHDSValidate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateHDSValidate(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("UpdateHDSValidate", New Object() {AppName, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateHDSValidateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.UpdateHDSValidateAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateHDSValidateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.UpdateHDSValidateOperationCompleted Is Nothing) Then
                Me.UpdateHDSValidateOperationCompleted = AddressOf Me.OnUpdateHDSValidateOperationCompleted
            End If
            Me.InvokeAsync("UpdateHDSValidate", New Object() {AppName, AppVersion, Param, dsData}, Me.UpdateHDSValidateOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateHDSValidateOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateHDSValidateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateHDSValidateCompleted(Me, New UpdateHDSValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateHDSProcess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateHDSProcess(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("UpdateHDSProcess", New Object() {AppName, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateHDSProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.UpdateHDSProcessAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateHDSProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.UpdateHDSProcessOperationCompleted Is Nothing) Then
                Me.UpdateHDSProcessOperationCompleted = AddressOf Me.OnUpdateHDSProcessOperationCompleted
            End If
            Me.InvokeAsync("UpdateHDSProcess", New Object() {AppName, AppVersion, Param, dsData}, Me.UpdateHDSProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateHDSProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateHDSProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateHDSProcessCompleted(Me, New UpdateHDSProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DashboardPartnerPickupLastData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DashboardPartnerPickupLastData(ByVal Appname As String, ByVal AppVersion As String, ByVal Param() As Object) As Object
            Dim results() As Object = Me.Invoke("DashboardPartnerPickupLastData", New Object() {Appname, AppVersion, Param})
            Return CType(results(0),Object)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPickupLastDataAsync(ByVal Appname As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.DashboardPartnerPickupLastDataAsync(Appname, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DashboardPartnerPickupLastDataAsync(ByVal Appname As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DashboardPartnerPickupLastDataOperationCompleted Is Nothing) Then
                Me.DashboardPartnerPickupLastDataOperationCompleted = AddressOf Me.OnDashboardPartnerPickupLastDataOperationCompleted
            End If
            Me.InvokeAsync("DashboardPartnerPickupLastData", New Object() {Appname, AppVersion, Param}, Me.DashboardPartnerPickupLastDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnDashboardPartnerPickupLastDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.DashboardPartnerPickupLastDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DashboardPartnerPickupLastDataCompleted(Me, New DashboardPartnerPickupLastDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StationOpenConsProcess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function StationOpenConsProcess(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("StationOpenConsProcess", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub StationOpenConsProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.StationOpenConsProcessAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StationOpenConsProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.StationOpenConsProcessOperationCompleted Is Nothing) Then
                Me.StationOpenConsProcessOperationCompleted = AddressOf Me.OnStationOpenConsProcessOperationCompleted
            End If
            Me.InvokeAsync("StationOpenConsProcess", New Object() {AppName, AppVersion, Station, Param}, Me.StationOpenConsProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnStationOpenConsProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.StationOpenConsProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StationOpenConsProcessCompleted(Me, New StationOpenConsProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppCheckErrorConnection", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppCheckErrorConnection() As Object()
            Dim results() As Object = Me.Invoke("WebAppCheckErrorConnection", New Object(-1) {})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppCheckErrorConnectionAsync()
            Me.WebAppCheckErrorConnectionAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppCheckErrorConnectionAsync(ByVal userState As Object)
            If (Me.WebAppCheckErrorConnectionOperationCompleted Is Nothing) Then
                Me.WebAppCheckErrorConnectionOperationCompleted = AddressOf Me.OnWebAppCheckErrorConnectionOperationCompleted
            End If
            Me.InvokeAsync("WebAppCheckErrorConnection", New Object(-1) {}, Me.WebAppCheckErrorConnectionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppCheckErrorConnectionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppCheckErrorConnectionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppCheckErrorConnectionCompleted(Me, New WebAppCheckErrorConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppUserSingleRegistration", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppUserSingleRegistration(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppUserSingleRegistration", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppUserSingleRegistrationAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppUserSingleRegistrationAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserSingleRegistrationAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppUserSingleRegistrationOperationCompleted Is Nothing) Then
                Me.WebAppUserSingleRegistrationOperationCompleted = AddressOf Me.OnWebAppUserSingleRegistrationOperationCompleted
            End If
            Me.InvokeAsync("WebAppUserSingleRegistration", New Object() {AppName, AppVersion, Param}, Me.WebAppUserSingleRegistrationOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppUserSingleRegistrationOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppUserSingleRegistrationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppUserSingleRegistrationCompleted(Me, New WebAppUserSingleRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppUserSingleLogin", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppUserSingleLogin(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppUserSingleLogin", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppUserSingleLoginAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppUserSingleLoginAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserSingleLoginAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppUserSingleLoginOperationCompleted Is Nothing) Then
                Me.WebAppUserSingleLoginOperationCompleted = AddressOf Me.OnWebAppUserSingleLoginOperationCompleted
            End If
            Me.InvokeAsync("WebAppUserSingleLogin", New Object() {AppName, AppVersion, Param}, Me.WebAppUserSingleLoginOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppUserSingleLoginOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppUserSingleLoginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppUserSingleLoginCompleted(Me, New WebAppUserSingleLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppUserForgotPassword", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppUserForgotPassword(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppUserForgotPassword", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppUserForgotPasswordAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppUserForgotPasswordAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserForgotPasswordAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppUserForgotPasswordOperationCompleted Is Nothing) Then
                Me.WebAppUserForgotPasswordOperationCompleted = AddressOf Me.OnWebAppUserForgotPasswordOperationCompleted
            End If
            Me.InvokeAsync("WebAppUserForgotPassword", New Object() {AppName, AppVersion, Param}, Me.WebAppUserForgotPasswordOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppUserForgotPasswordOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppUserForgotPasswordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppUserForgotPasswordCompleted(Me, New WebAppUserForgotPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppUserUpdate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppUserUpdate(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppUserUpdate", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppUserUpdateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppUserUpdateAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserUpdateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppUserUpdateOperationCompleted Is Nothing) Then
                Me.WebAppUserUpdateOperationCompleted = AddressOf Me.OnWebAppUserUpdateOperationCompleted
            End If
            Me.InvokeAsync("WebAppUserUpdate", New Object() {AppName, AppVersion, Param}, Me.WebAppUserUpdateOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppUserUpdateOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppUserUpdateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppUserUpdateCompleted(Me, New WebAppUserUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppUserUpdateEmailPhone", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppUserUpdateEmailPhone(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppUserUpdateEmailPhone", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppUserUpdateEmailPhoneAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppUserUpdateEmailPhoneAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserUpdateEmailPhoneAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppUserUpdateEmailPhoneOperationCompleted Is Nothing) Then
                Me.WebAppUserUpdateEmailPhoneOperationCompleted = AddressOf Me.OnWebAppUserUpdateEmailPhoneOperationCompleted
            End If
            Me.InvokeAsync("WebAppUserUpdateEmailPhone", New Object() {AppName, AppVersion, Param}, Me.WebAppUserUpdateEmailPhoneOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppUserUpdateEmailPhoneOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppUserUpdateEmailPhoneCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppUserUpdateEmailPhoneCompleted(Me, New WebAppUserUpdateEmailPhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppUserUpdateSendKey", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebAppUserUpdateSendKey()
            Me.Invoke("WebAppUserUpdateSendKey", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserUpdateSendKeyAsync()
            Me.WebAppUserUpdateSendKeyAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserUpdateSendKeyAsync(ByVal userState As Object)
            If (Me.WebAppUserUpdateSendKeyOperationCompleted Is Nothing) Then
                Me.WebAppUserUpdateSendKeyOperationCompleted = AddressOf Me.OnWebAppUserUpdateSendKeyOperationCompleted
            End If
            Me.InvokeAsync("WebAppUserUpdateSendKey", New Object(-1) {}, Me.WebAppUserUpdateSendKeyOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppUserUpdateSendKeyOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppUserUpdateSendKeyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppUserUpdateSendKeyCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppUserUpdateDirectSendKey", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebAppUserUpdateDirectSendKey()
            Me.Invoke("WebAppUserUpdateDirectSendKey", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserUpdateDirectSendKeyAsync()
            Me.WebAppUserUpdateDirectSendKeyAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserUpdateDirectSendKeyAsync(ByVal userState As Object)
            If (Me.WebAppUserUpdateDirectSendKeyOperationCompleted Is Nothing) Then
                Me.WebAppUserUpdateDirectSendKeyOperationCompleted = AddressOf Me.OnWebAppUserUpdateDirectSendKeyOperationCompleted
            End If
            Me.InvokeAsync("WebAppUserUpdateDirectSendKey", New Object(-1) {}, Me.WebAppUserUpdateDirectSendKeyOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppUserUpdateDirectSendKeyOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppUserUpdateDirectSendKeyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppUserUpdateDirectSendKeyCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppUserUpdateResendKey", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppUserUpdateResendKey(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppUserUpdateResendKey", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppUserUpdateResendKeyAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppUserUpdateResendKeyAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserUpdateResendKeyAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppUserUpdateResendKeyOperationCompleted Is Nothing) Then
                Me.WebAppUserUpdateResendKeyOperationCompleted = AddressOf Me.OnWebAppUserUpdateResendKeyOperationCompleted
            End If
            Me.InvokeAsync("WebAppUserUpdateResendKey", New Object() {AppName, AppVersion, Param}, Me.WebAppUserUpdateResendKeyOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppUserUpdateResendKeyOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppUserUpdateResendKeyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppUserUpdateResendKeyCompleted(Me, New WebAppUserUpdateResendKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppUserDeleteEmailOrPhoneSendKey", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebAppUserDeleteEmailOrPhoneSendKey()
            Me.Invoke("WebAppUserDeleteEmailOrPhoneSendKey", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserDeleteEmailOrPhoneSendKeyAsync()
            Me.WebAppUserDeleteEmailOrPhoneSendKeyAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserDeleteEmailOrPhoneSendKeyAsync(ByVal userState As Object)
            If (Me.WebAppUserDeleteEmailOrPhoneSendKeyOperationCompleted Is Nothing) Then
                Me.WebAppUserDeleteEmailOrPhoneSendKeyOperationCompleted = AddressOf Me.OnWebAppUserDeleteEmailOrPhoneSendKeyOperationCompleted
            End If
            Me.InvokeAsync("WebAppUserDeleteEmailOrPhoneSendKey", New Object(-1) {}, Me.WebAppUserDeleteEmailOrPhoneSendKeyOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppUserDeleteEmailOrPhoneSendKeyOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppUserDeleteEmailOrPhoneSendKeyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppUserDeleteEmailOrPhoneSendKeyCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppUserDeleteEmailOrPhoneDirectSendKey", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebAppUserDeleteEmailOrPhoneDirectSendKey()
            Me.Invoke("WebAppUserDeleteEmailOrPhoneDirectSendKey", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserDeleteEmailOrPhoneDirectSendKeyAsync()
            Me.WebAppUserDeleteEmailOrPhoneDirectSendKeyAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserDeleteEmailOrPhoneDirectSendKeyAsync(ByVal userState As Object)
            If (Me.WebAppUserDeleteEmailOrPhoneDirectSendKeyOperationCompleted Is Nothing) Then
                Me.WebAppUserDeleteEmailOrPhoneDirectSendKeyOperationCompleted = AddressOf Me.OnWebAppUserDeleteEmailOrPhoneDirectSendKeyOperationCompleted
            End If
            Me.InvokeAsync("WebAppUserDeleteEmailOrPhoneDirectSendKey", New Object(-1) {}, Me.WebAppUserDeleteEmailOrPhoneDirectSendKeyOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppUserDeleteEmailOrPhoneDirectSendKeyOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppUserDeleteEmailOrPhoneDirectSendKeyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppUserDeleteEmailOrPhoneDirectSendKeyCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppUserDeleteEmailOrPhoneResendKey", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppUserDeleteEmailOrPhoneResendKey(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppUserDeleteEmailOrPhoneResendKey", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppUserDeleteEmailOrPhoneResendKeyAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppUserDeleteEmailOrPhoneResendKeyAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserDeleteEmailOrPhoneResendKeyAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppUserDeleteEmailOrPhoneResendKeyOperationCompleted Is Nothing) Then
                Me.WebAppUserDeleteEmailOrPhoneResendKeyOperationCompleted = AddressOf Me.OnWebAppUserDeleteEmailOrPhoneResendKeyOperationCompleted
            End If
            Me.InvokeAsync("WebAppUserDeleteEmailOrPhoneResendKey", New Object() {AppName, AppVersion, Param}, Me.WebAppUserDeleteEmailOrPhoneResendKeyOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppUserDeleteEmailOrPhoneResendKeyOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppUserDeleteEmailOrPhoneResendKeyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppUserDeleteEmailOrPhoneResendKeyCompleted(Me, New WebAppUserDeleteEmailOrPhoneResendKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppUserGetInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppUserGetInfo(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppUserGetInfo", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppUserGetInfoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppUserGetInfoAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserGetInfoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppUserGetInfoOperationCompleted Is Nothing) Then
                Me.WebAppUserGetInfoOperationCompleted = AddressOf Me.OnWebAppUserGetInfoOperationCompleted
            End If
            Me.InvokeAsync("WebAppUserGetInfo", New Object() {AppName, AppVersion, Param}, Me.WebAppUserGetInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppUserGetInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppUserGetInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppUserGetInfoCompleted(Me, New WebAppUserGetInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppDoorPickupSubDistrictAndPostalCodeList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppDoorPickupSubDistrictAndPostalCodeList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppDoorPickupSubDistrictAndPostalCodeList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppDoorPickupSubDistrictAndPostalCodeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppDoorPickupSubDistrictAndPostalCodeListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppDoorPickupSubDistrictAndPostalCodeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppDoorPickupSubDistrictAndPostalCodeListOperationCompleted Is Nothing) Then
                Me.WebAppDoorPickupSubDistrictAndPostalCodeListOperationCompleted = AddressOf Me.OnWebAppDoorPickupSubDistrictAndPostalCodeListOperationCompleted
            End If
            Me.InvokeAsync("WebAppDoorPickupSubDistrictAndPostalCodeList", New Object() {AppName, AppVersion, Param}, Me.WebAppDoorPickupSubDistrictAndPostalCodeListOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppDoorPickupSubDistrictAndPostalCodeListOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppDoorPickupSubDistrictAndPostalCodeListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppDoorPickupSubDistrictAndPostalCodeListCompleted(Me, New WebAppDoorPickupSubDistrictAndPostalCodeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppDoorPickupDistrictList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppDoorPickupDistrictList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppDoorPickupDistrictList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppDoorPickupDistrictListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppDoorPickupDistrictListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppDoorPickupDistrictListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppDoorPickupDistrictListOperationCompleted Is Nothing) Then
                Me.WebAppDoorPickupDistrictListOperationCompleted = AddressOf Me.OnWebAppDoorPickupDistrictListOperationCompleted
            End If
            Me.InvokeAsync("WebAppDoorPickupDistrictList", New Object() {AppName, AppVersion, Param}, Me.WebAppDoorPickupDistrictListOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppDoorPickupDistrictListOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppDoorPickupDistrictListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppDoorPickupDistrictListCompleted(Me, New WebAppDoorPickupDistrictListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppDoorPickupSubDistrictList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppDoorPickupSubDistrictList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppDoorPickupSubDistrictList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppDoorPickupSubDistrictListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppDoorPickupSubDistrictListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppDoorPickupSubDistrictListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppDoorPickupSubDistrictListOperationCompleted Is Nothing) Then
                Me.WebAppDoorPickupSubDistrictListOperationCompleted = AddressOf Me.OnWebAppDoorPickupSubDistrictListOperationCompleted
            End If
            Me.InvokeAsync("WebAppDoorPickupSubDistrictList", New Object() {AppName, AppVersion, Param}, Me.WebAppDoorPickupSubDistrictListOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppDoorPickupSubDistrictListOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppDoorPickupSubDistrictListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppDoorPickupSubDistrictListCompleted(Me, New WebAppDoorPickupSubDistrictListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppDoorPickupPostalCodeList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppDoorPickupPostalCodeList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppDoorPickupPostalCodeList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppDoorPickupPostalCodeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppDoorPickupPostalCodeListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppDoorPickupPostalCodeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppDoorPickupPostalCodeListOperationCompleted Is Nothing) Then
                Me.WebAppDoorPickupPostalCodeListOperationCompleted = AddressOf Me.OnWebAppDoorPickupPostalCodeListOperationCompleted
            End If
            Me.InvokeAsync("WebAppDoorPickupPostalCodeList", New Object() {AppName, AppVersion, Param}, Me.WebAppDoorPickupPostalCodeListOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppDoorPickupPostalCodeListOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppDoorPickupPostalCodeListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppDoorPickupPostalCodeListCompleted(Me, New WebAppDoorPickupPostalCodeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppCheckRateGetDistrict", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppCheckRateGetDistrict(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppCheckRateGetDistrict", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppCheckRateGetDistrictAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppCheckRateGetDistrictAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppCheckRateGetDistrictAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppCheckRateGetDistrictOperationCompleted Is Nothing) Then
                Me.WebAppCheckRateGetDistrictOperationCompleted = AddressOf Me.OnWebAppCheckRateGetDistrictOperationCompleted
            End If
            Me.InvokeAsync("WebAppCheckRateGetDistrict", New Object() {AppName, AppVersion, Param}, Me.WebAppCheckRateGetDistrictOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppCheckRateGetDistrictOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppCheckRateGetDistrictCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppCheckRateGetDistrictCompleted(Me, New WebAppCheckRateGetDistrictCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppCheckRateGetServiceList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppCheckRateGetServiceList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppCheckRateGetServiceList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppCheckRateGetServiceListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppCheckRateGetServiceListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppCheckRateGetServiceListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppCheckRateGetServiceListOperationCompleted Is Nothing) Then
                Me.WebAppCheckRateGetServiceListOperationCompleted = AddressOf Me.OnWebAppCheckRateGetServiceListOperationCompleted
            End If
            Me.InvokeAsync("WebAppCheckRateGetServiceList", New Object() {AppName, AppVersion, Param}, Me.WebAppCheckRateGetServiceListOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppCheckRateGetServiceListOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppCheckRateGetServiceListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppCheckRateGetServiceListCompleted(Me, New WebAppCheckRateGetServiceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppCheckAddInsurance", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppCheckAddInsurance(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppCheckAddInsurance", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppCheckAddInsuranceAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppCheckAddInsuranceAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppCheckAddInsuranceAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppCheckAddInsuranceOperationCompleted Is Nothing) Then
                Me.WebAppCheckAddInsuranceOperationCompleted = AddressOf Me.OnWebAppCheckAddInsuranceOperationCompleted
            End If
            Me.InvokeAsync("WebAppCheckAddInsurance", New Object() {AppName, AppVersion, Param}, Me.WebAppCheckAddInsuranceOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppCheckAddInsuranceOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppCheckAddInsuranceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppCheckAddInsuranceCompleted(Me, New WebAppCheckAddInsuranceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppCheckAddTaxOriFTZ", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppCheckAddTaxOriFTZ(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppCheckAddTaxOriFTZ", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppCheckAddTaxOriFTZAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppCheckAddTaxOriFTZAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppCheckAddTaxOriFTZAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppCheckAddTaxOriFTZOperationCompleted Is Nothing) Then
                Me.WebAppCheckAddTaxOriFTZOperationCompleted = AddressOf Me.OnWebAppCheckAddTaxOriFTZOperationCompleted
            End If
            Me.InvokeAsync("WebAppCheckAddTaxOriFTZ", New Object() {AppName, AppVersion, Param}, Me.WebAppCheckAddTaxOriFTZOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppCheckAddTaxOriFTZOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppCheckAddTaxOriFTZCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppCheckAddTaxOriFTZCompleted(Me, New WebAppCheckAddTaxOriFTZCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppCheckAddTaxOriFTZV2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppCheckAddTaxOriFTZV2(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppCheckAddTaxOriFTZV2", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppCheckAddTaxOriFTZV2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppCheckAddTaxOriFTZV2Async(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppCheckAddTaxOriFTZV2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppCheckAddTaxOriFTZV2OperationCompleted Is Nothing) Then
                Me.WebAppCheckAddTaxOriFTZV2OperationCompleted = AddressOf Me.OnWebAppCheckAddTaxOriFTZV2OperationCompleted
            End If
            Me.InvokeAsync("WebAppCheckAddTaxOriFTZV2", New Object() {AppName, AppVersion, Param}, Me.WebAppCheckAddTaxOriFTZV2OperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppCheckAddTaxOriFTZV2OperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppCheckAddTaxOriFTZV2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppCheckAddTaxOriFTZV2Completed(Me, New WebAppCheckAddTaxOriFTZV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppGetSuggestionStore", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppGetSuggestionStore(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppGetSuggestionStore", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppGetSuggestionStoreAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppGetSuggestionStoreAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppGetSuggestionStoreAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppGetSuggestionStoreOperationCompleted Is Nothing) Then
                Me.WebAppGetSuggestionStoreOperationCompleted = AddressOf Me.OnWebAppGetSuggestionStoreOperationCompleted
            End If
            Me.InvokeAsync("WebAppGetSuggestionStore", New Object() {AppName, AppVersion, Param}, Me.WebAppGetSuggestionStoreOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppGetSuggestionStoreOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppGetSuggestionStoreCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppGetSuggestionStoreCompleted(Me, New WebAppGetSuggestionStoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppTracking", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppTracking(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppTracking", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppTrackingAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppTrackingAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppTrackingAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppTrackingOperationCompleted Is Nothing) Then
                Me.WebAppTrackingOperationCompleted = AddressOf Me.OnWebAppTrackingOperationCompleted
            End If
            Me.InvokeAsync("WebAppTracking", New Object() {AppName, AppVersion, Param}, Me.WebAppTrackingOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppTrackingOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppTrackingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppTrackingCompleted(Me, New WebAppTrackingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppTrackingMultiAWB", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppTrackingMultiAWB(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppTrackingMultiAWB", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppTrackingMultiAWBAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppTrackingMultiAWBAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppTrackingMultiAWBAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppTrackingMultiAWBOperationCompleted Is Nothing) Then
                Me.WebAppTrackingMultiAWBOperationCompleted = AddressOf Me.OnWebAppTrackingMultiAWBOperationCompleted
            End If
            Me.InvokeAsync("WebAppTrackingMultiAWB", New Object() {AppName, AppVersion, Param}, Me.WebAppTrackingMultiAWBOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppTrackingMultiAWBOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppTrackingMultiAWBCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppTrackingMultiAWBCompleted(Me, New WebAppTrackingMultiAWBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppTransactionDraft", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppTransactionDraft(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppTransactionDraft", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppTransactionDraftAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppTransactionDraftAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppTransactionDraftAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppTransactionDraftOperationCompleted Is Nothing) Then
                Me.WebAppTransactionDraftOperationCompleted = AddressOf Me.OnWebAppTransactionDraftOperationCompleted
            End If
            Me.InvokeAsync("WebAppTransactionDraft", New Object() {AppName, AppVersion, Param}, Me.WebAppTransactionDraftOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppTransactionDraftOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppTransactionDraftCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppTransactionDraftCompleted(Me, New WebAppTransactionDraftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppTransaction", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppTransaction(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppTransaction", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppTransactionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppTransactionAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppTransactionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppTransactionOperationCompleted Is Nothing) Then
                Me.WebAppTransactionOperationCompleted = AddressOf Me.OnWebAppTransactionOperationCompleted
            End If
            Me.InvokeAsync("WebAppTransaction", New Object() {AppName, AppVersion, Param}, Me.WebAppTransactionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppTransactionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppTransactionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppTransactionCompleted(Me, New WebAppTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppTransactionHistory", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppTransactionHistory(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppTransactionHistory", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppTransactionHistoryAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppTransactionHistoryAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppTransactionHistoryAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppTransactionHistoryOperationCompleted Is Nothing) Then
                Me.WebAppTransactionHistoryOperationCompleted = AddressOf Me.OnWebAppTransactionHistoryOperationCompleted
            End If
            Me.InvokeAsync("WebAppTransactionHistory", New Object() {AppName, AppVersion, Param}, Me.WebAppTransactionHistoryOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppTransactionHistoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppTransactionHistoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppTransactionHistoryCompleted(Me, New WebAppTransactionHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppTransactionDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppTransactionDetail(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppTransactionDetail", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppTransactionDetailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppTransactionDetailAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppTransactionDetailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppTransactionDetailOperationCompleted Is Nothing) Then
                Me.WebAppTransactionDetailOperationCompleted = AddressOf Me.OnWebAppTransactionDetailOperationCompleted
            End If
            Me.InvokeAsync("WebAppTransactionDetail", New Object() {AppName, AppVersion, Param}, Me.WebAppTransactionDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppTransactionDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppTransactionDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppTransactionDetailCompleted(Me, New WebAppTransactionDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppUserSetProfilePicture", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppUserSetProfilePicture(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppUserSetProfilePicture", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppUserSetProfilePictureAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppUserSetProfilePictureAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserSetProfilePictureAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppUserSetProfilePictureOperationCompleted Is Nothing) Then
                Me.WebAppUserSetProfilePictureOperationCompleted = AddressOf Me.OnWebAppUserSetProfilePictureOperationCompleted
            End If
            Me.InvokeAsync("WebAppUserSetProfilePicture", New Object() {AppName, AppVersion, Param}, Me.WebAppUserSetProfilePictureOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppUserSetProfilePictureOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppUserSetProfilePictureCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppUserSetProfilePictureCompleted(Me, New WebAppUserSetProfilePictureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestWriteFile", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub TestWriteFile()
            Me.Invoke("TestWriteFile", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TestWriteFileAsync()
            Me.TestWriteFileAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TestWriteFileAsync(ByVal userState As Object)
            If (Me.TestWriteFileOperationCompleted Is Nothing) Then
                Me.TestWriteFileOperationCompleted = AddressOf Me.OnTestWriteFileOperationCompleted
            End If
            Me.InvokeAsync("TestWriteFile", New Object(-1) {}, Me.TestWriteFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnTestWriteFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.TestWriteFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TestWriteFileCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TestReadFile", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub TestReadFile()
            Me.Invoke("TestReadFile", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TestReadFileAsync()
            Me.TestReadFileAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TestReadFileAsync(ByVal userState As Object)
            If (Me.TestReadFileOperationCompleted Is Nothing) Then
                Me.TestReadFileOperationCompleted = AddressOf Me.OnTestReadFileOperationCompleted
            End If
            Me.InvokeAsync("TestReadFile", New Object(-1) {}, Me.TestReadFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnTestReadFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.TestReadFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TestReadFileCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppUserGetLabel", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppUserGetLabel(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppUserGetLabel", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppUserGetLabelAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppUserGetLabelAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserGetLabelAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppUserGetLabelOperationCompleted Is Nothing) Then
                Me.WebAppUserGetLabelOperationCompleted = AddressOf Me.OnWebAppUserGetLabelOperationCompleted
            End If
            Me.InvokeAsync("WebAppUserGetLabel", New Object() {AppName, AppVersion, Param}, Me.WebAppUserGetLabelOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppUserGetLabelOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppUserGetLabelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppUserGetLabelCompleted(Me, New WebAppUserGetLabelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppGetOfflineOTP", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppGetOfflineOTP(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppGetOfflineOTP", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppGetOfflineOTPAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppGetOfflineOTPAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppGetOfflineOTPAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppGetOfflineOTPOperationCompleted Is Nothing) Then
                Me.WebAppGetOfflineOTPOperationCompleted = AddressOf Me.OnWebAppGetOfflineOTPOperationCompleted
            End If
            Me.InvokeAsync("WebAppGetOfflineOTP", New Object() {AppName, AppVersion, Param}, Me.WebAppGetOfflineOTPOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppGetOfflineOTPOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppGetOfflineOTPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppGetOfflineOTPCompleted(Me, New WebAppGetOfflineOTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppGetServiceDescription", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppGetServiceDescription(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppGetServiceDescription", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppGetServiceDescriptionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppGetServiceDescriptionAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppGetServiceDescriptionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppGetServiceDescriptionOperationCompleted Is Nothing) Then
                Me.WebAppGetServiceDescriptionOperationCompleted = AddressOf Me.OnWebAppGetServiceDescriptionOperationCompleted
            End If
            Me.InvokeAsync("WebAppGetServiceDescription", New Object() {AppName, AppVersion, Param}, Me.WebAppGetServiceDescriptionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppGetServiceDescriptionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppGetServiceDescriptionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppGetServiceDescriptionCompleted(Me, New WebAppGetServiceDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppUserActivationEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebAppUserActivationEmail()
            Me.Invoke("WebAppUserActivationEmail", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserActivationEmailAsync()
            Me.WebAppUserActivationEmailAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserActivationEmailAsync(ByVal userState As Object)
            If (Me.WebAppUserActivationEmailOperationCompleted Is Nothing) Then
                Me.WebAppUserActivationEmailOperationCompleted = AddressOf Me.OnWebAppUserActivationEmailOperationCompleted
            End If
            Me.InvokeAsync("WebAppUserActivationEmail", New Object(-1) {}, Me.WebAppUserActivationEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppUserActivationEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppUserActivationEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppUserActivationEmailCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppUserActivationSMS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebAppUserActivationSMS()
            Me.Invoke("WebAppUserActivationSMS", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserActivationSMSAsync()
            Me.WebAppUserActivationSMSAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserActivationSMSAsync(ByVal userState As Object)
            If (Me.WebAppUserActivationSMSOperationCompleted Is Nothing) Then
                Me.WebAppUserActivationSMSOperationCompleted = AddressOf Me.OnWebAppUserActivationSMSOperationCompleted
            End If
            Me.InvokeAsync("WebAppUserActivationSMS", New Object(-1) {}, Me.WebAppUserActivationSMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppUserActivationSMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppUserActivationSMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppUserActivationSMSCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppUserActivationDirectSendEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebAppUserActivationDirectSendEmail()
            Me.Invoke("WebAppUserActivationDirectSendEmail", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserActivationDirectSendEmailAsync()
            Me.WebAppUserActivationDirectSendEmailAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserActivationDirectSendEmailAsync(ByVal userState As Object)
            If (Me.WebAppUserActivationDirectSendEmailOperationCompleted Is Nothing) Then
                Me.WebAppUserActivationDirectSendEmailOperationCompleted = AddressOf Me.OnWebAppUserActivationDirectSendEmailOperationCompleted
            End If
            Me.InvokeAsync("WebAppUserActivationDirectSendEmail", New Object(-1) {}, Me.WebAppUserActivationDirectSendEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppUserActivationDirectSendEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppUserActivationDirectSendEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppUserActivationDirectSendEmailCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppUserActivationDirectSendSMS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebAppUserActivationDirectSendSMS()
            Me.Invoke("WebAppUserActivationDirectSendSMS", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserActivationDirectSendSMSAsync()
            Me.WebAppUserActivationDirectSendSMSAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserActivationDirectSendSMSAsync(ByVal userState As Object)
            If (Me.WebAppUserActivationDirectSendSMSOperationCompleted Is Nothing) Then
                Me.WebAppUserActivationDirectSendSMSOperationCompleted = AddressOf Me.OnWebAppUserActivationDirectSendSMSOperationCompleted
            End If
            Me.InvokeAsync("WebAppUserActivationDirectSendSMS", New Object(-1) {}, Me.WebAppUserActivationDirectSendSMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppUserActivationDirectSendSMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppUserActivationDirectSendSMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppUserActivationDirectSendSMSCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppUserActivation", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppUserActivation(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppUserActivation", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppUserActivationAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppUserActivationAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserActivationAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppUserActivationOperationCompleted Is Nothing) Then
                Me.WebAppUserActivationOperationCompleted = AddressOf Me.OnWebAppUserActivationOperationCompleted
            End If
            Me.InvokeAsync("WebAppUserActivation", New Object() {AppName, AppVersion, Param}, Me.WebAppUserActivationOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppUserActivationOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppUserActivationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppUserActivationCompleted(Me, New WebAppUserActivationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppUserActivationResendKey", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppUserActivationResendKey(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppUserActivationResendKey", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppUserActivationResendKeyAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppUserActivationResendKeyAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUserActivationResendKeyAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppUserActivationResendKeyOperationCompleted Is Nothing) Then
                Me.WebAppUserActivationResendKeyOperationCompleted = AddressOf Me.OnWebAppUserActivationResendKeyOperationCompleted
            End If
            Me.InvokeAsync("WebAppUserActivationResendKey", New Object() {AppName, AppVersion, Param}, Me.WebAppUserActivationResendKeyOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppUserActivationResendKeyOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppUserActivationResendKeyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppUserActivationResendKeyCompleted(Me, New WebAppUserActivationResendKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppGetSuggestionConsignee", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppGetSuggestionConsignee(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppGetSuggestionConsignee", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppGetSuggestionConsigneeAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppGetSuggestionConsigneeAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppGetSuggestionConsigneeAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppGetSuggestionConsigneeOperationCompleted Is Nothing) Then
                Me.WebAppGetSuggestionConsigneeOperationCompleted = AddressOf Me.OnWebAppGetSuggestionConsigneeOperationCompleted
            End If
            Me.InvokeAsync("WebAppGetSuggestionConsignee", New Object() {AppName, AppVersion, Param}, Me.WebAppGetSuggestionConsigneeOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppGetSuggestionConsigneeOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppGetSuggestionConsigneeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppGetSuggestionConsigneeCompleted(Me, New WebAppGetSuggestionConsigneeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppGetSuggestionShipper", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppGetSuggestionShipper(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppGetSuggestionShipper", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppGetSuggestionShipperAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppGetSuggestionShipperAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppGetSuggestionShipperAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppGetSuggestionShipperOperationCompleted Is Nothing) Then
                Me.WebAppGetSuggestionShipperOperationCompleted = AddressOf Me.OnWebAppGetSuggestionShipperOperationCompleted
            End If
            Me.InvokeAsync("WebAppGetSuggestionShipper", New Object() {AppName, AppVersion, Param}, Me.WebAppGetSuggestionShipperOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppGetSuggestionShipperOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppGetSuggestionShipperCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppGetSuggestionShipperCompleted(Me, New WebAppGetSuggestionShipperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppExtendSTIPeriodGetCost", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppExtendSTIPeriodGetCost(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppExtendSTIPeriodGetCost", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppExtendSTIPeriodGetCostAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppExtendSTIPeriodGetCostAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppExtendSTIPeriodGetCostAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppExtendSTIPeriodGetCostOperationCompleted Is Nothing) Then
                Me.WebAppExtendSTIPeriodGetCostOperationCompleted = AddressOf Me.OnWebAppExtendSTIPeriodGetCostOperationCompleted
            End If
            Me.InvokeAsync("WebAppExtendSTIPeriodGetCost", New Object() {AppName, AppVersion, Param}, Me.WebAppExtendSTIPeriodGetCostOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppExtendSTIPeriodGetCostOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppExtendSTIPeriodGetCostCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppExtendSTIPeriodGetCostCompleted(Me, New WebAppExtendSTIPeriodGetCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppExtendSTIPeriodValidation", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppExtendSTIPeriodValidation(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppExtendSTIPeriodValidation", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppExtendSTIPeriodValidationAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppExtendSTIPeriodValidationAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppExtendSTIPeriodValidationAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppExtendSTIPeriodValidationOperationCompleted Is Nothing) Then
                Me.WebAppExtendSTIPeriodValidationOperationCompleted = AddressOf Me.OnWebAppExtendSTIPeriodValidationOperationCompleted
            End If
            Me.InvokeAsync("WebAppExtendSTIPeriodValidation", New Object() {AppName, AppVersion, Param}, Me.WebAppExtendSTIPeriodValidationOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppExtendSTIPeriodValidationOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppExtendSTIPeriodValidationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppExtendSTIPeriodValidationCompleted(Me, New WebAppExtendSTIPeriodValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppExtendSTIPeriodProcess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppExtendSTIPeriodProcess(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppExtendSTIPeriodProcess", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppExtendSTIPeriodProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppExtendSTIPeriodProcessAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppExtendSTIPeriodProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppExtendSTIPeriodProcessOperationCompleted Is Nothing) Then
                Me.WebAppExtendSTIPeriodProcessOperationCompleted = AddressOf Me.OnWebAppExtendSTIPeriodProcessOperationCompleted
            End If
            Me.InvokeAsync("WebAppExtendSTIPeriodProcess", New Object() {AppName, AppVersion, Param}, Me.WebAppExtendSTIPeriodProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppExtendSTIPeriodProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppExtendSTIPeriodProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppExtendSTIPeriodProcessCompleted(Me, New WebAppExtendSTIPeriodProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppConst", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppConst(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppConst", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppConstAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppConstAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppConstAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppConstOperationCompleted Is Nothing) Then
                Me.WebAppConstOperationCompleted = AddressOf Me.OnWebAppConstOperationCompleted
            End If
            Me.InvokeAsync("WebAppConst", New Object() {AppName, AppVersion, Param}, Me.WebAppConstOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppConstOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppConstCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppConstCompleted(Me, New WebAppConstCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppDailyPostalCodeList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppDailyPostalCodeList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppDailyPostalCodeList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppDailyPostalCodeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppDailyPostalCodeListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppDailyPostalCodeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppDailyPostalCodeListOperationCompleted Is Nothing) Then
                Me.WebAppDailyPostalCodeListOperationCompleted = AddressOf Me.OnWebAppDailyPostalCodeListOperationCompleted
            End If
            Me.InvokeAsync("WebAppDailyPostalCodeList", New Object() {AppName, AppVersion, Param}, Me.WebAppDailyPostalCodeListOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppDailyPostalCodeListOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppDailyPostalCodeListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppDailyPostalCodeListCompleted(Me, New WebAppDailyPostalCodeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppDigAccIdNonActive", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppDigAccIdNonActive(ByVal AppName As String, ByVal AppVersion As String) As Object()
            Dim results() As Object = Me.Invoke("WebAppDigAccIdNonActive", New Object() {AppName, AppVersion})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppDigAccIdNonActiveAsync(ByVal AppName As String, ByVal AppVersion As String)
            Me.WebAppDigAccIdNonActiveAsync(AppName, AppVersion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppDigAccIdNonActiveAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal userState As Object)
            If (Me.WebAppDigAccIdNonActiveOperationCompleted Is Nothing) Then
                Me.WebAppDigAccIdNonActiveOperationCompleted = AddressOf Me.OnWebAppDigAccIdNonActiveOperationCompleted
            End If
            Me.InvokeAsync("WebAppDigAccIdNonActive", New Object() {AppName, AppVersion}, Me.WebAppDigAccIdNonActiveOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppDigAccIdNonActiveOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppDigAccIdNonActiveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppDigAccIdNonActiveCompleted(Me, New WebAppDigAccIdNonActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppSetUserActive", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppSetUserActive(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppSetUserActive", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppSetUserActiveAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppSetUserActiveAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppSetUserActiveAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppSetUserActiveOperationCompleted Is Nothing) Then
                Me.WebAppSetUserActiveOperationCompleted = AddressOf Me.OnWebAppSetUserActiveOperationCompleted
            End If
            Me.InvokeAsync("WebAppSetUserActive", New Object() {AppName, AppVersion, Param}, Me.WebAppSetUserActiveOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppSetUserActiveOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppSetUserActiveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppSetUserActiveCompleted(Me, New WebAppSetUserActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppPushStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppPushStatus(ByVal AppName As String, ByVal AppVersion As String) As Object()
            Dim results() As Object = Me.Invoke("WebAppPushStatus", New Object() {AppName, AppVersion})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppPushStatusAsync(ByVal AppName As String, ByVal AppVersion As String)
            Me.WebAppPushStatusAsync(AppName, AppVersion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppPushStatusAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal userState As Object)
            If (Me.WebAppPushStatusOperationCompleted Is Nothing) Then
                Me.WebAppPushStatusOperationCompleted = AddressOf Me.OnWebAppPushStatusOperationCompleted
            End If
            Me.InvokeAsync("WebAppPushStatus", New Object() {AppName, AppVersion}, Me.WebAppPushStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppPushStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppPushStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppPushStatusCompleted(Me, New WebAppPushStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppDoorPickupReminder", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppDoorPickupReminder(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppDoorPickupReminder", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppDoorPickupReminderAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppDoorPickupReminderAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppDoorPickupReminderAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppDoorPickupReminderOperationCompleted Is Nothing) Then
                Me.WebAppDoorPickupReminderOperationCompleted = AddressOf Me.OnWebAppDoorPickupReminderOperationCompleted
            End If
            Me.InvokeAsync("WebAppDoorPickupReminder", New Object() {AppName, AppVersion, Param}, Me.WebAppDoorPickupReminderOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppDoorPickupReminderOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppDoorPickupReminderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppDoorPickupReminderCompleted(Me, New WebAppDoorPickupReminderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppPrintLabel", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppPrintLabel(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppPrintLabel", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppPrintLabelAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppPrintLabelAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppPrintLabelAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppPrintLabelOperationCompleted Is Nothing) Then
                Me.WebAppPrintLabelOperationCompleted = AddressOf Me.OnWebAppPrintLabelOperationCompleted
            End If
            Me.InvokeAsync("WebAppPrintLabel", New Object() {AppName, AppVersion, Param}, Me.WebAppPrintLabelOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppPrintLabelOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppPrintLabelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppPrintLabelCompleted(Me, New WebAppPrintLabelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppGetUserStatistic", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppGetUserStatistic(ByVal AppName As String, ByVal AppVersion As String) As Object()
            Dim results() As Object = Me.Invoke("WebAppGetUserStatistic", New Object() {AppName, AppVersion})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppGetUserStatisticAsync(ByVal AppName As String, ByVal AppVersion As String)
            Me.WebAppGetUserStatisticAsync(AppName, AppVersion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppGetUserStatisticAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal userState As Object)
            If (Me.WebAppGetUserStatisticOperationCompleted Is Nothing) Then
                Me.WebAppGetUserStatisticOperationCompleted = AddressOf Me.OnWebAppGetUserStatisticOperationCompleted
            End If
            Me.InvokeAsync("WebAppGetUserStatistic", New Object() {AppName, AppVersion}, Me.WebAppGetUserStatisticOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppGetUserStatisticOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppGetUserStatisticCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppGetUserStatisticCompleted(Me, New WebAppGetUserStatisticCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppUnsubscribeEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppUnsubscribeEmail(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppUnsubscribeEmail", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppUnsubscribeEmailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppUnsubscribeEmailAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppUnsubscribeEmailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppUnsubscribeEmailOperationCompleted Is Nothing) Then
                Me.WebAppUnsubscribeEmailOperationCompleted = AddressOf Me.OnWebAppUnsubscribeEmailOperationCompleted
            End If
            Me.InvokeAsync("WebAppUnsubscribeEmail", New Object() {AppName, AppVersion, Param}, Me.WebAppUnsubscribeEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppUnsubscribeEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppUnsubscribeEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppUnsubscribeEmailCompleted(Me, New WebAppUnsubscribeEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebAppSubscribeEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebAppSubscribeEmail(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebAppSubscribeEmail", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebAppSubscribeEmailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebAppSubscribeEmailAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebAppSubscribeEmailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebAppSubscribeEmailOperationCompleted Is Nothing) Then
                Me.WebAppSubscribeEmailOperationCompleted = AddressOf Me.OnWebAppSubscribeEmailOperationCompleted
            End If
            Me.InvokeAsync("WebAppSubscribeEmail", New Object() {AppName, AppVersion, Param}, Me.WebAppSubscribeEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebAppSubscribeEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebAppSubscribeEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebAppSubscribeEmailCompleted(Me, New WebAppSubscribeEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CrmTrackingHistory", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CrmTrackingHistory(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("CrmTrackingHistory", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CrmTrackingHistoryAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.CrmTrackingHistoryAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CrmTrackingHistoryAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.CrmTrackingHistoryOperationCompleted Is Nothing) Then
                Me.CrmTrackingHistoryOperationCompleted = AddressOf Me.OnCrmTrackingHistoryOperationCompleted
            End If
            Me.InvokeAsync("CrmTrackingHistory", New Object() {AppName, AppVersion, Param}, Me.CrmTrackingHistoryOperationCompleted, userState)
        End Sub
        
        Private Sub OnCrmTrackingHistoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.CrmTrackingHistoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CrmTrackingHistoryCompleted(Me, New CrmTrackingHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SellerIdamanRegistration", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SellerIdamanRegistration(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("SellerIdamanRegistration", New Object() {AppName, AppVersion, Param, dsData})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SellerIdamanRegistrationAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.SellerIdamanRegistrationAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SellerIdamanRegistrationAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.SellerIdamanRegistrationOperationCompleted Is Nothing) Then
                Me.SellerIdamanRegistrationOperationCompleted = AddressOf Me.OnSellerIdamanRegistrationOperationCompleted
            End If
            Me.InvokeAsync("SellerIdamanRegistration", New Object() {AppName, AppVersion, Param, dsData}, Me.SellerIdamanRegistrationOperationCompleted, userState)
        End Sub
        
        Private Sub OnSellerIdamanRegistrationOperationCompleted(ByVal arg As Object)
            If (Not (Me.SellerIdamanRegistrationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SellerIdamanRegistrationCompleted(Me, New SellerIdamanRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SellerIdamanRegistrationValidateKeyColumns", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SellerIdamanRegistrationValidateKeyColumns(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("SellerIdamanRegistrationValidateKeyColumns", New Object() {AppName, AppVersion, Param, dsData})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SellerIdamanRegistrationValidateKeyColumnsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.SellerIdamanRegistrationValidateKeyColumnsAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SellerIdamanRegistrationValidateKeyColumnsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.SellerIdamanRegistrationValidateKeyColumnsOperationCompleted Is Nothing) Then
                Me.SellerIdamanRegistrationValidateKeyColumnsOperationCompleted = AddressOf Me.OnSellerIdamanRegistrationValidateKeyColumnsOperationCompleted
            End If
            Me.InvokeAsync("SellerIdamanRegistrationValidateKeyColumns", New Object() {AppName, AppVersion, Param, dsData}, Me.SellerIdamanRegistrationValidateKeyColumnsOperationCompleted, userState)
        End Sub
        
        Private Sub OnSellerIdamanRegistrationValidateKeyColumnsOperationCompleted(ByVal arg As Object)
            If (Not (Me.SellerIdamanRegistrationValidateKeyColumnsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SellerIdamanRegistrationValidateKeyColumnsCompleted(Me, New SellerIdamanRegistrationValidateKeyColumnsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SellerIdaman_FinishedAccountNotification", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SellerIdaman_FinishedAccountNotification(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SellerIdaman_FinishedAccountNotification", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SellerIdaman_FinishedAccountNotificationAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SellerIdaman_FinishedAccountNotificationAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SellerIdaman_FinishedAccountNotificationAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SellerIdaman_FinishedAccountNotificationOperationCompleted Is Nothing) Then
                Me.SellerIdaman_FinishedAccountNotificationOperationCompleted = AddressOf Me.OnSellerIdaman_FinishedAccountNotificationOperationCompleted
            End If
            Me.InvokeAsync("SellerIdaman_FinishedAccountNotification", New Object() {AppName, AppVersion, Param}, Me.SellerIdaman_FinishedAccountNotificationOperationCompleted, userState)
        End Sub
        
        Private Sub OnSellerIdaman_FinishedAccountNotificationOperationCompleted(ByVal arg As Object)
            If (Not (Me.SellerIdaman_FinishedAccountNotificationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SellerIdaman_FinishedAccountNotificationCompleted(Me, New SellerIdaman_FinishedAccountNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SellerIdamanGetInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SellerIdamanGetInfo(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SellerIdamanGetInfo", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SellerIdamanGetInfoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SellerIdamanGetInfoAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SellerIdamanGetInfoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SellerIdamanGetInfoOperationCompleted Is Nothing) Then
                Me.SellerIdamanGetInfoOperationCompleted = AddressOf Me.OnSellerIdamanGetInfoOperationCompleted
            End If
            Me.InvokeAsync("SellerIdamanGetInfo", New Object() {AppName, AppVersion, Param}, Me.SellerIdamanGetInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnSellerIdamanGetInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.SellerIdamanGetInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SellerIdamanGetInfoCompleted(Me, New SellerIdamanGetInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WHOMonitorDCR", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WHOMonitorDCR(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WHOMonitorDCR", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WHOMonitorDCRAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.WHOMonitorDCRAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WHOMonitorDCRAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WHOMonitorDCROperationCompleted Is Nothing) Then
                Me.WHOMonitorDCROperationCompleted = AddressOf Me.OnWHOMonitorDCROperationCompleted
            End If
            Me.InvokeAsync("WHOMonitorDCR", New Object() {AppName, AppVersion, Hub, Param}, Me.WHOMonitorDCROperationCompleted, userState)
        End Sub
        
        Private Sub OnWHOMonitorDCROperationCompleted(ByVal arg As Object)
            If (Not (Me.WHOMonitorDCRCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WHOMonitorDCRCompleted(Me, New WHOMonitorDCRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MonitorConsByDestination", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MonitorConsByDestination(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("MonitorConsByDestination", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub MonitorConsByDestinationAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.MonitorConsByDestinationAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MonitorConsByDestinationAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.MonitorConsByDestinationOperationCompleted Is Nothing) Then
                Me.MonitorConsByDestinationOperationCompleted = AddressOf Me.OnMonitorConsByDestinationOperationCompleted
            End If
            Me.InvokeAsync("MonitorConsByDestination", New Object() {AppName, AppVersion, Hub, Param}, Me.MonitorConsByDestinationOperationCompleted, userState)
        End Sub
        
        Private Sub OnMonitorConsByDestinationOperationCompleted(ByVal arg As Object)
            If (Not (Me.MonitorConsByDestinationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MonitorConsByDestinationCompleted(Me, New MonitorConsByDestinationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintTrackNumUpload", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PrintTrackNumUpload(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PrintTrackNumUpload", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PrintTrackNumUploadAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PrintTrackNumUploadAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PrintTrackNumUploadAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PrintTrackNumUploadOperationCompleted Is Nothing) Then
                Me.PrintTrackNumUploadOperationCompleted = AddressOf Me.OnPrintTrackNumUploadOperationCompleted
            End If
            Me.InvokeAsync("PrintTrackNumUpload", New Object() {AppName, AppVersion, Param}, Me.PrintTrackNumUploadOperationCompleted, userState)
        End Sub
        
        Private Sub OnPrintTrackNumUploadOperationCompleted(ByVal arg As Object)
            If (Not (Me.PrintTrackNumUploadCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PrintTrackNumUploadCompleted(Me, New PrintTrackNumUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TrackNumUploadList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TrackNumUploadList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("TrackNumUploadList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub TrackNumUploadListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.TrackNumUploadListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TrackNumUploadListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.TrackNumUploadListOperationCompleted Is Nothing) Then
                Me.TrackNumUploadListOperationCompleted = AddressOf Me.OnTrackNumUploadListOperationCompleted
            End If
            Me.InvokeAsync("TrackNumUploadList", New Object() {AppName, AppVersion, Param}, Me.TrackNumUploadListOperationCompleted, userState)
        End Sub
        
        Private Sub OnTrackNumUploadListOperationCompleted(ByVal arg As Object)
            If (Not (Me.TrackNumUploadListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TrackNumUploadListCompleted(Me, New TrackNumUploadListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TrackNumUploadQueueArvCon", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TrackNumUploadQueueArvCon(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("TrackNumUploadQueueArvCon", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub TrackNumUploadQueueArvConAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.TrackNumUploadQueueArvConAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TrackNumUploadQueueArvConAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.TrackNumUploadQueueArvConOperationCompleted Is Nothing) Then
                Me.TrackNumUploadQueueArvConOperationCompleted = AddressOf Me.OnTrackNumUploadQueueArvConOperationCompleted
            End If
            Me.InvokeAsync("TrackNumUploadQueueArvCon", New Object() {AppName, AppVersion, Param}, Me.TrackNumUploadQueueArvConOperationCompleted, userState)
        End Sub
        
        Private Sub OnTrackNumUploadQueueArvConOperationCompleted(ByVal arg As Object)
            If (Not (Me.TrackNumUploadQueueArvConCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TrackNumUploadQueueArvConCompleted(Me, New TrackNumUploadQueueArvConCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TrackNumUploadProcessArvCon", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TrackNumUploadProcessArvCon(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("TrackNumUploadProcessArvCon", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub TrackNumUploadProcessArvConAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.TrackNumUploadProcessArvConAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TrackNumUploadProcessArvConAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.TrackNumUploadProcessArvConOperationCompleted Is Nothing) Then
                Me.TrackNumUploadProcessArvConOperationCompleted = AddressOf Me.OnTrackNumUploadProcessArvConOperationCompleted
            End If
            Me.InvokeAsync("TrackNumUploadProcessArvCon", New Object() {AppName, AppVersion, Param}, Me.TrackNumUploadProcessArvConOperationCompleted, userState)
        End Sub
        
        Private Sub OnTrackNumUploadProcessArvConOperationCompleted(ByVal arg As Object)
            If (Not (Me.TrackNumUploadProcessArvConCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TrackNumUploadProcessArvConCompleted(Me, New TrackNumUploadProcessArvConCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TrackNumUploadEmailArvCon", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TrackNumUploadEmailArvCon(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("TrackNumUploadEmailArvCon", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub TrackNumUploadEmailArvConAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.TrackNumUploadEmailArvConAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TrackNumUploadEmailArvConAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.TrackNumUploadEmailArvConOperationCompleted Is Nothing) Then
                Me.TrackNumUploadEmailArvConOperationCompleted = AddressOf Me.OnTrackNumUploadEmailArvConOperationCompleted
            End If
            Me.InvokeAsync("TrackNumUploadEmailArvCon", New Object() {AppName, AppVersion, Param}, Me.TrackNumUploadEmailArvConOperationCompleted, userState)
        End Sub
        
        Private Sub OnTrackNumUploadEmailArvConOperationCompleted(ByVal arg As Object)
            If (Not (Me.TrackNumUploadEmailArvConCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TrackNumUploadEmailArvConCompleted(Me, New TrackNumUploadEmailArvConCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintLabelUpload", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PrintLabelUpload(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PrintLabelUpload", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PrintLabelUploadAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PrintLabelUploadAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PrintLabelUploadAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PrintLabelUploadOperationCompleted Is Nothing) Then
                Me.PrintLabelUploadOperationCompleted = AddressOf Me.OnPrintLabelUploadOperationCompleted
            End If
            Me.InvokeAsync("PrintLabelUpload", New Object() {AppName, AppVersion, Param}, Me.PrintLabelUploadOperationCompleted, userState)
        End Sub
        
        Private Sub OnPrintLabelUploadOperationCompleted(ByVal arg As Object)
            If (Not (Me.PrintLabelUploadCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PrintLabelUploadCompleted(Me, New PrintLabelUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintLabelUploadAtOri", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PrintLabelUploadAtOri(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PrintLabelUploadAtOri", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PrintLabelUploadAtOriAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PrintLabelUploadAtOriAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PrintLabelUploadAtOriAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PrintLabelUploadAtOriOperationCompleted Is Nothing) Then
                Me.PrintLabelUploadAtOriOperationCompleted = AddressOf Me.OnPrintLabelUploadAtOriOperationCompleted
            End If
            Me.InvokeAsync("PrintLabelUploadAtOri", New Object() {AppName, AppVersion, Param}, Me.PrintLabelUploadAtOriOperationCompleted, userState)
        End Sub
        
        Private Sub OnPrintLabelUploadAtOriOperationCompleted(ByVal arg As Object)
            If (Not (Me.PrintLabelUploadAtOriCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PrintLabelUploadAtOriCompleted(Me, New PrintLabelUploadAtOriCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HubAccountPickupListGet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HubAccountPickupListGet(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("HubAccountPickupListGet", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub HubAccountPickupListGetAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.HubAccountPickupListGetAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HubAccountPickupListGetAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.HubAccountPickupListGetOperationCompleted Is Nothing) Then
                Me.HubAccountPickupListGetOperationCompleted = AddressOf Me.OnHubAccountPickupListGetOperationCompleted
            End If
            Me.InvokeAsync("HubAccountPickupListGet", New Object() {AppName, AppVersion, Hub, Param}, Me.HubAccountPickupListGetOperationCompleted, userState)
        End Sub
        
        Private Sub OnHubAccountPickupListGetOperationCompleted(ByVal arg As Object)
            If (Not (Me.HubAccountPickupListGetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HubAccountPickupListGetCompleted(Me, New HubAccountPickupListGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HubAccountPickupListSet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HubAccountPickupListSet(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("HubAccountPickupListSet", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub HubAccountPickupListSetAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.HubAccountPickupListSetAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HubAccountPickupListSetAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.HubAccountPickupListSetOperationCompleted Is Nothing) Then
                Me.HubAccountPickupListSetOperationCompleted = AddressOf Me.OnHubAccountPickupListSetOperationCompleted
            End If
            Me.InvokeAsync("HubAccountPickupListSet", New Object() {AppName, AppVersion, Hub, Param}, Me.HubAccountPickupListSetOperationCompleted, userState)
        End Sub
        
        Private Sub OnHubAccountPickupListSetOperationCompleted(ByVal arg As Object)
            If (Not (Me.HubAccountPickupListSetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HubAccountPickupListSetCompleted(Me, New HubAccountPickupListSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DashboardHubAccountListGet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DashboardHubAccountListGet(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DashboardHubAccountListGet", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DashboardHubAccountListGetAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.DashboardHubAccountListGetAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DashboardHubAccountListGetAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DashboardHubAccountListGetOperationCompleted Is Nothing) Then
                Me.DashboardHubAccountListGetOperationCompleted = AddressOf Me.OnDashboardHubAccountListGetOperationCompleted
            End If
            Me.InvokeAsync("DashboardHubAccountListGet", New Object() {AppName, AppVersion, Hub, Param}, Me.DashboardHubAccountListGetOperationCompleted, userState)
        End Sub
        
        Private Sub OnDashboardHubAccountListGetOperationCompleted(ByVal arg As Object)
            If (Not (Me.DashboardHubAccountListGetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DashboardHubAccountListGetCompleted(Me, New DashboardHubAccountListGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DashboardHubAccountListSet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DashboardHubAccountListSet(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DashboardHubAccountListSet", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DashboardHubAccountListSetAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.DashboardHubAccountListSetAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DashboardHubAccountListSetAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DashboardHubAccountListSetOperationCompleted Is Nothing) Then
                Me.DashboardHubAccountListSetOperationCompleted = AddressOf Me.OnDashboardHubAccountListSetOperationCompleted
            End If
            Me.InvokeAsync("DashboardHubAccountListSet", New Object() {AppName, AppVersion, Hub, Param}, Me.DashboardHubAccountListSetOperationCompleted, userState)
        End Sub
        
        Private Sub OnDashboardHubAccountListSetOperationCompleted(ByVal arg As Object)
            If (Not (Me.DashboardHubAccountListSetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DashboardHubAccountListSetCompleted(Me, New DashboardHubAccountListSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHubAccountList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetHubAccountList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetHubAccountList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetHubAccountListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetHubAccountListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetHubAccountListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetHubAccountListOperationCompleted Is Nothing) Then
                Me.GetHubAccountListOperationCompleted = AddressOf Me.OnGetHubAccountListOperationCompleted
            End If
            Me.InvokeAsync("GetHubAccountList", New Object() {AppName, AppVersion, Param}, Me.GetHubAccountListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetHubAccountListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetHubAccountListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetHubAccountListCompleted(Me, New GetHubAccountListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuratTugasKurirIPPGetStore", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SuratTugasKurirIPPGetStore(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SuratTugasKurirIPPGetStore", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SuratTugasKurirIPPGetStoreAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SuratTugasKurirIPPGetStoreAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SuratTugasKurirIPPGetStoreAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SuratTugasKurirIPPGetStoreOperationCompleted Is Nothing) Then
                Me.SuratTugasKurirIPPGetStoreOperationCompleted = AddressOf Me.OnSuratTugasKurirIPPGetStoreOperationCompleted
            End If
            Me.InvokeAsync("SuratTugasKurirIPPGetStore", New Object() {AppName, AppVersion, Param}, Me.SuratTugasKurirIPPGetStoreOperationCompleted, userState)
        End Sub
        
        Private Sub OnSuratTugasKurirIPPGetStoreOperationCompleted(ByVal arg As Object)
            If (Not (Me.SuratTugasKurirIPPGetStoreCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SuratTugasKurirIPPGetStoreCompleted(Me, New SuratTugasKurirIPPGetStoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuratTugasKurirIPPGetAWBList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SuratTugasKurirIPPGetAWBList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SuratTugasKurirIPPGetAWBList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SuratTugasKurirIPPGetAWBListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SuratTugasKurirIPPGetAWBListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SuratTugasKurirIPPGetAWBListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SuratTugasKurirIPPGetAWBListOperationCompleted Is Nothing) Then
                Me.SuratTugasKurirIPPGetAWBListOperationCompleted = AddressOf Me.OnSuratTugasKurirIPPGetAWBListOperationCompleted
            End If
            Me.InvokeAsync("SuratTugasKurirIPPGetAWBList", New Object() {AppName, AppVersion, Param}, Me.SuratTugasKurirIPPGetAWBListOperationCompleted, userState)
        End Sub
        
        Private Sub OnSuratTugasKurirIPPGetAWBListOperationCompleted(ByVal arg As Object)
            If (Not (Me.SuratTugasKurirIPPGetAWBListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SuratTugasKurirIPPGetAWBListCompleted(Me, New SuratTugasKurirIPPGetAWBListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuratTugasKurirIPPProcess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SuratTugasKurirIPPProcess(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SuratTugasKurirIPPProcess", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SuratTugasKurirIPPProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SuratTugasKurirIPPProcessAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SuratTugasKurirIPPProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SuratTugasKurirIPPProcessOperationCompleted Is Nothing) Then
                Me.SuratTugasKurirIPPProcessOperationCompleted = AddressOf Me.OnSuratTugasKurirIPPProcessOperationCompleted
            End If
            Me.InvokeAsync("SuratTugasKurirIPPProcess", New Object() {AppName, AppVersion, Param}, Me.SuratTugasKurirIPPProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnSuratTugasKurirIPPProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.SuratTugasKurirIPPProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SuratTugasKurirIPPProcessCompleted(Me, New SuratTugasKurirIPPProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuratTugasKurirIPPValidateKey", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SuratTugasKurirIPPValidateKey(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SuratTugasKurirIPPValidateKey", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SuratTugasKurirIPPValidateKeyAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SuratTugasKurirIPPValidateKeyAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SuratTugasKurirIPPValidateKeyAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SuratTugasKurirIPPValidateKeyOperationCompleted Is Nothing) Then
                Me.SuratTugasKurirIPPValidateKeyOperationCompleted = AddressOf Me.OnSuratTugasKurirIPPValidateKeyOperationCompleted
            End If
            Me.InvokeAsync("SuratTugasKurirIPPValidateKey", New Object() {AppName, AppVersion, Param}, Me.SuratTugasKurirIPPValidateKeyOperationCompleted, userState)
        End Sub
        
        Private Sub OnSuratTugasKurirIPPValidateKeyOperationCompleted(ByVal arg As Object)
            If (Not (Me.SuratTugasKurirIPPValidateKeyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SuratTugasKurirIPPValidateKeyCompleted(Me, New SuratTugasKurirIPPValidateKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MissRouteGetCons", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MissRouteGetCons(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("MissRouteGetCons", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub MissRouteGetConsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.MissRouteGetConsAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MissRouteGetConsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.MissRouteGetConsOperationCompleted Is Nothing) Then
                Me.MissRouteGetConsOperationCompleted = AddressOf Me.OnMissRouteGetConsOperationCompleted
            End If
            Me.InvokeAsync("MissRouteGetCons", New Object() {AppName, AppVersion, Hub, Param}, Me.MissRouteGetConsOperationCompleted, userState)
        End Sub
        
        Private Sub OnMissRouteGetConsOperationCompleted(ByVal arg As Object)
            If (Not (Me.MissRouteGetConsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MissRouteGetConsCompleted(Me, New MissRouteGetConsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MissRouteProcess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MissRouteProcess(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("MissRouteProcess", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub MissRouteProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.MissRouteProcessAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MissRouteProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.MissRouteProcessOperationCompleted Is Nothing) Then
                Me.MissRouteProcessOperationCompleted = AddressOf Me.OnMissRouteProcessOperationCompleted
            End If
            Me.InvokeAsync("MissRouteProcess", New Object() {AppName, AppVersion, Hub, Param}, Me.MissRouteProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnMissRouteProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.MissRouteProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MissRouteProcessCompleted(Me, New MissRouteProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOtherExpeditionAWB", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOtherExpeditionAWB(ByVal AppName As String, ByVal AppVersion As String, ByVal OriCode As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetOtherExpeditionAWB", New Object() {AppName, AppVersion, OriCode, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOtherExpeditionAWBAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal OriCode As String, ByVal Param() As Object)
            Me.GetOtherExpeditionAWBAsync(AppName, AppVersion, OriCode, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOtherExpeditionAWBAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal OriCode As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetOtherExpeditionAWBOperationCompleted Is Nothing) Then
                Me.GetOtherExpeditionAWBOperationCompleted = AddressOf Me.OnGetOtherExpeditionAWBOperationCompleted
            End If
            Me.InvokeAsync("GetOtherExpeditionAWB", New Object() {AppName, AppVersion, OriCode, Param}, Me.GetOtherExpeditionAWBOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOtherExpeditionAWBOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOtherExpeditionAWBCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOtherExpeditionAWBCompleted(Me, New GetOtherExpeditionAWBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOtherExpeditionAWBv2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOtherExpeditionAWBv2(ByVal AppName As String, ByVal AppVersion As String, ByVal OriCode As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetOtherExpeditionAWBv2", New Object() {AppName, AppVersion, OriCode, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOtherExpeditionAWBv2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal OriCode As String, ByVal Param() As Object)
            Me.GetOtherExpeditionAWBv2Async(AppName, AppVersion, OriCode, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOtherExpeditionAWBv2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal OriCode As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetOtherExpeditionAWBv2OperationCompleted Is Nothing) Then
                Me.GetOtherExpeditionAWBv2OperationCompleted = AddressOf Me.OnGetOtherExpeditionAWBv2OperationCompleted
            End If
            Me.InvokeAsync("GetOtherExpeditionAWBv2", New Object() {AppName, AppVersion, OriCode, Param}, Me.GetOtherExpeditionAWBv2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOtherExpeditionAWBv2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOtherExpeditionAWBv2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOtherExpeditionAWBv2Completed(Me, New GetOtherExpeditionAWBv2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetOtherExpeditionRSC", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetOtherExpeditionRSC(ByVal AppName As String, ByVal AppVersion As String, ByVal OriCode As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SetOtherExpeditionRSC", New Object() {AppName, AppVersion, OriCode, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetOtherExpeditionRSCAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal OriCode As String, ByVal Param() As Object)
            Me.SetOtherExpeditionRSCAsync(AppName, AppVersion, OriCode, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetOtherExpeditionRSCAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal OriCode As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SetOtherExpeditionRSCOperationCompleted Is Nothing) Then
                Me.SetOtherExpeditionRSCOperationCompleted = AddressOf Me.OnSetOtherExpeditionRSCOperationCompleted
            End If
            Me.InvokeAsync("SetOtherExpeditionRSC", New Object() {AppName, AppVersion, OriCode, Param}, Me.SetOtherExpeditionRSCOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetOtherExpeditionRSCOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetOtherExpeditionRSCCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetOtherExpeditionRSCCompleted(Me, New SetOtherExpeditionRSCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetOtherExpeditionAWB", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetOtherExpeditionAWB(ByVal AppName As String, ByVal AppVersion As String, ByVal OriCode As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SetOtherExpeditionAWB", New Object() {AppName, AppVersion, OriCode, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetOtherExpeditionAWBAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal OriCode As String, ByVal Param() As Object)
            Me.SetOtherExpeditionAWBAsync(AppName, AppVersion, OriCode, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetOtherExpeditionAWBAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal OriCode As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SetOtherExpeditionAWBOperationCompleted Is Nothing) Then
                Me.SetOtherExpeditionAWBOperationCompleted = AddressOf Me.OnSetOtherExpeditionAWBOperationCompleted
            End If
            Me.InvokeAsync("SetOtherExpeditionAWB", New Object() {AppName, AppVersion, OriCode, Param}, Me.SetOtherExpeditionAWBOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetOtherExpeditionAWBOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetOtherExpeditionAWBCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetOtherExpeditionAWBCompleted(Me, New SetOtherExpeditionAWBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetOtherExpeditionRTS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetOtherExpeditionRTS(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SetOtherExpeditionRTS", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetOtherExpeditionRTSAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SetOtherExpeditionRTSAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetOtherExpeditionRTSAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SetOtherExpeditionRTSOperationCompleted Is Nothing) Then
                Me.SetOtherExpeditionRTSOperationCompleted = AddressOf Me.OnSetOtherExpeditionRTSOperationCompleted
            End If
            Me.InvokeAsync("SetOtherExpeditionRTS", New Object() {AppName, AppVersion, Param}, Me.SetOtherExpeditionRTSOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetOtherExpeditionRTSOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetOtherExpeditionRTSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetOtherExpeditionRTSCompleted(Me, New SetOtherExpeditionRTSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CostOtherExpeditionAWBCore", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CostOtherExpeditionAWBCore() As Object()
            Dim results() As Object = Me.Invoke("CostOtherExpeditionAWBCore", New Object(-1) {})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CostOtherExpeditionAWBCoreAsync()
            Me.CostOtherExpeditionAWBCoreAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CostOtherExpeditionAWBCoreAsync(ByVal userState As Object)
            If (Me.CostOtherExpeditionAWBCoreOperationCompleted Is Nothing) Then
                Me.CostOtherExpeditionAWBCoreOperationCompleted = AddressOf Me.OnCostOtherExpeditionAWBCoreOperationCompleted
            End If
            Me.InvokeAsync("CostOtherExpeditionAWBCore", New Object(-1) {}, Me.CostOtherExpeditionAWBCoreOperationCompleted, userState)
        End Sub
        
        Private Sub OnCostOtherExpeditionAWBCoreOperationCompleted(ByVal arg As Object)
            If (Not (Me.CostOtherExpeditionAWBCoreCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CostOtherExpeditionAWBCoreCompleted(Me, New CostOtherExpeditionAWBCoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OtherExpeditionExpenseData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function OtherExpeditionExpenseData(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("OtherExpeditionExpenseData", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub OtherExpeditionExpenseDataAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.OtherExpeditionExpenseDataAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OtherExpeditionExpenseDataAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.OtherExpeditionExpenseDataOperationCompleted Is Nothing) Then
                Me.OtherExpeditionExpenseDataOperationCompleted = AddressOf Me.OnOtherExpeditionExpenseDataOperationCompleted
            End If
            Me.InvokeAsync("OtherExpeditionExpenseData", New Object() {AppName, AppVersion, Param}, Me.OtherExpeditionExpenseDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnOtherExpeditionExpenseDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.OtherExpeditionExpenseDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OtherExpeditionExpenseDataCompleted(Me, New OtherExpeditionExpenseDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OtherExpeditionExpenseUpdate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function OtherExpeditionExpenseUpdate(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("OtherExpeditionExpenseUpdate", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub OtherExpeditionExpenseUpdateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.OtherExpeditionExpenseUpdateAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OtherExpeditionExpenseUpdateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.OtherExpeditionExpenseUpdateOperationCompleted Is Nothing) Then
                Me.OtherExpeditionExpenseUpdateOperationCompleted = AddressOf Me.OnOtherExpeditionExpenseUpdateOperationCompleted
            End If
            Me.InvokeAsync("OtherExpeditionExpenseUpdate", New Object() {AppName, AppVersion, Param}, Me.OtherExpeditionExpenseUpdateOperationCompleted, userState)
        End Sub
        
        Private Sub OnOtherExpeditionExpenseUpdateOperationCompleted(ByVal arg As Object)
            If (Not (Me.OtherExpeditionExpenseUpdateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OtherExpeditionExpenseUpdateCompleted(Me, New OtherExpeditionExpenseUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OtherExpeditionExpenseDelete", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function OtherExpeditionExpenseDelete(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("OtherExpeditionExpenseDelete", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub OtherExpeditionExpenseDeleteAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.OtherExpeditionExpenseDeleteAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub OtherExpeditionExpenseDeleteAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.OtherExpeditionExpenseDeleteOperationCompleted Is Nothing) Then
                Me.OtherExpeditionExpenseDeleteOperationCompleted = AddressOf Me.OnOtherExpeditionExpenseDeleteOperationCompleted
            End If
            Me.InvokeAsync("OtherExpeditionExpenseDelete", New Object() {AppName, AppVersion, Param}, Me.OtherExpeditionExpenseDeleteOperationCompleted, userState)
        End Sub
        
        Private Sub OnOtherExpeditionExpenseDeleteOperationCompleted(ByVal arg As Object)
            If (Not (Me.OtherExpeditionExpenseDeleteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent OtherExpeditionExpenseDeleteCompleted(Me, New OtherExpeditionExpenseDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ThirdPartyExpenseUpdate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ThirdPartyExpenseUpdate(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ThirdPartyExpenseUpdate", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ThirdPartyExpenseUpdateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ThirdPartyExpenseUpdateAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ThirdPartyExpenseUpdateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ThirdPartyExpenseUpdateOperationCompleted Is Nothing) Then
                Me.ThirdPartyExpenseUpdateOperationCompleted = AddressOf Me.OnThirdPartyExpenseUpdateOperationCompleted
            End If
            Me.InvokeAsync("ThirdPartyExpenseUpdate", New Object() {AppName, AppVersion, Param}, Me.ThirdPartyExpenseUpdateOperationCompleted, userState)
        End Sub
        
        Private Sub OnThirdPartyExpenseUpdateOperationCompleted(ByVal arg As Object)
            If (Not (Me.ThirdPartyExpenseUpdateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ThirdPartyExpenseUpdateCompleted(Me, New ThirdPartyExpenseUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ThirdPartyExpenseDelete", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ThirdPartyExpenseDelete(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ThirdPartyExpenseDelete", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ThirdPartyExpenseDeleteAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ThirdPartyExpenseDeleteAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ThirdPartyExpenseDeleteAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ThirdPartyExpenseDeleteOperationCompleted Is Nothing) Then
                Me.ThirdPartyExpenseDeleteOperationCompleted = AddressOf Me.OnThirdPartyExpenseDeleteOperationCompleted
            End If
            Me.InvokeAsync("ThirdPartyExpenseDelete", New Object() {AppName, AppVersion, Param}, Me.ThirdPartyExpenseDeleteOperationCompleted, userState)
        End Sub
        
        Private Sub OnThirdPartyExpenseDeleteOperationCompleted(ByVal arg As Object)
            If (Not (Me.ThirdPartyExpenseDeleteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ThirdPartyExpenseDeleteCompleted(Me, New ThirdPartyExpenseDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ThreePLOtherExpensesDelete", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ThreePLOtherExpensesDelete(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ThreePLOtherExpensesDelete", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ThreePLOtherExpensesDeleteAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ThreePLOtherExpensesDeleteAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ThreePLOtherExpensesDeleteAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ThreePLOtherExpensesDeleteOperationCompleted Is Nothing) Then
                Me.ThreePLOtherExpensesDeleteOperationCompleted = AddressOf Me.OnThreePLOtherExpensesDeleteOperationCompleted
            End If
            Me.InvokeAsync("ThreePLOtherExpensesDelete", New Object() {AppName, AppVersion, Param}, Me.ThreePLOtherExpensesDeleteOperationCompleted, userState)
        End Sub
        
        Private Sub OnThreePLOtherExpensesDeleteOperationCompleted(ByVal arg As Object)
            If (Not (Me.ThreePLOtherExpensesDeleteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ThreePLOtherExpensesDeleteCompleted(Me, New ThreePLOtherExpensesDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ThreePLExpenseUpdate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ThreePLExpenseUpdate(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ThreePLExpenseUpdate", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ThreePLExpenseUpdateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ThreePLExpenseUpdateAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ThreePLExpenseUpdateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ThreePLExpenseUpdateOperationCompleted Is Nothing) Then
                Me.ThreePLExpenseUpdateOperationCompleted = AddressOf Me.OnThreePLExpenseUpdateOperationCompleted
            End If
            Me.InvokeAsync("ThreePLExpenseUpdate", New Object() {AppName, AppVersion, Param}, Me.ThreePLExpenseUpdateOperationCompleted, userState)
        End Sub
        
        Private Sub OnThreePLExpenseUpdateOperationCompleted(ByVal arg As Object)
            If (Not (Me.ThreePLExpenseUpdateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ThreePLExpenseUpdateCompleted(Me, New ThreePLExpenseUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ThreePLExpenseDelete", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ThreePLExpenseDelete(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ThreePLExpenseDelete", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ThreePLExpenseDeleteAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ThreePLExpenseDeleteAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ThreePLExpenseDeleteAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ThreePLExpenseDeleteOperationCompleted Is Nothing) Then
                Me.ThreePLExpenseDeleteOperationCompleted = AddressOf Me.OnThreePLExpenseDeleteOperationCompleted
            End If
            Me.InvokeAsync("ThreePLExpenseDelete", New Object() {AppName, AppVersion, Param}, Me.ThreePLExpenseDeleteOperationCompleted, userState)
        End Sub
        
        Private Sub OnThreePLExpenseDeleteOperationCompleted(ByVal arg As Object)
            If (Not (Me.ThreePLExpenseDeleteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ThreePLExpenseDeleteCompleted(Me, New ThreePLExpenseDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PackingKayuSettingGeneralGet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PackingKayuSettingGeneralGet(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PackingKayuSettingGeneralGet", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PackingKayuSettingGeneralGetAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PackingKayuSettingGeneralGetAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PackingKayuSettingGeneralGetAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PackingKayuSettingGeneralGetOperationCompleted Is Nothing) Then
                Me.PackingKayuSettingGeneralGetOperationCompleted = AddressOf Me.OnPackingKayuSettingGeneralGetOperationCompleted
            End If
            Me.InvokeAsync("PackingKayuSettingGeneralGet", New Object() {AppName, AppVersion, Param}, Me.PackingKayuSettingGeneralGetOperationCompleted, userState)
        End Sub
        
        Private Sub OnPackingKayuSettingGeneralGetOperationCompleted(ByVal arg As Object)
            If (Not (Me.PackingKayuSettingGeneralGetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PackingKayuSettingGeneralGetCompleted(Me, New PackingKayuSettingGeneralGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PackingKayuSettingGeneralSet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PackingKayuSettingGeneralSet(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PackingKayuSettingGeneralSet", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PackingKayuSettingGeneralSetAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PackingKayuSettingGeneralSetAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PackingKayuSettingGeneralSetAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PackingKayuSettingGeneralSetOperationCompleted Is Nothing) Then
                Me.PackingKayuSettingGeneralSetOperationCompleted = AddressOf Me.OnPackingKayuSettingGeneralSetOperationCompleted
            End If
            Me.InvokeAsync("PackingKayuSettingGeneralSet", New Object() {AppName, AppVersion, Param}, Me.PackingKayuSettingGeneralSetOperationCompleted, userState)
        End Sub
        
        Private Sub OnPackingKayuSettingGeneralSetOperationCompleted(ByVal arg As Object)
            If (Not (Me.PackingKayuSettingGeneralSetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PackingKayuSettingGeneralSetCompleted(Me, New PackingKayuSettingGeneralSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PackingKayuSettingHubGet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PackingKayuSettingHubGet(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PackingKayuSettingHubGet", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PackingKayuSettingHubGetAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.PackingKayuSettingHubGetAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PackingKayuSettingHubGetAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PackingKayuSettingHubGetOperationCompleted Is Nothing) Then
                Me.PackingKayuSettingHubGetOperationCompleted = AddressOf Me.OnPackingKayuSettingHubGetOperationCompleted
            End If
            Me.InvokeAsync("PackingKayuSettingHubGet", New Object() {AppName, AppVersion, Hub, Param}, Me.PackingKayuSettingHubGetOperationCompleted, userState)
        End Sub
        
        Private Sub OnPackingKayuSettingHubGetOperationCompleted(ByVal arg As Object)
            If (Not (Me.PackingKayuSettingHubGetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PackingKayuSettingHubGetCompleted(Me, New PackingKayuSettingHubGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PackingKayuSettingHubSet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PackingKayuSettingHubSet(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PackingKayuSettingHubSet", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PackingKayuSettingHubSetAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.PackingKayuSettingHubSetAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PackingKayuSettingHubSetAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PackingKayuSettingHubSetOperationCompleted Is Nothing) Then
                Me.PackingKayuSettingHubSetOperationCompleted = AddressOf Me.OnPackingKayuSettingHubSetOperationCompleted
            End If
            Me.InvokeAsync("PackingKayuSettingHubSet", New Object() {AppName, AppVersion, Hub, Param}, Me.PackingKayuSettingHubSetOperationCompleted, userState)
        End Sub
        
        Private Sub OnPackingKayuSettingHubSetOperationCompleted(ByVal arg As Object)
            If (Not (Me.PackingKayuSettingHubSetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PackingKayuSettingHubSetCompleted(Me, New PackingKayuSettingHubSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAddTaxOriFtzHsCodeList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAddTaxOriFtzHsCodeList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAddTaxOriFtzHsCodeList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAddTaxOriFtzHsCodeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetAddTaxOriFtzHsCodeListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAddTaxOriFtzHsCodeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAddTaxOriFtzHsCodeListOperationCompleted Is Nothing) Then
                Me.GetAddTaxOriFtzHsCodeListOperationCompleted = AddressOf Me.OnGetAddTaxOriFtzHsCodeListOperationCompleted
            End If
            Me.InvokeAsync("GetAddTaxOriFtzHsCodeList", New Object() {AppName, AppVersion, Param}, Me.GetAddTaxOriFtzHsCodeListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAddTaxOriFtzHsCodeListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAddTaxOriFtzHsCodeListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAddTaxOriFtzHsCodeListCompleted(Me, New GetAddTaxOriFtzHsCodeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAddTaxOriFtzHsCodeListV2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAddTaxOriFtzHsCodeListV2(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAddTaxOriFtzHsCodeListV2", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAddTaxOriFtzHsCodeListV2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetAddTaxOriFtzHsCodeListV2Async(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAddTaxOriFtzHsCodeListV2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAddTaxOriFtzHsCodeListV2OperationCompleted Is Nothing) Then
                Me.GetAddTaxOriFtzHsCodeListV2OperationCompleted = AddressOf Me.OnGetAddTaxOriFtzHsCodeListV2OperationCompleted
            End If
            Me.InvokeAsync("GetAddTaxOriFtzHsCodeListV2", New Object() {AppName, AppVersion, Param}, Me.GetAddTaxOriFtzHsCodeListV2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAddTaxOriFtzHsCodeListV2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAddTaxOriFtzHsCodeListV2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAddTaxOriFtzHsCodeListV2Completed(Me, New GetAddTaxOriFtzHsCodeListV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactionWeightDimension", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTransactionWeightDimension(ByVal AppName As String, ByVal AppVersion As String, ByVal CheckerCode As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetTransactionWeightDimension", New Object() {AppName, AppVersion, CheckerCode, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTransactionWeightDimensionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal CheckerCode As String, ByVal Param() As Object)
            Me.GetTransactionWeightDimensionAsync(AppName, AppVersion, CheckerCode, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTransactionWeightDimensionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal CheckerCode As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetTransactionWeightDimensionOperationCompleted Is Nothing) Then
                Me.GetTransactionWeightDimensionOperationCompleted = AddressOf Me.OnGetTransactionWeightDimensionOperationCompleted
            End If
            Me.InvokeAsync("GetTransactionWeightDimension", New Object() {AppName, AppVersion, CheckerCode, Param}, Me.GetTransactionWeightDimensionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTransactionWeightDimensionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTransactionWeightDimensionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTransactionWeightDimensionCompleted(Me, New GetTransactionWeightDimensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConsWeight", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetConsWeight(ByVal AppName As String, ByVal AppVersion As String, ByVal CheckerCode As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetConsWeight", New Object() {AppName, AppVersion, CheckerCode, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetConsWeightAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal CheckerCode As String, ByVal Param() As Object)
            Me.GetConsWeightAsync(AppName, AppVersion, CheckerCode, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetConsWeightAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal CheckerCode As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetConsWeightOperationCompleted Is Nothing) Then
                Me.GetConsWeightOperationCompleted = AddressOf Me.OnGetConsWeightOperationCompleted
            End If
            Me.InvokeAsync("GetConsWeight", New Object() {AppName, AppVersion, CheckerCode, Param}, Me.GetConsWeightOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetConsWeightOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetConsWeightCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetConsWeightCompleted(Me, New GetConsWeightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExpeditionPickupList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExpeditionPickupList(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ExpeditionPickupList", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExpeditionPickupListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.ExpeditionPickupListAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExpeditionPickupListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ExpeditionPickupListOperationCompleted Is Nothing) Then
                Me.ExpeditionPickupListOperationCompleted = AddressOf Me.OnExpeditionPickupListOperationCompleted
            End If
            Me.InvokeAsync("ExpeditionPickupList", New Object() {AppName, AppVersion, Station, Param}, Me.ExpeditionPickupListOperationCompleted, userState)
        End Sub
        
        Private Sub OnExpeditionPickupListOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExpeditionPickupListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExpeditionPickupListCompleted(Me, New ExpeditionPickupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExpeditionPickupProcess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExpeditionPickupProcess(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ExpeditionPickupProcess", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExpeditionPickupProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.ExpeditionPickupProcessAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExpeditionPickupProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ExpeditionPickupProcessOperationCompleted Is Nothing) Then
                Me.ExpeditionPickupProcessOperationCompleted = AddressOf Me.OnExpeditionPickupProcessOperationCompleted
            End If
            Me.InvokeAsync("ExpeditionPickupProcess", New Object() {AppName, AppVersion, Station, Param}, Me.ExpeditionPickupProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnExpeditionPickupProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExpeditionPickupProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExpeditionPickupProcessCompleted(Me, New ExpeditionPickupProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SNODraftList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SNODraftList(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SNODraftList", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SNODraftListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.SNODraftListAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SNODraftListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SNODraftListOperationCompleted Is Nothing) Then
                Me.SNODraftListOperationCompleted = AddressOf Me.OnSNODraftListOperationCompleted
            End If
            Me.InvokeAsync("SNODraftList", New Object() {AppName, AppVersion, Station, Param}, Me.SNODraftListOperationCompleted, userState)
        End Sub
        
        Private Sub OnSNODraftListOperationCompleted(ByVal arg As Object)
            If (Not (Me.SNODraftListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SNODraftListCompleted(Me, New SNODraftListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SNIDraftList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SNIDraftList(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SNIDraftList", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SNIDraftListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.SNIDraftListAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SNIDraftListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SNIDraftListOperationCompleted Is Nothing) Then
                Me.SNIDraftListOperationCompleted = AddressOf Me.OnSNIDraftListOperationCompleted
            End If
            Me.InvokeAsync("SNIDraftList", New Object() {AppName, AppVersion, Station, Param}, Me.SNIDraftListOperationCompleted, userState)
        End Sub
        
        Private Sub OnSNIDraftListOperationCompleted(ByVal arg As Object)
            If (Not (Me.SNIDraftListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SNIDraftListCompleted(Me, New SNIDraftListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TrackingQuery", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TrackingQuery(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("TrackingQuery", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub TrackingQueryAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.TrackingQueryAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TrackingQueryAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.TrackingQueryOperationCompleted Is Nothing) Then
                Me.TrackingQueryOperationCompleted = AddressOf Me.OnTrackingQueryOperationCompleted
            End If
            Me.InvokeAsync("TrackingQuery", New Object() {AppName, AppVersion, Param}, Me.TrackingQueryOperationCompleted, userState)
        End Sub
        
        Private Sub OnTrackingQueryOperationCompleted(ByVal arg As Object)
            If (Not (Me.TrackingQueryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TrackingQueryCompleted(Me, New TrackingQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TrackingUpdateStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TrackingUpdateStatus(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("TrackingUpdateStatus", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub TrackingUpdateStatusAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.TrackingUpdateStatusAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TrackingUpdateStatusAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.TrackingUpdateStatusOperationCompleted Is Nothing) Then
                Me.TrackingUpdateStatusOperationCompleted = AddressOf Me.OnTrackingUpdateStatusOperationCompleted
            End If
            Me.InvokeAsync("TrackingUpdateStatus", New Object() {AppName, AppVersion, Param}, Me.TrackingUpdateStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnTrackingUpdateStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.TrackingUpdateStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TrackingUpdateStatusCompleted(Me, New TrackingUpdateStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TrackingReverseStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TrackingReverseStatus(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("TrackingReverseStatus", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub TrackingReverseStatusAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.TrackingReverseStatusAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TrackingReverseStatusAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.TrackingReverseStatusOperationCompleted Is Nothing) Then
                Me.TrackingReverseStatusOperationCompleted = AddressOf Me.OnTrackingReverseStatusOperationCompleted
            End If
            Me.InvokeAsync("TrackingReverseStatus", New Object() {AppName, AppVersion, Param}, Me.TrackingReverseStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnTrackingReverseStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.TrackingReverseStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TrackingReverseStatusCompleted(Me, New TrackingReverseStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CustomUpdateStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CustomUpdateStatus(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("CustomUpdateStatus", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CustomUpdateStatusAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.CustomUpdateStatusAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CustomUpdateStatusAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.CustomUpdateStatusOperationCompleted Is Nothing) Then
                Me.CustomUpdateStatusOperationCompleted = AddressOf Me.OnCustomUpdateStatusOperationCompleted
            End If
            Me.InvokeAsync("CustomUpdateStatus", New Object() {AppName, AppVersion, Param}, Me.CustomUpdateStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnCustomUpdateStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.CustomUpdateStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CustomUpdateStatusCompleted(Me, New CustomUpdateStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSuratJalanToko", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSuratJalanToko(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetSuratJalanToko", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSuratJalanTokoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetSuratJalanTokoAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSuratJalanTokoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetSuratJalanTokoOperationCompleted Is Nothing) Then
                Me.GetSuratJalanTokoOperationCompleted = AddressOf Me.OnGetSuratJalanTokoOperationCompleted
            End If
            Me.InvokeAsync("GetSuratJalanToko", New Object() {AppName, AppVersion, Param}, Me.GetSuratJalanTokoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSuratJalanTokoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSuratJalanTokoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSuratJalanTokoCompleted(Me, New GetSuratJalanTokoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTandaTerimaToko", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTandaTerimaToko(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetTandaTerimaToko", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTandaTerimaTokoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetTandaTerimaTokoAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTandaTerimaTokoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetTandaTerimaTokoOperationCompleted Is Nothing) Then
                Me.GetTandaTerimaTokoOperationCompleted = AddressOf Me.OnGetTandaTerimaTokoOperationCompleted
            End If
            Me.InvokeAsync("GetTandaTerimaToko", New Object() {AppName, AppVersion, Param}, Me.GetTandaTerimaTokoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTandaTerimaTokoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTandaTerimaTokoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTandaTerimaTokoCompleted(Me, New GetTandaTerimaTokoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TrackingUploadStatusTemplate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TrackingUploadStatusTemplate(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsTemplate As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("TrackingUploadStatusTemplate", New Object() {AppName, AppVersion, Param, dsTemplate})
            dsTemplate = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub TrackingUploadStatusTemplateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsTemplate As System.Data.DataSet)
            Me.TrackingUploadStatusTemplateAsync(AppName, AppVersion, Param, dsTemplate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TrackingUploadStatusTemplateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsTemplate As System.Data.DataSet, ByVal userState As Object)
            If (Me.TrackingUploadStatusTemplateOperationCompleted Is Nothing) Then
                Me.TrackingUploadStatusTemplateOperationCompleted = AddressOf Me.OnTrackingUploadStatusTemplateOperationCompleted
            End If
            Me.InvokeAsync("TrackingUploadStatusTemplate", New Object() {AppName, AppVersion, Param, dsTemplate}, Me.TrackingUploadStatusTemplateOperationCompleted, userState)
        End Sub
        
        Private Sub OnTrackingUploadStatusTemplateOperationCompleted(ByVal arg As Object)
            If (Not (Me.TrackingUploadStatusTemplateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TrackingUploadStatusTemplateCompleted(Me, New TrackingUploadStatusTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TrackingUploadStatusValidate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TrackingUploadStatusValidate(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByRef dsValidasi As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("TrackingUploadStatusValidate", New Object() {AppName, AppVersion, Param, dsData, dsValidasi})
            dsValidasi = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub TrackingUploadStatusValidateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal dsValidasi As System.Data.DataSet)
            Me.TrackingUploadStatusValidateAsync(AppName, AppVersion, Param, dsData, dsValidasi, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TrackingUploadStatusValidateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal dsValidasi As System.Data.DataSet, ByVal userState As Object)
            If (Me.TrackingUploadStatusValidateOperationCompleted Is Nothing) Then
                Me.TrackingUploadStatusValidateOperationCompleted = AddressOf Me.OnTrackingUploadStatusValidateOperationCompleted
            End If
            Me.InvokeAsync("TrackingUploadStatusValidate", New Object() {AppName, AppVersion, Param, dsData, dsValidasi}, Me.TrackingUploadStatusValidateOperationCompleted, userState)
        End Sub
        
        Private Sub OnTrackingUploadStatusValidateOperationCompleted(ByVal arg As Object)
            If (Not (Me.TrackingUploadStatusValidateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TrackingUploadStatusValidateCompleted(Me, New TrackingUploadStatusValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TrackingUploadStatusProcess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TrackingUploadStatusProcess(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByRef dsProcess As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("TrackingUploadStatusProcess", New Object() {AppName, AppVersion, Param, dsData, dsProcess})
            dsProcess = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub TrackingUploadStatusProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal dsProcess As System.Data.DataSet)
            Me.TrackingUploadStatusProcessAsync(AppName, AppVersion, Param, dsData, dsProcess, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TrackingUploadStatusProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal dsProcess As System.Data.DataSet, ByVal userState As Object)
            If (Me.TrackingUploadStatusProcessOperationCompleted Is Nothing) Then
                Me.TrackingUploadStatusProcessOperationCompleted = AddressOf Me.OnTrackingUploadStatusProcessOperationCompleted
            End If
            Me.InvokeAsync("TrackingUploadStatusProcess", New Object() {AppName, AppVersion, Param, dsData, dsProcess}, Me.TrackingUploadStatusProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnTrackingUploadStatusProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.TrackingUploadStatusProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TrackingUploadStatusProcessCompleted(Me, New TrackingUploadStatusProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMSNewV2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SendSMSNewV2(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.Invoke("SendSMSNewV2", New Object() {AppName, AppVersion, Param})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendSMSNewV2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SendSMSNewV2Async(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendSMSNewV2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SendSMSNewV2OperationCompleted Is Nothing) Then
                Me.SendSMSNewV2OperationCompleted = AddressOf Me.OnSendSMSNewV2OperationCompleted
            End If
            Me.InvokeAsync("SendSMSNewV2", New Object() {AppName, AppVersion, Param}, Me.SendSMSNewV2OperationCompleted, userState)
        End Sub
        
        Private Sub OnSendSMSNewV2OperationCompleted(ByVal arg As Object)
            If (Not (Me.SendSMSNewV2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendSMSNewV2Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckTransaction", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckTransaction(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("CheckTransaction", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckTransactionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.CheckTransactionAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckTransactionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.CheckTransactionOperationCompleted Is Nothing) Then
                Me.CheckTransactionOperationCompleted = AddressOf Me.OnCheckTransactionOperationCompleted
            End If
            Me.InvokeAsync("CheckTransaction", New Object() {AppName, AppVersion, Param}, Me.CheckTransactionOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckTransactionOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckTransactionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckTransactionCompleted(Me, New CheckTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckExistingStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckExistingStatus(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("CheckExistingStatus", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckExistingStatusAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.CheckExistingStatusAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckExistingStatusAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.CheckExistingStatusOperationCompleted Is Nothing) Then
                Me.CheckExistingStatusOperationCompleted = AddressOf Me.OnCheckExistingStatusOperationCompleted
            End If
            Me.InvokeAsync("CheckExistingStatus", New Object() {AppName, AppVersion, Param}, Me.CheckExistingStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckExistingStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckExistingStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckExistingStatusCompleted(Me, New CheckExistingStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SyncIGR", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SyncIGR(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SyncIGR", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SyncIGRAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SyncIGRAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SyncIGRAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SyncIGROperationCompleted Is Nothing) Then
                Me.SyncIGROperationCompleted = AddressOf Me.OnSyncIGROperationCompleted
            End If
            Me.InvokeAsync("SyncIGR", New Object() {AppName, AppVersion, Param}, Me.SyncIGROperationCompleted, userState)
        End Sub
        
        Private Sub OnSyncIGROperationCompleted(ByVal arg As Object)
            If (Not (Me.SyncIGRCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SyncIGRCompleted(Me, New SyncIGRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StoreStoRtsNotProcessed", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function StoreStoRtsNotProcessed(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("StoreStoRtsNotProcessed", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub StoreStoRtsNotProcessedAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.StoreStoRtsNotProcessedAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StoreStoRtsNotProcessedAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.StoreStoRtsNotProcessedOperationCompleted Is Nothing) Then
                Me.StoreStoRtsNotProcessedOperationCompleted = AddressOf Me.OnStoreStoRtsNotProcessedOperationCompleted
            End If
            Me.InvokeAsync("StoreStoRtsNotProcessed", New Object() {AppName, AppVersion, Param}, Me.StoreStoRtsNotProcessedOperationCompleted, userState)
        End Sub
        
        Private Sub OnStoreStoRtsNotProcessedOperationCompleted(ByVal arg As Object)
            If (Not (Me.StoreStoRtsNotProcessedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StoreStoRtsNotProcessedCompleted(Me, New StoreStoRtsNotProcessedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TermsAndConditions", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TermsAndConditions() As Object()
            Dim results() As Object = Me.Invoke("TermsAndConditions", New Object(-1) {})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub TermsAndConditionsAsync()
            Me.TermsAndConditionsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TermsAndConditionsAsync(ByVal userState As Object)
            If (Me.TermsAndConditionsOperationCompleted Is Nothing) Then
                Me.TermsAndConditionsOperationCompleted = AddressOf Me.OnTermsAndConditionsOperationCompleted
            End If
            Me.InvokeAsync("TermsAndConditions", New Object(-1) {}, Me.TermsAndConditionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnTermsAndConditionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.TermsAndConditionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TermsAndConditionsCompleted(Me, New TermsAndConditionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewTransactionTrialKaryawan", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NewTransactionTrialKaryawan(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("NewTransactionTrialKaryawan", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub NewTransactionTrialKaryawanAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.NewTransactionTrialKaryawanAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NewTransactionTrialKaryawanAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.NewTransactionTrialKaryawanOperationCompleted Is Nothing) Then
                Me.NewTransactionTrialKaryawanOperationCompleted = AddressOf Me.OnNewTransactionTrialKaryawanOperationCompleted
            End If
            Me.InvokeAsync("NewTransactionTrialKaryawan", New Object() {AppName, AppVersion, Param}, Me.NewTransactionTrialKaryawanOperationCompleted, userState)
        End Sub
        
        Private Sub OnNewTransactionTrialKaryawanOperationCompleted(ByVal arg As Object)
            If (Not (Me.NewTransactionTrialKaryawanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NewTransactionTrialKaryawanCompleted(Me, New NewTransactionTrialKaryawanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TrialTransactionList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TrialTransactionList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("TrialTransactionList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TrialTransactionListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.TrialTransactionListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TrialTransactionListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.TrialTransactionListOperationCompleted Is Nothing) Then
                Me.TrialTransactionListOperationCompleted = AddressOf Me.OnTrialTransactionListOperationCompleted
            End If
            Me.InvokeAsync("TrialTransactionList", New Object() {AppName, AppVersion, Param}, Me.TrialTransactionListOperationCompleted, userState)
        End Sub
        
        Private Sub OnTrialTransactionListOperationCompleted(ByVal arg As Object)
            If (Not (Me.TrialTransactionListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TrialTransactionListCompleted(Me, New TrialTransactionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TrialTransactionDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TrialTransactionDetail(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("TrialTransactionDetail", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TrialTransactionDetailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.TrialTransactionDetailAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TrialTransactionDetailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.TrialTransactionDetailOperationCompleted Is Nothing) Then
                Me.TrialTransactionDetailOperationCompleted = AddressOf Me.OnTrialTransactionDetailOperationCompleted
            End If
            Me.InvokeAsync("TrialTransactionDetail", New Object() {AppName, AppVersion, Param}, Me.TrialTransactionDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnTrialTransactionDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.TrialTransactionDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TrialTransactionDetailCompleted(Me, New TrialTransactionDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendWhatsApp", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SendWhatsApp(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.Invoke("SendWhatsApp", New Object() {AppName, AppVersion, Param})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendWhatsAppAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SendWhatsAppAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendWhatsAppAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SendWhatsAppOperationCompleted Is Nothing) Then
                Me.SendWhatsAppOperationCompleted = AddressOf Me.OnSendWhatsAppOperationCompleted
            End If
            Me.InvokeAsync("SendWhatsApp", New Object() {AppName, AppVersion, Param}, Me.SendWhatsAppOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendWhatsAppOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendWhatsAppCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendWhatsAppCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WhatsAppSwitchToSMS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WhatsAppSwitchToSMS(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.Invoke("WhatsAppSwitchToSMS", New Object() {AppName, AppVersion, Param})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WhatsAppSwitchToSMSAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WhatsAppSwitchToSMSAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WhatsAppSwitchToSMSAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WhatsAppSwitchToSMSOperationCompleted Is Nothing) Then
                Me.WhatsAppSwitchToSMSOperationCompleted = AddressOf Me.OnWhatsAppSwitchToSMSOperationCompleted
            End If
            Me.InvokeAsync("WhatsAppSwitchToSMS", New Object() {AppName, AppVersion, Param}, Me.WhatsAppSwitchToSMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnWhatsAppSwitchToSMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.WhatsAppSwitchToSMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WhatsAppSwitchToSMSCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AWBTTFSupplierGetList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AWBTTFSupplierGetList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AWBTTFSupplierGetList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AWBTTFSupplierGetListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AWBTTFSupplierGetListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AWBTTFSupplierGetListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AWBTTFSupplierGetListOperationCompleted Is Nothing) Then
                Me.AWBTTFSupplierGetListOperationCompleted = AddressOf Me.OnAWBTTFSupplierGetListOperationCompleted
            End If
            Me.InvokeAsync("AWBTTFSupplierGetList", New Object() {AppName, AppVersion, Param}, Me.AWBTTFSupplierGetListOperationCompleted, userState)
        End Sub
        
        Private Sub OnAWBTTFSupplierGetListOperationCompleted(ByVal arg As Object)
            If (Not (Me.AWBTTFSupplierGetListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AWBTTFSupplierGetListCompleted(Me, New AWBTTFSupplierGetListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AWBTTFSupplierCreateAWB", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AWBTTFSupplierCreateAWB(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AWBTTFSupplierCreateAWB", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AWBTTFSupplierCreateAWBAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AWBTTFSupplierCreateAWBAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AWBTTFSupplierCreateAWBAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AWBTTFSupplierCreateAWBOperationCompleted Is Nothing) Then
                Me.AWBTTFSupplierCreateAWBOperationCompleted = AddressOf Me.OnAWBTTFSupplierCreateAWBOperationCompleted
            End If
            Me.InvokeAsync("AWBTTFSupplierCreateAWB", New Object() {AppName, AppVersion, Param}, Me.AWBTTFSupplierCreateAWBOperationCompleted, userState)
        End Sub
        
        Private Sub OnAWBTTFSupplierCreateAWBOperationCompleted(ByVal arg As Object)
            If (Not (Me.AWBTTFSupplierCreateAWBCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AWBTTFSupplierCreateAWBCompleted(Me, New AWBTTFSupplierCreateAWBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StoreOfflineProcess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function StoreOfflineProcess(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("StoreOfflineProcess", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub StoreOfflineProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.StoreOfflineProcessAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StoreOfflineProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.StoreOfflineProcessOperationCompleted Is Nothing) Then
                Me.StoreOfflineProcessOperationCompleted = AddressOf Me.OnStoreOfflineProcessOperationCompleted
            End If
            Me.InvokeAsync("StoreOfflineProcess", New Object() {AppName, AppVersion, Param}, Me.StoreOfflineProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnStoreOfflineProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.StoreOfflineProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StoreOfflineProcessCompleted(Me, New StoreOfflineProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StationOpenConsList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function StationOpenConsList(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("StationOpenConsList", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub StationOpenConsListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.StationOpenConsListAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StationOpenConsListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.StationOpenConsListOperationCompleted Is Nothing) Then
                Me.StationOpenConsListOperationCompleted = AddressOf Me.OnStationOpenConsListOperationCompleted
            End If
            Me.InvokeAsync("StationOpenConsList", New Object() {AppName, AppVersion, Station, Param}, Me.StationOpenConsListOperationCompleted, userState)
        End Sub
        
        Private Sub OnStationOpenConsListOperationCompleted(ByVal arg As Object)
            If (Not (Me.StationOpenConsListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StationOpenConsListCompleted(Me, New StationOpenConsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StationOpenConsDetailList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function StationOpenConsDetailList(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("StationOpenConsDetailList", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub StationOpenConsDetailListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.StationOpenConsDetailListAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StationOpenConsDetailListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.StationOpenConsDetailListOperationCompleted Is Nothing) Then
                Me.StationOpenConsDetailListOperationCompleted = AddressOf Me.OnStationOpenConsDetailListOperationCompleted
            End If
            Me.InvokeAsync("StationOpenConsDetailList", New Object() {AppName, AppVersion, Station, Param}, Me.StationOpenConsDetailListOperationCompleted, userState)
        End Sub
        
        Private Sub OnStationOpenConsDetailListOperationCompleted(ByVal arg As Object)
            If (Not (Me.StationOpenConsDetailListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StationOpenConsDetailListCompleted(Me, New StationOpenConsDetailListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RAIProcess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RAIProcess(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("RAIProcess", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RAIProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.RAIProcessAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RAIProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.RAIProcessOperationCompleted Is Nothing) Then
                Me.RAIProcessOperationCompleted = AddressOf Me.OnRAIProcessOperationCompleted
            End If
            Me.InvokeAsync("RAIProcess", New Object() {AppName, AppVersion, Hub, Param}, Me.RAIProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnRAIProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.RAIProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RAIProcessCompleted(Me, New RAIProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DraftRAOListAll", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DraftRAOListAll(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DraftRAOListAll", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DraftRAOListAllAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.DraftRAOListAllAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DraftRAOListAllAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DraftRAOListAllOperationCompleted Is Nothing) Then
                Me.DraftRAOListAllOperationCompleted = AddressOf Me.OnDraftRAOListAllOperationCompleted
            End If
            Me.InvokeAsync("DraftRAOListAll", New Object() {AppName, AppVersion, Hub, Param}, Me.DraftRAOListAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnDraftRAOListAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.DraftRAOListAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DraftRAOListAllCompleted(Me, New DraftRAOListAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DraftRAOListDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DraftRAOListDetail(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DraftRAOListDetail", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DraftRAOListDetailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.DraftRAOListDetailAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DraftRAOListDetailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DraftRAOListDetailOperationCompleted Is Nothing) Then
                Me.DraftRAOListDetailOperationCompleted = AddressOf Me.OnDraftRAOListDetailOperationCompleted
            End If
            Me.InvokeAsync("DraftRAOListDetail", New Object() {AppName, AppVersion, Hub, Param}, Me.DraftRAOListDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnDraftRAOListDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.DraftRAOListDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DraftRAOListDetailCompleted(Me, New DraftRAOListDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RAOProcess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RAOProcess(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("RAOProcess", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub RAOProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.RAOProcessAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RAOProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.RAOProcessOperationCompleted Is Nothing) Then
                Me.RAOProcessOperationCompleted = AddressOf Me.OnRAOProcessOperationCompleted
            End If
            Me.InvokeAsync("RAOProcess", New Object() {AppName, AppVersion, Hub, Param}, Me.RAOProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnRAOProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.RAOProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RAOProcessCompleted(Me, New RAOProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsListAll", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsListAll(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ConsListAll", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsListAllAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.ConsListAllAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsListAllAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ConsListAllOperationCompleted Is Nothing) Then
                Me.ConsListAllOperationCompleted = AddressOf Me.OnConsListAllOperationCompleted
            End If
            Me.InvokeAsync("ConsListAll", New Object() {AppName, AppVersion, Hub, Param}, Me.ConsListAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsListAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsListAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsListAllCompleted(Me, New ConsListAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsNew", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsNew(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ConsNew", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsNewAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.ConsNewAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsNewAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ConsNewOperationCompleted Is Nothing) Then
                Me.ConsNewOperationCompleted = AddressOf Me.OnConsNewOperationCompleted
            End If
            Me.InvokeAsync("ConsNew", New Object() {AppName, AppVersion, Hub, Param}, Me.ConsNewOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsNewOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsNewCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsNewCompleted(Me, New ConsNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsProcess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsProcess(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ConsProcess", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.ConsProcessAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ConsProcessOperationCompleted Is Nothing) Then
                Me.ConsProcessOperationCompleted = AddressOf Me.OnConsProcessOperationCompleted
            End If
            Me.InvokeAsync("ConsProcess", New Object() {AppName, AppVersion, Hub, Param}, Me.ConsProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsProcessCompleted(Me, New ConsProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsListDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsListDetail(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ConsListDetail", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsListDetailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.ConsListDetailAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsListDetailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ConsListDetailOperationCompleted Is Nothing) Then
                Me.ConsListDetailOperationCompleted = AddressOf Me.OnConsListDetailOperationCompleted
            End If
            Me.InvokeAsync("ConsListDetail", New Object() {AppName, AppVersion, Hub, Param}, Me.ConsListDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsListDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsListDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsListDetailCompleted(Me, New ConsListDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsDetailUpdate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsDetailUpdate(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ConsDetailUpdate", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsDetailUpdateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.ConsDetailUpdateAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsDetailUpdateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ConsDetailUpdateOperationCompleted Is Nothing) Then
                Me.ConsDetailUpdateOperationCompleted = AddressOf Me.OnConsDetailUpdateOperationCompleted
            End If
            Me.InvokeAsync("ConsDetailUpdate", New Object() {AppName, AppVersion, Hub, Param}, Me.ConsDetailUpdateOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsDetailUpdateOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsDetailUpdateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsDetailUpdateCompleted(Me, New ConsDetailUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsDetailAddDelete", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsDetailAddDelete(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ConsDetailAddDelete", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsDetailAddDeleteAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.ConsDetailAddDeleteAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsDetailAddDeleteAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ConsDetailAddDeleteOperationCompleted Is Nothing) Then
                Me.ConsDetailAddDeleteOperationCompleted = AddressOf Me.OnConsDetailAddDeleteOperationCompleted
            End If
            Me.InvokeAsync("ConsDetailAddDelete", New Object() {AppName, AppVersion, Hub, Param}, Me.ConsDetailAddDeleteOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsDetailAddDeleteOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsDetailAddDeleteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsDetailAddDeleteCompleted(Me, New ConsDetailAddDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDCPickupNoList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDCPickupNoList(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetDCPickupNoList", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDCPickupNoListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.GetDCPickupNoListAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDCPickupNoListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetDCPickupNoListOperationCompleted Is Nothing) Then
                Me.GetDCPickupNoListOperationCompleted = AddressOf Me.OnGetDCPickupNoListOperationCompleted
            End If
            Me.InvokeAsync("GetDCPickupNoList", New Object() {AppName, AppVersion, Hub, Param}, Me.GetDCPickupNoListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDCPickupNoListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDCPickupNoListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDCPickupNoListCompleted(Me, New GetDCPickupNoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WHOListDC", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WHOListDC(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WHOListDC", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WHOListDCAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.WHOListDCAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WHOListDCAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WHOListDCOperationCompleted Is Nothing) Then
                Me.WHOListDCOperationCompleted = AddressOf Me.OnWHOListDCOperationCompleted
            End If
            Me.InvokeAsync("WHOListDC", New Object() {AppName, AppVersion, Hub, Param}, Me.WHOListDCOperationCompleted, userState)
        End Sub
        
        Private Sub OnWHOListDCOperationCompleted(ByVal arg As Object)
            If (Not (Me.WHOListDCCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WHOListDCCompleted(Me, New WHOListDCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WHOListExp", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WHOListExp(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WHOListExp", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WHOListExpAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.WHOListExpAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WHOListExpAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WHOListExpOperationCompleted Is Nothing) Then
                Me.WHOListExpOperationCompleted = AddressOf Me.OnWHOListExpOperationCompleted
            End If
            Me.InvokeAsync("WHOListExp", New Object() {AppName, AppVersion, Hub, Param}, Me.WHOListExpOperationCompleted, userState)
        End Sub
        
        Private Sub OnWHOListExpOperationCompleted(ByVal arg As Object)
            If (Not (Me.WHOListExpCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WHOListExpCompleted(Me, New WHOListExpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WHOListDGA", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WHOListDGA(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WHOListDGA", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WHOListDGAAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.WHOListDGAAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WHOListDGAAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WHOListDGAOperationCompleted Is Nothing) Then
                Me.WHOListDGAOperationCompleted = AddressOf Me.OnWHOListDGAOperationCompleted
            End If
            Me.InvokeAsync("WHOListDGA", New Object() {AppName, AppVersion, Hub, Param}, Me.WHOListDGAOperationCompleted, userState)
        End Sub
        
        Private Sub OnWHOListDGAOperationCompleted(ByVal arg As Object)
            If (Not (Me.WHOListDGACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WHOListDGACompleted(Me, New WHOListDGACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WHIListDGA", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WHIListDGA(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WHIListDGA", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WHIListDGAAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.WHIListDGAAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WHIListDGAAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WHIListDGAOperationCompleted Is Nothing) Then
                Me.WHIListDGAOperationCompleted = AddressOf Me.OnWHIListDGAOperationCompleted
            End If
            Me.InvokeAsync("WHIListDGA", New Object() {AppName, AppVersion, Hub, Param}, Me.WHIListDGAOperationCompleted, userState)
        End Sub
        
        Private Sub OnWHIListDGAOperationCompleted(ByVal arg As Object)
            If (Not (Me.WHIListDGACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WHIListDGACompleted(Me, New WHIListDGACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WHOListTakaki", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WHOListTakaki(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WHOListTakaki", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WHOListTakakiAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.WHOListTakakiAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WHOListTakakiAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WHOListTakakiOperationCompleted Is Nothing) Then
                Me.WHOListTakakiOperationCompleted = AddressOf Me.OnWHOListTakakiOperationCompleted
            End If
            Me.InvokeAsync("WHOListTakaki", New Object() {AppName, AppVersion, Hub, Param}, Me.WHOListTakakiOperationCompleted, userState)
        End Sub
        
        Private Sub OnWHOListTakakiOperationCompleted(ByVal arg As Object)
            If (Not (Me.WHOListTakakiCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WHOListTakakiCompleted(Me, New WHOListTakakiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WHIListTakaki", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WHIListTakaki(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WHIListTakaki", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WHIListTakakiAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.WHIListTakakiAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WHIListTakakiAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WHIListTakakiOperationCompleted Is Nothing) Then
                Me.WHIListTakakiOperationCompleted = AddressOf Me.OnWHIListTakakiOperationCompleted
            End If
            Me.InvokeAsync("WHIListTakaki", New Object() {AppName, AppVersion, Hub, Param}, Me.WHIListTakakiOperationCompleted, userState)
        End Sub
        
        Private Sub OnWHIListTakakiOperationCompleted(ByVal arg As Object)
            If (Not (Me.WHIListTakakiCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WHIListTakakiCompleted(Me, New WHIListTakakiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StationTerminalList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function StationTerminalList(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("StationTerminalList", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub StationTerminalListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.StationTerminalListAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StationTerminalListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.StationTerminalListOperationCompleted Is Nothing) Then
                Me.StationTerminalListOperationCompleted = AddressOf Me.OnStationTerminalListOperationCompleted
            End If
            Me.InvokeAsync("StationTerminalList", New Object() {AppName, AppVersion, Station, Param}, Me.StationTerminalListOperationCompleted, userState)
        End Sub
        
        Private Sub OnStationTerminalListOperationCompleted(ByVal arg As Object)
            If (Not (Me.StationTerminalListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StationTerminalListCompleted(Me, New StationTerminalListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HubTerminalList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HubTerminalList(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("HubTerminalList", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub HubTerminalListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.HubTerminalListAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HubTerminalListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.HubTerminalListOperationCompleted Is Nothing) Then
                Me.HubTerminalListOperationCompleted = AddressOf Me.OnHubTerminalListOperationCompleted
            End If
            Me.InvokeAsync("HubTerminalList", New Object() {AppName, AppVersion, Hub, Param}, Me.HubTerminalListOperationCompleted, userState)
        End Sub
        
        Private Sub OnHubTerminalListOperationCompleted(ByVal arg As Object)
            If (Not (Me.HubTerminalListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HubTerminalListCompleted(Me, New HubTerminalListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PickupAtHubList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PickupAtHubList(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PickupAtHubList", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PickupAtHubListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.PickupAtHubListAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PickupAtHubListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PickupAtHubListOperationCompleted Is Nothing) Then
                Me.PickupAtHubListOperationCompleted = AddressOf Me.OnPickupAtHubListOperationCompleted
            End If
            Me.InvokeAsync("PickupAtHubList", New Object() {AppName, AppVersion, Hub, Param}, Me.PickupAtHubListOperationCompleted, userState)
        End Sub
        
        Private Sub OnPickupAtHubListOperationCompleted(ByVal arg As Object)
            If (Not (Me.PickupAtHubListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PickupAtHubListCompleted(Me, New PickupAtHubListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PickupAtHubAccountList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PickupAtHubAccountList(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PickupAtHubAccountList", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PickupAtHubAccountListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.PickupAtHubAccountListAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PickupAtHubAccountListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PickupAtHubAccountListOperationCompleted Is Nothing) Then
                Me.PickupAtHubAccountListOperationCompleted = AddressOf Me.OnPickupAtHubAccountListOperationCompleted
            End If
            Me.InvokeAsync("PickupAtHubAccountList", New Object() {AppName, AppVersion, Hub, Param}, Me.PickupAtHubAccountListOperationCompleted, userState)
        End Sub
        
        Private Sub OnPickupAtHubAccountListOperationCompleted(ByVal arg As Object)
            If (Not (Me.PickupAtHubAccountListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PickupAtHubAccountListCompleted(Me, New PickupAtHubAccountListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HubToHubAccountList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HubToHubAccountList(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("HubToHubAccountList", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub HubToHubAccountListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.HubToHubAccountListAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HubToHubAccountListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.HubToHubAccountListOperationCompleted Is Nothing) Then
                Me.HubToHubAccountListOperationCompleted = AddressOf Me.OnHubToHubAccountListOperationCompleted
            End If
            Me.InvokeAsync("HubToHubAccountList", New Object() {AppName, AppVersion, Hub, Param}, Me.HubToHubAccountListOperationCompleted, userState)
        End Sub
        
        Private Sub OnHubToHubAccountListOperationCompleted(ByVal arg As Object)
            If (Not (Me.HubToHubAccountListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HubToHubAccountListCompleted(Me, New HubToHubAccountListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WHIListHubToHub", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WHIListHubToHub(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WHIListHubToHub", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WHIListHubToHubAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.WHIListHubToHubAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WHIListHubToHubAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WHIListHubToHubOperationCompleted Is Nothing) Then
                Me.WHIListHubToHubOperationCompleted = AddressOf Me.OnWHIListHubToHubOperationCompleted
            End If
            Me.InvokeAsync("WHIListHubToHub", New Object() {AppName, AppVersion, Hub, Param}, Me.WHIListHubToHubOperationCompleted, userState)
        End Sub
        
        Private Sub OnWHIListHubToHubOperationCompleted(ByVal arg As Object)
            If (Not (Me.WHIListHubToHubCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WHIListHubToHubCompleted(Me, New WHIListHubToHubCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WHOListHubToHub", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WHOListHubToHub(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WHOListHubToHub", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WHOListHubToHubAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.WHOListHubToHubAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WHOListHubToHubAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WHOListHubToHubOperationCompleted Is Nothing) Then
                Me.WHOListHubToHubOperationCompleted = AddressOf Me.OnWHOListHubToHubOperationCompleted
            End If
            Me.InvokeAsync("WHOListHubToHub", New Object() {AppName, AppVersion, Hub, Param}, Me.WHOListHubToHubOperationCompleted, userState)
        End Sub
        
        Private Sub OnWHOListHubToHubOperationCompleted(ByVal arg As Object)
            If (Not (Me.WHOListHubToHubCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WHOListHubToHubCompleted(Me, New WHOListHubToHubCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckDstHUB", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckDstHUB(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("CheckDstHUB", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckDstHUBAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.CheckDstHUBAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckDstHUBAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.CheckDstHUBOperationCompleted Is Nothing) Then
                Me.CheckDstHUBOperationCompleted = AddressOf Me.OnCheckDstHUBOperationCompleted
            End If
            Me.InvokeAsync("CheckDstHUB", New Object() {AppName, AppVersion, Hub, Param}, Me.CheckDstHUBOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckDstHUBOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckDstHUBCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckDstHUBCompleted(Me, New CheckDstHUBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WHOListHubToCustomer", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WHOListHubToCustomer(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WHOListHubToCustomer", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WHOListHubToCustomerAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.WHOListHubToCustomerAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WHOListHubToCustomerAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WHOListHubToCustomerOperationCompleted Is Nothing) Then
                Me.WHOListHubToCustomerOperationCompleted = AddressOf Me.OnWHOListHubToCustomerOperationCompleted
            End If
            Me.InvokeAsync("WHOListHubToCustomer", New Object() {AppName, AppVersion, Hub, Param}, Me.WHOListHubToCustomerOperationCompleted, userState)
        End Sub
        
        Private Sub OnWHOListHubToCustomerOperationCompleted(ByVal arg As Object)
            If (Not (Me.WHOListHubToCustomerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WHOListHubToCustomerCompleted(Me, New WHOListHubToCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSuratJalanByDriverID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSuratJalanByDriverID(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetSuratJalanByDriverID", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSuratJalanByDriverIDAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetSuratJalanByDriverIDAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSuratJalanByDriverIDAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetSuratJalanByDriverIDOperationCompleted Is Nothing) Then
                Me.GetSuratJalanByDriverIDOperationCompleted = AddressOf Me.OnGetSuratJalanByDriverIDOperationCompleted
            End If
            Me.InvokeAsync("GetSuratJalanByDriverID", New Object() {AppName, AppVersion, Param}, Me.GetSuratJalanByDriverIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSuratJalanByDriverIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSuratJalanByDriverIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSuratJalanByDriverIDCompleted(Me, New GetSuratJalanByDriverIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSuratJalanDetailByDriverID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSuratJalanDetailByDriverID(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetSuratJalanDetailByDriverID", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSuratJalanDetailByDriverIDAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetSuratJalanDetailByDriverIDAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSuratJalanDetailByDriverIDAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetSuratJalanDetailByDriverIDOperationCompleted Is Nothing) Then
                Me.GetSuratJalanDetailByDriverIDOperationCompleted = AddressOf Me.OnGetSuratJalanDetailByDriverIDOperationCompleted
            End If
            Me.InvokeAsync("GetSuratJalanDetailByDriverID", New Object() {AppName, AppVersion, Param}, Me.GetSuratJalanDetailByDriverIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSuratJalanDetailByDriverIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSuratJalanDetailByDriverIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSuratJalanDetailByDriverIDCompleted(Me, New GetSuratJalanDetailByDriverIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSuratJalanByDriverIDWithDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSuratJalanByDriverIDWithDetail(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetSuratJalanByDriverIDWithDetail", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSuratJalanByDriverIDWithDetailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetSuratJalanByDriverIDWithDetailAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSuratJalanByDriverIDWithDetailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetSuratJalanByDriverIDWithDetailOperationCompleted Is Nothing) Then
                Me.GetSuratJalanByDriverIDWithDetailOperationCompleted = AddressOf Me.OnGetSuratJalanByDriverIDWithDetailOperationCompleted
            End If
            Me.InvokeAsync("GetSuratJalanByDriverIDWithDetail", New Object() {AppName, AppVersion, Param}, Me.GetSuratJalanByDriverIDWithDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSuratJalanByDriverIDWithDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSuratJalanByDriverIDWithDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSuratJalanByDriverIDWithDetailCompleted(Me, New GetSuratJalanByDriverIDWithDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CourierHandOverGetList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CourierHandOverGetList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("CourierHandOverGetList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CourierHandOverGetListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.CourierHandOverGetListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CourierHandOverGetListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.CourierHandOverGetListOperationCompleted Is Nothing) Then
                Me.CourierHandOverGetListOperationCompleted = AddressOf Me.OnCourierHandOverGetListOperationCompleted
            End If
            Me.InvokeAsync("CourierHandOverGetList", New Object() {AppName, AppVersion, Param}, Me.CourierHandOverGetListOperationCompleted, userState)
        End Sub
        
        Private Sub OnCourierHandOverGetListOperationCompleted(ByVal arg As Object)
            If (Not (Me.CourierHandOverGetListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CourierHandOverGetListCompleted(Me, New CourierHandOverGetListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CourierHandOverProcess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CourierHandOverProcess(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("CourierHandOverProcess", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CourierHandOverProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.CourierHandOverProcessAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CourierHandOverProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.CourierHandOverProcessOperationCompleted Is Nothing) Then
                Me.CourierHandOverProcessOperationCompleted = AddressOf Me.OnCourierHandOverProcessOperationCompleted
            End If
            Me.InvokeAsync("CourierHandOverProcess", New Object() {AppName, AppVersion, Param}, Me.CourierHandOverProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnCourierHandOverProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.CourierHandOverProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CourierHandOverProcessCompleted(Me, New CourierHandOverProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLokerList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLokerList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetLokerList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLokerListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetLokerListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLokerListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetLokerListOperationCompleted Is Nothing) Then
                Me.GetLokerListOperationCompleted = AddressOf Me.OnGetLokerListOperationCompleted
            End If
            Me.InvokeAsync("GetLokerList", New Object() {AppName, AppVersion, Param}, Me.GetLokerListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLokerListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLokerListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLokerListCompleted(Me, New GetLokerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAwbInLokerList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAwbInLokerList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAwbInLokerList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAwbInLokerListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetAwbInLokerListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAwbInLokerListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAwbInLokerListOperationCompleted Is Nothing) Then
                Me.GetAwbInLokerListOperationCompleted = AddressOf Me.OnGetAwbInLokerListOperationCompleted
            End If
            Me.InvokeAsync("GetAwbInLokerList", New Object() {AppName, AppVersion, Param}, Me.GetAwbInLokerListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAwbInLokerListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAwbInLokerListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAwbInLokerListCompleted(Me, New GetAwbInLokerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WHOListInstantPickup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WHOListInstantPickup(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WHOListInstantPickup", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WHOListInstantPickupAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.WHOListInstantPickupAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WHOListInstantPickupAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WHOListInstantPickupOperationCompleted Is Nothing) Then
                Me.WHOListInstantPickupOperationCompleted = AddressOf Me.OnWHOListInstantPickupOperationCompleted
            End If
            Me.InvokeAsync("WHOListInstantPickup", New Object() {AppName, AppVersion, Hub, Param}, Me.WHOListInstantPickupOperationCompleted, userState)
        End Sub
        
        Private Sub OnWHOListInstantPickupOperationCompleted(ByVal arg As Object)
            If (Not (Me.WHOListInstantPickupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WHOListInstantPickupCompleted(Me, New WHOListInstantPickupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InstantPickupReturList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InstantPickupReturList(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("InstantPickupReturList", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub InstantPickupReturListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.InstantPickupReturListAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InstantPickupReturListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.InstantPickupReturListOperationCompleted Is Nothing) Then
                Me.InstantPickupReturListOperationCompleted = AddressOf Me.OnInstantPickupReturListOperationCompleted
            End If
            Me.InvokeAsync("InstantPickupReturList", New Object() {AppName, AppVersion, Hub, Param}, Me.InstantPickupReturListOperationCompleted, userState)
        End Sub
        
        Private Sub OnInstantPickupReturListOperationCompleted(ByVal arg As Object)
            If (Not (Me.InstantPickupReturListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InstantPickupReturListCompleted(Me, New InstantPickupReturListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InstantPickupReturProcess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InstantPickupReturProcess(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("InstantPickupReturProcess", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub InstantPickupReturProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.InstantPickupReturProcessAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InstantPickupReturProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.InstantPickupReturProcessOperationCompleted Is Nothing) Then
                Me.InstantPickupReturProcessOperationCompleted = AddressOf Me.OnInstantPickupReturProcessOperationCompleted
            End If
            Me.InvokeAsync("InstantPickupReturProcess", New Object() {AppName, AppVersion, Station, Param}, Me.InstantPickupReturProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnInstantPickupReturProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.InstantPickupReturProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InstantPickupReturProcessCompleted(Me, New InstantPickupReturProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDaftarJemputByDriverID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDaftarJemputByDriverID(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetDaftarJemputByDriverID", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDaftarJemputByDriverIDAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetDaftarJemputByDriverIDAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDaftarJemputByDriverIDAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetDaftarJemputByDriverIDOperationCompleted Is Nothing) Then
                Me.GetDaftarJemputByDriverIDOperationCompleted = AddressOf Me.OnGetDaftarJemputByDriverIDOperationCompleted
            End If
            Me.InvokeAsync("GetDaftarJemputByDriverID", New Object() {AppName, AppVersion, Param}, Me.GetDaftarJemputByDriverIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDaftarJemputByDriverIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDaftarJemputByDriverIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDaftarJemputByDriverIDCompleted(Me, New GetDaftarJemputByDriverIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDaftarJemputDetailByDriverID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDaftarJemputDetailByDriverID(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetDaftarJemputDetailByDriverID", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDaftarJemputDetailByDriverIDAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetDaftarJemputDetailByDriverIDAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDaftarJemputDetailByDriverIDAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetDaftarJemputDetailByDriverIDOperationCompleted Is Nothing) Then
                Me.GetDaftarJemputDetailByDriverIDOperationCompleted = AddressOf Me.OnGetDaftarJemputDetailByDriverIDOperationCompleted
            End If
            Me.InvokeAsync("GetDaftarJemputDetailByDriverID", New Object() {AppName, AppVersion, Param}, Me.GetDaftarJemputDetailByDriverIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDaftarJemputDetailByDriverIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDaftarJemputDetailByDriverIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDaftarJemputDetailByDriverIDCompleted(Me, New GetDaftarJemputDetailByDriverIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDaftarJemputByDriverIDWithDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDaftarJemputByDriverIDWithDetail(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetDaftarJemputByDriverIDWithDetail", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDaftarJemputByDriverIDWithDetailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetDaftarJemputByDriverIDWithDetailAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDaftarJemputByDriverIDWithDetailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetDaftarJemputByDriverIDWithDetailOperationCompleted Is Nothing) Then
                Me.GetDaftarJemputByDriverIDWithDetailOperationCompleted = AddressOf Me.OnGetDaftarJemputByDriverIDWithDetailOperationCompleted
            End If
            Me.InvokeAsync("GetDaftarJemputByDriverIDWithDetail", New Object() {AppName, AppVersion, Param}, Me.GetDaftarJemputByDriverIDWithDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDaftarJemputByDriverIDWithDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDaftarJemputByDriverIDWithDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDaftarJemputByDriverIDWithDetailCompleted(Me, New GetDaftarJemputByDriverIDWithDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDaftarBatalJemputByDriverID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDaftarBatalJemputByDriverID(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetDaftarBatalJemputByDriverID", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDaftarBatalJemputByDriverIDAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetDaftarBatalJemputByDriverIDAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDaftarBatalJemputByDriverIDAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetDaftarBatalJemputByDriverIDOperationCompleted Is Nothing) Then
                Me.GetDaftarBatalJemputByDriverIDOperationCompleted = AddressOf Me.OnGetDaftarBatalJemputByDriverIDOperationCompleted
            End If
            Me.InvokeAsync("GetDaftarBatalJemputByDriverID", New Object() {AppName, AppVersion, Param}, Me.GetDaftarBatalJemputByDriverIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDaftarBatalJemputByDriverIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDaftarBatalJemputByDriverIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDaftarBatalJemputByDriverIDCompleted(Me, New GetDaftarBatalJemputByDriverIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDaftarBatalJemputDetailByDriverID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDaftarBatalJemputDetailByDriverID(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetDaftarBatalJemputDetailByDriverID", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDaftarBatalJemputDetailByDriverIDAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetDaftarBatalJemputDetailByDriverIDAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDaftarBatalJemputDetailByDriverIDAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetDaftarBatalJemputDetailByDriverIDOperationCompleted Is Nothing) Then
                Me.GetDaftarBatalJemputDetailByDriverIDOperationCompleted = AddressOf Me.OnGetDaftarBatalJemputDetailByDriverIDOperationCompleted
            End If
            Me.InvokeAsync("GetDaftarBatalJemputDetailByDriverID", New Object() {AppName, AppVersion, Param}, Me.GetDaftarBatalJemputDetailByDriverIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDaftarBatalJemputDetailByDriverIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDaftarBatalJemputDetailByDriverIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDaftarBatalJemputDetailByDriverIDCompleted(Me, New GetDaftarBatalJemputDetailByDriverIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDaftarBatalJemputByDriverIDWithDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDaftarBatalJemputByDriverIDWithDetail(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetDaftarBatalJemputByDriverIDWithDetail", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDaftarBatalJemputByDriverIDWithDetailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetDaftarBatalJemputByDriverIDWithDetailAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDaftarBatalJemputByDriverIDWithDetailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetDaftarBatalJemputByDriverIDWithDetailOperationCompleted Is Nothing) Then
                Me.GetDaftarBatalJemputByDriverIDWithDetailOperationCompleted = AddressOf Me.OnGetDaftarBatalJemputByDriverIDWithDetailOperationCompleted
            End If
            Me.InvokeAsync("GetDaftarBatalJemputByDriverIDWithDetail", New Object() {AppName, AppVersion, Param}, Me.GetDaftarBatalJemputByDriverIDWithDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDaftarBatalJemputByDriverIDWithDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDaftarBatalJemputByDriverIDWithDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDaftarBatalJemputByDriverIDWithDetailCompleted(Me, New GetDaftarBatalJemputByDriverIDWithDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetAccountAutoOrderThirdParty", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetAccountAutoOrderThirdParty(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SetAccountAutoOrderThirdParty", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetAccountAutoOrderThirdPartyAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SetAccountAutoOrderThirdPartyAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetAccountAutoOrderThirdPartyAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SetAccountAutoOrderThirdPartyOperationCompleted Is Nothing) Then
                Me.SetAccountAutoOrderThirdPartyOperationCompleted = AddressOf Me.OnSetAccountAutoOrderThirdPartyOperationCompleted
            End If
            Me.InvokeAsync("SetAccountAutoOrderThirdParty", New Object() {AppName, AppVersion, Param}, Me.SetAccountAutoOrderThirdPartyOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetAccountAutoOrderThirdPartyOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetAccountAutoOrderThirdPartyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetAccountAutoOrderThirdPartyCompleted(Me, New SetAccountAutoOrderThirdPartyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDaftarSamedayJemputByDriverIDWithDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDaftarSamedayJemputByDriverIDWithDetail(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetDaftarSamedayJemputByDriverIDWithDetail", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDaftarSamedayJemputByDriverIDWithDetailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetDaftarSamedayJemputByDriverIDWithDetailAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDaftarSamedayJemputByDriverIDWithDetailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetDaftarSamedayJemputByDriverIDWithDetailOperationCompleted Is Nothing) Then
                Me.GetDaftarSamedayJemputByDriverIDWithDetailOperationCompleted = AddressOf Me.OnGetDaftarSamedayJemputByDriverIDWithDetailOperationCompleted
            End If
            Me.InvokeAsync("GetDaftarSamedayJemputByDriverIDWithDetail", New Object() {AppName, AppVersion, Param}, Me.GetDaftarSamedayJemputByDriverIDWithDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDaftarSamedayJemputByDriverIDWithDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDaftarSamedayJemputByDriverIDWithDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDaftarSamedayJemputByDriverIDWithDetailCompleted(Me, New GetDaftarSamedayJemputByDriverIDWithDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateReasonReturToDoor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateReasonReturToDoor(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateReasonReturToDoor", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateReasonReturToDoorAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.UpdateReasonReturToDoorAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateReasonReturToDoorAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateReasonReturToDoorOperationCompleted Is Nothing) Then
                Me.UpdateReasonReturToDoorOperationCompleted = AddressOf Me.OnUpdateReasonReturToDoorOperationCompleted
            End If
            Me.InvokeAsync("UpdateReasonReturToDoor", New Object() {AppName, AppVersion, Hub, Param}, Me.UpdateReasonReturToDoorOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateReasonReturToDoorOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateReasonReturToDoorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateReasonReturToDoorCompleted(Me, New UpdateReasonReturToDoorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WHIRTSList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WHIRTSList(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WHIRTSList", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WHIRTSListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.WHIRTSListAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WHIRTSListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WHIRTSListOperationCompleted Is Nothing) Then
                Me.WHIRTSListOperationCompleted = AddressOf Me.OnWHIRTSListOperationCompleted
            End If
            Me.InvokeAsync("WHIRTSList", New Object() {AppName, AppVersion, Hub, Param}, Me.WHIRTSListOperationCompleted, userState)
        End Sub
        
        Private Sub OnWHIRTSListOperationCompleted(ByVal arg As Object)
            If (Not (Me.WHIRTSListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WHIRTSListCompleted(Me, New WHIRTSListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WHIGroupingList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WHIGroupingList(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WHIGroupingList", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WHIGroupingListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.WHIGroupingListAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WHIGroupingListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WHIGroupingListOperationCompleted Is Nothing) Then
                Me.WHIGroupingListOperationCompleted = AddressOf Me.OnWHIGroupingListOperationCompleted
            End If
            Me.InvokeAsync("WHIGroupingList", New Object() {AppName, AppVersion, Hub, Param}, Me.WHIGroupingListOperationCompleted, userState)
        End Sub
        
        Private Sub OnWHIGroupingListOperationCompleted(ByVal arg As Object)
            If (Not (Me.WHIGroupingListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WHIGroupingListCompleted(Me, New WHIGroupingListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WHIGroupingProcess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WHIGroupingProcess(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WHIGroupingProcess", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WHIGroupingProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.WHIGroupingProcessAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WHIGroupingProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WHIGroupingProcessOperationCompleted Is Nothing) Then
                Me.WHIGroupingProcessOperationCompleted = AddressOf Me.OnWHIGroupingProcessOperationCompleted
            End If
            Me.InvokeAsync("WHIGroupingProcess", New Object() {AppName, AppVersion, Hub, Param}, Me.WHIGroupingProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnWHIGroupingProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.WHIGroupingProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WHIGroupingProcessCompleted(Me, New WHIGroupingProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WHIListExpSJ", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WHIListExpSJ(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WHIListExpSJ", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WHIListExpSJAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.WHIListExpSJAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WHIListExpSJAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WHIListExpSJOperationCompleted Is Nothing) Then
                Me.WHIListExpSJOperationCompleted = AddressOf Me.OnWHIListExpSJOperationCompleted
            End If
            Me.InvokeAsync("WHIListExpSJ", New Object() {AppName, AppVersion, Hub, Param}, Me.WHIListExpSJOperationCompleted, userState)
        End Sub
        
        Private Sub OnWHIListExpSJOperationCompleted(ByVal arg As Object)
            If (Not (Me.WHIListExpSJCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WHIListExpSJCompleted(Me, New WHIListExpSJCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WHIListExpDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WHIListExpDetail(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WHIListExpDetail", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WHIListExpDetailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.WHIListExpDetailAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WHIListExpDetailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WHIListExpDetailOperationCompleted Is Nothing) Then
                Me.WHIListExpDetailOperationCompleted = AddressOf Me.OnWHIListExpDetailOperationCompleted
            End If
            Me.InvokeAsync("WHIListExpDetail", New Object() {AppName, AppVersion, Hub, Param}, Me.WHIListExpDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnWHIListExpDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.WHIListExpDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WHIListExpDetailCompleted(Me, New WHIListExpDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WHIListByDCPickupNo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WHIListByDCPickupNo(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WHIListByDCPickupNo", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WHIListByDCPickupNoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.WHIListByDCPickupNoAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WHIListByDCPickupNoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WHIListByDCPickupNoOperationCompleted Is Nothing) Then
                Me.WHIListByDCPickupNoOperationCompleted = AddressOf Me.OnWHIListByDCPickupNoOperationCompleted
            End If
            Me.InvokeAsync("WHIListByDCPickupNo", New Object() {AppName, AppVersion, Hub, Param}, Me.WHIListByDCPickupNoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWHIListByDCPickupNoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WHIListByDCPickupNoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WHIListByDCPickupNoCompleted(Me, New WHIListByDCPickupNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DCRequestGetNextPickupNoSample", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DCRequestGetNextPickupNoSample(ByVal AppName As String, ByVal AppVersion As String, ByVal DCCode As String) As Object()
            Dim results() As Object = Me.Invoke("DCRequestGetNextPickupNoSample", New Object() {AppName, AppVersion, DCCode})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DCRequestGetNextPickupNoSampleAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal DCCode As String)
            Me.DCRequestGetNextPickupNoSampleAsync(AppName, AppVersion, DCCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DCRequestGetNextPickupNoSampleAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal DCCode As String, ByVal userState As Object)
            If (Me.DCRequestGetNextPickupNoSampleOperationCompleted Is Nothing) Then
                Me.DCRequestGetNextPickupNoSampleOperationCompleted = AddressOf Me.OnDCRequestGetNextPickupNoSampleOperationCompleted
            End If
            Me.InvokeAsync("DCRequestGetNextPickupNoSample", New Object() {AppName, AppVersion, DCCode}, Me.DCRequestGetNextPickupNoSampleOperationCompleted, userState)
        End Sub
        
        Private Sub OnDCRequestGetNextPickupNoSampleOperationCompleted(ByVal arg As Object)
            If (Not (Me.DCRequestGetNextPickupNoSampleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DCRequestGetNextPickupNoSampleCompleted(Me, New DCRequestGetNextPickupNoSampleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DCPickingNew", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DCPickingNew(ByVal AppName As String, ByVal AppVersion As String, ByVal DCCode As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DCPickingNew", New Object() {AppName, AppVersion, DCCode, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DCPickingNewAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal DCCode As String, ByVal Param() As Object)
            Me.DCPickingNewAsync(AppName, AppVersion, DCCode, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DCPickingNewAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal DCCode As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DCPickingNewOperationCompleted Is Nothing) Then
                Me.DCPickingNewOperationCompleted = AddressOf Me.OnDCPickingNewOperationCompleted
            End If
            Me.InvokeAsync("DCPickingNew", New Object() {AppName, AppVersion, DCCode, Param}, Me.DCPickingNewOperationCompleted, userState)
        End Sub
        
        Private Sub OnDCPickingNewOperationCompleted(ByVal arg As Object)
            If (Not (Me.DCPickingNewCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DCPickingNewCompleted(Me, New DCPickingNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DCPickingDraft", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DCPickingDraft(ByVal AppName As String, ByVal AppVersion As String, ByVal DCCode As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DCPickingDraft", New Object() {AppName, AppVersion, DCCode, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DCPickingDraftAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal DCCode As String, ByVal Param() As Object)
            Me.DCPickingDraftAsync(AppName, AppVersion, DCCode, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DCPickingDraftAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal DCCode As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DCPickingDraftOperationCompleted Is Nothing) Then
                Me.DCPickingDraftOperationCompleted = AddressOf Me.OnDCPickingDraftOperationCompleted
            End If
            Me.InvokeAsync("DCPickingDraft", New Object() {AppName, AppVersion, DCCode, Param}, Me.DCPickingDraftOperationCompleted, userState)
        End Sub
        
        Private Sub OnDCPickingDraftOperationCompleted(ByVal arg As Object)
            If (Not (Me.DCPickingDraftCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DCPickingDraftCompleted(Me, New DCPickingDraftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DCPickingFinal", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DCPickingFinal(ByVal AppName As String, ByVal AppVersion As String, ByVal DCCode As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DCPickingFinal", New Object() {AppName, AppVersion, DCCode, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DCPickingFinalAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal DCCode As String, ByVal Param() As Object)
            Me.DCPickingFinalAsync(AppName, AppVersion, DCCode, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DCPickingFinalAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal DCCode As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DCPickingFinalOperationCompleted Is Nothing) Then
                Me.DCPickingFinalOperationCompleted = AddressOf Me.OnDCPickingFinalOperationCompleted
            End If
            Me.InvokeAsync("DCPickingFinal", New Object() {AppName, AppVersion, DCCode, Param}, Me.DCPickingFinalOperationCompleted, userState)
        End Sub
        
        Private Sub OnDCPickingFinalOperationCompleted(ByVal arg As Object)
            If (Not (Me.DCPickingFinalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DCPickingFinalCompleted(Me, New DCPickingFinalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DCPickingRoti", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DCPickingRoti(ByVal AppName As String, ByVal AppVersion As String, ByVal DCCode As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DCPickingRoti", New Object() {AppName, AppVersion, DCCode, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DCPickingRotiAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal DCCode As String, ByVal Param() As Object)
            Me.DCPickingRotiAsync(AppName, AppVersion, DCCode, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DCPickingRotiAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal DCCode As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DCPickingRotiOperationCompleted Is Nothing) Then
                Me.DCPickingRotiOperationCompleted = AddressOf Me.OnDCPickingRotiOperationCompleted
            End If
            Me.InvokeAsync("DCPickingRoti", New Object() {AppName, AppVersion, DCCode, Param}, Me.DCPickingRotiOperationCompleted, userState)
        End Sub
        
        Private Sub OnDCPickingRotiOperationCompleted(ByVal arg As Object)
            If (Not (Me.DCPickingRotiCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DCPickingRotiCompleted(Me, New DCPickingRotiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRackInStoreList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRackInStoreList(ByVal AppName As String, ByVal AppVersion As String, ByVal DCCode As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetRackInStoreList", New Object() {AppName, AppVersion, DCCode, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRackInStoreListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal DCCode As String, ByVal Param() As Object)
            Me.GetRackInStoreListAsync(AppName, AppVersion, DCCode, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRackInStoreListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal DCCode As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetRackInStoreListOperationCompleted Is Nothing) Then
                Me.GetRackInStoreListOperationCompleted = AddressOf Me.OnGetRackInStoreListOperationCompleted
            End If
            Me.InvokeAsync("GetRackInStoreList", New Object() {AppName, AppVersion, DCCode, Param}, Me.GetRackInStoreListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRackInStoreListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRackInStoreListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRackInStoreListCompleted(Me, New GetRackInStoreListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DCPickingManual", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DCPickingManual(ByVal AppName As String, ByVal AppVersion As String, ByVal DCCode As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DCPickingManual", New Object() {AppName, AppVersion, DCCode, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DCPickingManualAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal DCCode As String, ByVal Param() As Object)
            Me.DCPickingManualAsync(AppName, AppVersion, DCCode, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DCPickingManualAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal DCCode As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DCPickingManualOperationCompleted Is Nothing) Then
                Me.DCPickingManualOperationCompleted = AddressOf Me.OnDCPickingManualOperationCompleted
            End If
            Me.InvokeAsync("DCPickingManual", New Object() {AppName, AppVersion, DCCode, Param}, Me.DCPickingManualOperationCompleted, userState)
        End Sub
        
        Private Sub OnDCPickingManualOperationCompleted(ByVal arg As Object)
            If (Not (Me.DCPickingManualCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DCPickingManualCompleted(Me, New DCPickingManualCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RTSCreate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RTSCreate()
            Me.Invoke("RTSCreate", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RTSCreateAsync()
            Me.RTSCreateAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RTSCreateAsync(ByVal userState As Object)
            If (Me.RTSCreateOperationCompleted Is Nothing) Then
                Me.RTSCreateOperationCompleted = AddressOf Me.OnRTSCreateOperationCompleted
            End If
            Me.InvokeAsync("RTSCreate", New Object(-1) {}, Me.RTSCreateOperationCompleted, userState)
        End Sub
        
        Private Sub OnRTSCreateOperationCompleted(ByVal arg As Object)
            If (Not (Me.RTSCreateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RTSCreateCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RTSEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RTSEmail()
            Me.Invoke("RTSEmail", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RTSEmailAsync()
            Me.RTSEmailAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RTSEmailAsync(ByVal userState As Object)
            If (Me.RTSEmailOperationCompleted Is Nothing) Then
                Me.RTSEmailOperationCompleted = AddressOf Me.OnRTSEmailOperationCompleted
            End If
            Me.InvokeAsync("RTSEmail", New Object(-1) {}, Me.RTSEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnRTSEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.RTSEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RTSEmailCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RTSShEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RTSShEmail()
            Me.Invoke("RTSShEmail", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RTSShEmailAsync()
            Me.RTSShEmailAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RTSShEmailAsync(ByVal userState As Object)
            If (Me.RTSShEmailOperationCompleted Is Nothing) Then
                Me.RTSShEmailOperationCompleted = AddressOf Me.OnRTSShEmailOperationCompleted
            End If
            Me.InvokeAsync("RTSShEmail", New Object(-1) {}, Me.RTSShEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnRTSShEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.RTSShEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RTSShEmailCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHubDeliveryListForRTS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetHubDeliveryListForRTS(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetHubDeliveryListForRTS", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetHubDeliveryListForRTSAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetHubDeliveryListForRTSAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetHubDeliveryListForRTSAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetHubDeliveryListForRTSOperationCompleted Is Nothing) Then
                Me.GetHubDeliveryListForRTSOperationCompleted = AddressOf Me.OnGetHubDeliveryListForRTSOperationCompleted
            End If
            Me.InvokeAsync("GetHubDeliveryListForRTS", New Object() {AppName, AppVersion, Param}, Me.GetHubDeliveryListForRTSOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetHubDeliveryListForRTSOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetHubDeliveryListForRTSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetHubDeliveryListForRTSCompleted(Me, New GetHubDeliveryListForRTSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CannotDopOnRtsDate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CannotDopOnRtsDate()
            Me.Invoke("CannotDopOnRtsDate", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CannotDopOnRtsDateAsync()
            Me.CannotDopOnRtsDateAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CannotDopOnRtsDateAsync(ByVal userState As Object)
            If (Me.CannotDopOnRtsDateOperationCompleted Is Nothing) Then
                Me.CannotDopOnRtsDateOperationCompleted = AddressOf Me.OnCannotDopOnRtsDateOperationCompleted
            End If
            Me.InvokeAsync("CannotDopOnRtsDate", New Object(-1) {}, Me.CannotDopOnRtsDateOperationCompleted, userState)
        End Sub
        
        Private Sub OnCannotDopOnRtsDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.CannotDopOnRtsDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CannotDopOnRtsDateCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SRRCreate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SRRCreate()
            Me.Invoke("SRRCreate", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SRRCreateAsync()
            Me.SRRCreateAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SRRCreateAsync(ByVal userState As Object)
            If (Me.SRRCreateOperationCompleted Is Nothing) Then
                Me.SRRCreateOperationCompleted = AddressOf Me.OnSRRCreateOperationCompleted
            End If
            Me.InvokeAsync("SRRCreate", New Object(-1) {}, Me.SRRCreateOperationCompleted, userState)
        End Sub
        
        Private Sub OnSRRCreateOperationCompleted(ByVal arg As Object)
            If (Not (Me.SRRCreateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SRRCreateCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SRREmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SRREmail()
            Me.Invoke("SRREmail", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SRREmailAsync()
            Me.SRREmailAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SRREmailAsync(ByVal userState As Object)
            If (Me.SRREmailOperationCompleted Is Nothing) Then
                Me.SRREmailOperationCompleted = AddressOf Me.OnSRREmailOperationCompleted
            End If
            Me.InvokeAsync("SRREmail", New Object(-1) {}, Me.SRREmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnSRREmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.SRREmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SRREmailCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SRRShEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SRRShEmail()
            Me.Invoke("SRRShEmail", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SRRShEmailAsync()
            Me.SRRShEmailAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SRRShEmailAsync(ByVal userState As Object)
            If (Me.SRRShEmailOperationCompleted Is Nothing) Then
                Me.SRRShEmailOperationCompleted = AddressOf Me.OnSRRShEmailOperationCompleted
            End If
            Me.InvokeAsync("SRRShEmail", New Object(-1) {}, Me.SRRShEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnSRRShEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.SRRShEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SRRShEmailCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StationGroupingList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function StationGroupingList(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("StationGroupingList", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub StationGroupingListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.StationGroupingListAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StationGroupingListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.StationGroupingListOperationCompleted Is Nothing) Then
                Me.StationGroupingListOperationCompleted = AddressOf Me.OnStationGroupingListOperationCompleted
            End If
            Me.InvokeAsync("StationGroupingList", New Object() {AppName, AppVersion, Station, Param}, Me.StationGroupingListOperationCompleted, userState)
        End Sub
        
        Private Sub OnStationGroupingListOperationCompleted(ByVal arg As Object)
            If (Not (Me.StationGroupingListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StationGroupingListCompleted(Me, New StationGroupingListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StationGroupingConsNew", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function StationGroupingConsNew(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("StationGroupingConsNew", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub StationGroupingConsNewAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.StationGroupingConsNewAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StationGroupingConsNewAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.StationGroupingConsNewOperationCompleted Is Nothing) Then
                Me.StationGroupingConsNewOperationCompleted = AddressOf Me.OnStationGroupingConsNewOperationCompleted
            End If
            Me.InvokeAsync("StationGroupingConsNew", New Object() {AppName, AppVersion, Station, Param}, Me.StationGroupingConsNewOperationCompleted, userState)
        End Sub
        
        Private Sub OnStationGroupingConsNewOperationCompleted(ByVal arg As Object)
            If (Not (Me.StationGroupingConsNewCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StationGroupingConsNewCompleted(Me, New StationGroupingConsNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StationGroupingDetailList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function StationGroupingDetailList(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("StationGroupingDetailList", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub StationGroupingDetailListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.StationGroupingDetailListAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StationGroupingDetailListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.StationGroupingDetailListOperationCompleted Is Nothing) Then
                Me.StationGroupingDetailListOperationCompleted = AddressOf Me.OnStationGroupingDetailListOperationCompleted
            End If
            Me.InvokeAsync("StationGroupingDetailList", New Object() {AppName, AppVersion, Station, Param}, Me.StationGroupingDetailListOperationCompleted, userState)
        End Sub
        
        Private Sub OnStationGroupingDetailListOperationCompleted(ByVal arg As Object)
            If (Not (Me.StationGroupingDetailListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StationGroupingDetailListCompleted(Me, New StationGroupingDetailListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StationGroupingConsUpdate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function StationGroupingConsUpdate(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("StationGroupingConsUpdate", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub StationGroupingConsUpdateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.StationGroupingConsUpdateAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StationGroupingConsUpdateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.StationGroupingConsUpdateOperationCompleted Is Nothing) Then
                Me.StationGroupingConsUpdateOperationCompleted = AddressOf Me.OnStationGroupingConsUpdateOperationCompleted
            End If
            Me.InvokeAsync("StationGroupingConsUpdate", New Object() {AppName, AppVersion, Station, Param}, Me.StationGroupingConsUpdateOperationCompleted, userState)
        End Sub
        
        Private Sub OnStationGroupingConsUpdateOperationCompleted(ByVal arg As Object)
            If (Not (Me.StationGroupingConsUpdateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StationGroupingConsUpdateCompleted(Me, New StationGroupingConsUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StationGroupingConsProcess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function StationGroupingConsProcess(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("StationGroupingConsProcess", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub StationGroupingConsProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.StationGroupingConsProcessAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub StationGroupingConsProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.StationGroupingConsProcessOperationCompleted Is Nothing) Then
                Me.StationGroupingConsProcessOperationCompleted = AddressOf Me.OnStationGroupingConsProcessOperationCompleted
            End If
            Me.InvokeAsync("StationGroupingConsProcess", New Object() {AppName, AppVersion, Station, Param}, Me.StationGroupingConsProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnStationGroupingConsProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.StationGroupingConsProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent StationGroupingConsProcessCompleted(Me, New StationGroupingConsProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DispatchListHub", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DispatchListHub(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DispatchListHub", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DispatchListHubAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.DispatchListHubAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DispatchListHubAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DispatchListHubOperationCompleted Is Nothing) Then
                Me.DispatchListHubOperationCompleted = AddressOf Me.OnDispatchListHubOperationCompleted
            End If
            Me.InvokeAsync("DispatchListHub", New Object() {AppName, AppVersion, Hub, Param}, Me.DispatchListHubOperationCompleted, userState)
        End Sub
        
        Private Sub OnDispatchListHubOperationCompleted(ByVal arg As Object)
            If (Not (Me.DispatchListHubCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DispatchListHubCompleted(Me, New DispatchListHubCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DispatchProcessHub", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DispatchProcessHub(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DispatchProcessHub", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DispatchProcessHubAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.DispatchProcessHubAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DispatchProcessHubAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DispatchProcessHubOperationCompleted Is Nothing) Then
                Me.DispatchProcessHubOperationCompleted = AddressOf Me.OnDispatchProcessHubOperationCompleted
            End If
            Me.InvokeAsync("DispatchProcessHub", New Object() {AppName, AppVersion, Hub, Param}, Me.DispatchProcessHubOperationCompleted, userState)
        End Sub
        
        Private Sub OnDispatchProcessHubOperationCompleted(ByVal arg As Object)
            If (Not (Me.DispatchProcessHubCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DispatchProcessHubCompleted(Me, New DispatchProcessHubCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DispatchPrintSJHub", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DispatchPrintSJHub(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DispatchPrintSJHub", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DispatchPrintSJHubAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.DispatchPrintSJHubAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DispatchPrintSJHubAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DispatchPrintSJHubOperationCompleted Is Nothing) Then
                Me.DispatchPrintSJHubOperationCompleted = AddressOf Me.OnDispatchPrintSJHubOperationCompleted
            End If
            Me.InvokeAsync("DispatchPrintSJHub", New Object() {AppName, AppVersion, Hub, Param}, Me.DispatchPrintSJHubOperationCompleted, userState)
        End Sub
        
        Private Sub OnDispatchPrintSJHubOperationCompleted(ByVal arg As Object)
            If (Not (Me.DispatchPrintSJHubCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DispatchPrintSJHubCompleted(Me, New DispatchPrintSJHubCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DispatchReturListHub", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DispatchReturListHub(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DispatchReturListHub", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DispatchReturListHubAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.DispatchReturListHubAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DispatchReturListHubAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DispatchReturListHubOperationCompleted Is Nothing) Then
                Me.DispatchReturListHubOperationCompleted = AddressOf Me.OnDispatchReturListHubOperationCompleted
            End If
            Me.InvokeAsync("DispatchReturListHub", New Object() {AppName, AppVersion, Hub, Param}, Me.DispatchReturListHubOperationCompleted, userState)
        End Sub
        
        Private Sub OnDispatchReturListHubOperationCompleted(ByVal arg As Object)
            If (Not (Me.DispatchReturListHubCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DispatchReturListHubCompleted(Me, New DispatchReturListHubCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ArriveDriverListHub", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ArriveDriverListHub(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ArriveDriverListHub", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ArriveDriverListHubAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.ArriveDriverListHubAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ArriveDriverListHubAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ArriveDriverListHubOperationCompleted Is Nothing) Then
                Me.ArriveDriverListHubOperationCompleted = AddressOf Me.OnArriveDriverListHubOperationCompleted
            End If
            Me.InvokeAsync("ArriveDriverListHub", New Object() {AppName, AppVersion, Hub, Param}, Me.ArriveDriverListHubOperationCompleted, userState)
        End Sub
        
        Private Sub OnArriveDriverListHubOperationCompleted(ByVal arg As Object)
            If (Not (Me.ArriveDriverListHubCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ArriveDriverListHubCompleted(Me, New ArriveDriverListHubCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ArriveDriverProcessHub", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ArriveDriverProcessHub(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ArriveDriverProcessHub", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ArriveDriverProcessHubAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.ArriveDriverProcessHubAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ArriveDriverProcessHubAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ArriveDriverProcessHubOperationCompleted Is Nothing) Then
                Me.ArriveDriverProcessHubOperationCompleted = AddressOf Me.OnArriveDriverProcessHubOperationCompleted
            End If
            Me.InvokeAsync("ArriveDriverProcessHub", New Object() {AppName, AppVersion, Hub, Param}, Me.ArriveDriverProcessHubOperationCompleted, userState)
        End Sub
        
        Private Sub OnArriveDriverProcessHubOperationCompleted(ByVal arg As Object)
            If (Not (Me.ArriveDriverProcessHubCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ArriveDriverProcessHubCompleted(Me, New ArriveDriverProcessHubCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ArriveListHub", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ArriveListHub(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ArriveListHub", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ArriveListHubAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.ArriveListHubAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ArriveListHubAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ArriveListHubOperationCompleted Is Nothing) Then
                Me.ArriveListHubOperationCompleted = AddressOf Me.OnArriveListHubOperationCompleted
            End If
            Me.InvokeAsync("ArriveListHub", New Object() {AppName, AppVersion, Hub, Param}, Me.ArriveListHubOperationCompleted, userState)
        End Sub
        
        Private Sub OnArriveListHubOperationCompleted(ByVal arg As Object)
            If (Not (Me.ArriveListHubCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ArriveListHubCompleted(Me, New ArriveListHubCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ArriveProcessHub", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ArriveProcessHub(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ArriveProcessHub", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ArriveProcessHubAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.ArriveProcessHubAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ArriveProcessHubAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ArriveProcessHubOperationCompleted Is Nothing) Then
                Me.ArriveProcessHubOperationCompleted = AddressOf Me.OnArriveProcessHubOperationCompleted
            End If
            Me.InvokeAsync("ArriveProcessHub", New Object() {AppName, AppVersion, Hub, Param}, Me.ArriveProcessHubOperationCompleted, userState)
        End Sub
        
        Private Sub OnArriveProcessHubOperationCompleted(ByVal arg As Object)
            If (Not (Me.ArriveProcessHubCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ArriveProcessHubCompleted(Me, New ArriveProcessHubCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HubGroupingList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HubGroupingList(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("HubGroupingList", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub HubGroupingListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.HubGroupingListAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HubGroupingListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.HubGroupingListOperationCompleted Is Nothing) Then
                Me.HubGroupingListOperationCompleted = AddressOf Me.OnHubGroupingListOperationCompleted
            End If
            Me.InvokeAsync("HubGroupingList", New Object() {AppName, AppVersion, Hub, Param}, Me.HubGroupingListOperationCompleted, userState)
        End Sub
        
        Private Sub OnHubGroupingListOperationCompleted(ByVal arg As Object)
            If (Not (Me.HubGroupingListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HubGroupingListCompleted(Me, New HubGroupingListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HubConsPickupList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HubConsPickupList(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("HubConsPickupList", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub HubConsPickupListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.HubConsPickupListAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HubConsPickupListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.HubConsPickupListOperationCompleted Is Nothing) Then
                Me.HubConsPickupListOperationCompleted = AddressOf Me.OnHubConsPickupListOperationCompleted
            End If
            Me.InvokeAsync("HubConsPickupList", New Object() {AppName, AppVersion, Station, Param}, Me.HubConsPickupListOperationCompleted, userState)
        End Sub
        
        Private Sub OnHubConsPickupListOperationCompleted(ByVal arg As Object)
            If (Not (Me.HubConsPickupListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HubConsPickupListCompleted(Me, New HubConsPickupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HubConsIncomingList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HubConsIncomingList(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("HubConsIncomingList", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub HubConsIncomingListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.HubConsIncomingListAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HubConsIncomingListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.HubConsIncomingListOperationCompleted Is Nothing) Then
                Me.HubConsIncomingListOperationCompleted = AddressOf Me.OnHubConsIncomingListOperationCompleted
            End If
            Me.InvokeAsync("HubConsIncomingList", New Object() {AppName, AppVersion, Station, Param}, Me.HubConsIncomingListOperationCompleted, userState)
        End Sub
        
        Private Sub OnHubConsIncomingListOperationCompleted(ByVal arg As Object)
            If (Not (Me.HubConsIncomingListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HubConsIncomingListCompleted(Me, New HubConsIncomingListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EComNewPickupList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EComNewPickupList(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("EComNewPickupList", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub EComNewPickupListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.EComNewPickupListAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EComNewPickupListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.EComNewPickupListOperationCompleted Is Nothing) Then
                Me.EComNewPickupListOperationCompleted = AddressOf Me.OnEComNewPickupListOperationCompleted
            End If
            Me.InvokeAsync("EComNewPickupList", New Object() {AppName, AppVersion, Station, Param}, Me.EComNewPickupListOperationCompleted, userState)
        End Sub
        
        Private Sub OnEComNewPickupListOperationCompleted(ByVal arg As Object)
            If (Not (Me.EComNewPickupListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EComNewPickupListCompleted(Me, New EComNewPickupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EcomNewHubPickupList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EcomNewHubPickupList(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("EcomNewHubPickupList", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub EcomNewHubPickupListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.EcomNewHubPickupListAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EcomNewHubPickupListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.EcomNewHubPickupListOperationCompleted Is Nothing) Then
                Me.EcomNewHubPickupListOperationCompleted = AddressOf Me.OnEcomNewHubPickupListOperationCompleted
            End If
            Me.InvokeAsync("EcomNewHubPickupList", New Object() {AppName, AppVersion, Hub, Param}, Me.EcomNewHubPickupListOperationCompleted, userState)
        End Sub
        
        Private Sub OnEcomNewHubPickupListOperationCompleted(ByVal arg As Object)
            If (Not (Me.EcomNewHubPickupListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EcomNewHubPickupListCompleted(Me, New EcomNewHubPickupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EcomNewHubPickupListV2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EcomNewHubPickupListV2(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("EcomNewHubPickupListV2", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub EcomNewHubPickupListV2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.EcomNewHubPickupListV2Async(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EcomNewHubPickupListV2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.EcomNewHubPickupListV2OperationCompleted Is Nothing) Then
                Me.EcomNewHubPickupListV2OperationCompleted = AddressOf Me.OnEcomNewHubPickupListV2OperationCompleted
            End If
            Me.InvokeAsync("EcomNewHubPickupListV2", New Object() {AppName, AppVersion, Hub, Param}, Me.EcomNewHubPickupListV2OperationCompleted, userState)
        End Sub
        
        Private Sub OnEcomNewHubPickupListV2OperationCompleted(ByVal arg As Object)
            If (Not (Me.EcomNewHubPickupListV2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EcomNewHubPickupListV2Completed(Me, New EcomNewHubPickupListV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoOrderNewTransactionDeliveryMan", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoOrderNewTransactionDeliveryMan(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoOrderNewTransactionDeliveryMan", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoOrderNewTransactionDeliveryManAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoOrderNewTransactionDeliveryManAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoOrderNewTransactionDeliveryManAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoOrderNewTransactionDeliveryManOperationCompleted Is Nothing) Then
                Me.AutoOrderNewTransactionDeliveryManOperationCompleted = AddressOf Me.OnAutoOrderNewTransactionDeliveryManOperationCompleted
            End If
            Me.InvokeAsync("AutoOrderNewTransactionDeliveryMan", New Object() {AppName, AppVersion, Param}, Me.AutoOrderNewTransactionDeliveryManOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoOrderNewTransactionDeliveryManOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoOrderNewTransactionDeliveryManCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoOrderNewTransactionDeliveryManCompleted(Me, New AutoOrderNewTransactionDeliveryManCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoOrderNewTransaction", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoOrderNewTransaction(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoOrderNewTransaction", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoOrderNewTransactionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoOrderNewTransactionAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoOrderNewTransactionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoOrderNewTransactionOperationCompleted Is Nothing) Then
                Me.AutoOrderNewTransactionOperationCompleted = AddressOf Me.OnAutoOrderNewTransactionOperationCompleted
            End If
            Me.InvokeAsync("AutoOrderNewTransaction", New Object() {AppName, AppVersion, Param}, Me.AutoOrderNewTransactionOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoOrderNewTransactionOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoOrderNewTransactionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoOrderNewTransactionCompleted(Me, New AutoOrderNewTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoOrderNewTransactionMultiDrop", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoOrderNewTransactionMultiDrop(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoOrderNewTransactionMultiDrop", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoOrderNewTransactionMultiDropAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoOrderNewTransactionMultiDropAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoOrderNewTransactionMultiDropAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoOrderNewTransactionMultiDropOperationCompleted Is Nothing) Then
                Me.AutoOrderNewTransactionMultiDropOperationCompleted = AddressOf Me.OnAutoOrderNewTransactionMultiDropOperationCompleted
            End If
            Me.InvokeAsync("AutoOrderNewTransactionMultiDrop", New Object() {AppName, AppVersion, Param}, Me.AutoOrderNewTransactionMultiDropOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoOrderNewTransactionMultiDropOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoOrderNewTransactionMultiDropCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoOrderNewTransactionMultiDropCompleted(Me, New AutoOrderNewTransactionMultiDropCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoOrderThirdPartyUpdTrxDeliveryMan", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoOrderThirdPartyUpdTrxDeliveryMan(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoOrderThirdPartyUpdTrxDeliveryMan", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoOrderThirdPartyUpdTrxDeliveryManAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoOrderThirdPartyUpdTrxDeliveryManAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoOrderThirdPartyUpdTrxDeliveryManAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoOrderThirdPartyUpdTrxDeliveryManOperationCompleted Is Nothing) Then
                Me.AutoOrderThirdPartyUpdTrxDeliveryManOperationCompleted = AddressOf Me.OnAutoOrderThirdPartyUpdTrxDeliveryManOperationCompleted
            End If
            Me.InvokeAsync("AutoOrderThirdPartyUpdTrxDeliveryMan", New Object() {AppName, AppVersion, Param}, Me.AutoOrderThirdPartyUpdTrxDeliveryManOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoOrderThirdPartyUpdTrxDeliveryManOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoOrderThirdPartyUpdTrxDeliveryManCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoOrderThirdPartyUpdTrxDeliveryManCompleted(Me, New AutoOrderThirdPartyUpdTrxDeliveryManCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoOrderUpdateStatusPUQv2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoOrderUpdateStatusPUQv2(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoOrderUpdateStatusPUQv2", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoOrderUpdateStatusPUQv2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoOrderUpdateStatusPUQv2Async(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoOrderUpdateStatusPUQv2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoOrderUpdateStatusPUQv2OperationCompleted Is Nothing) Then
                Me.AutoOrderUpdateStatusPUQv2OperationCompleted = AddressOf Me.OnAutoOrderUpdateStatusPUQv2OperationCompleted
            End If
            Me.InvokeAsync("AutoOrderUpdateStatusPUQv2", New Object() {AppName, AppVersion, Param}, Me.AutoOrderUpdateStatusPUQv2OperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoOrderUpdateStatusPUQv2OperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoOrderUpdateStatusPUQv2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoOrderUpdateStatusPUQv2Completed(Me, New AutoOrderUpdateStatusPUQv2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoOrderUpdateStatusPUQ", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoOrderUpdateStatusPUQ(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoOrderUpdateStatusPUQ", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoOrderUpdateStatusPUQAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoOrderUpdateStatusPUQAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoOrderUpdateStatusPUQAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoOrderUpdateStatusPUQOperationCompleted Is Nothing) Then
                Me.AutoOrderUpdateStatusPUQOperationCompleted = AddressOf Me.OnAutoOrderUpdateStatusPUQOperationCompleted
            End If
            Me.InvokeAsync("AutoOrderUpdateStatusPUQ", New Object() {AppName, AppVersion, Param}, Me.AutoOrderUpdateStatusPUQOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoOrderUpdateStatusPUQOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoOrderUpdateStatusPUQCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoOrderUpdateStatusPUQCompleted(Me, New AutoOrderUpdateStatusPUQCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoOrderUpdateStatusPULv2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoOrderUpdateStatusPULv2(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoOrderUpdateStatusPULv2", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoOrderUpdateStatusPULv2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoOrderUpdateStatusPULv2Async(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoOrderUpdateStatusPULv2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoOrderUpdateStatusPULv2OperationCompleted Is Nothing) Then
                Me.AutoOrderUpdateStatusPULv2OperationCompleted = AddressOf Me.OnAutoOrderUpdateStatusPULv2OperationCompleted
            End If
            Me.InvokeAsync("AutoOrderUpdateStatusPULv2", New Object() {AppName, AppVersion, Param}, Me.AutoOrderUpdateStatusPULv2OperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoOrderUpdateStatusPULv2OperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoOrderUpdateStatusPULv2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoOrderUpdateStatusPULv2Completed(Me, New AutoOrderUpdateStatusPULv2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoOrderUpdateStatusHDVv2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoOrderUpdateStatusHDVv2(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoOrderUpdateStatusHDVv2", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoOrderUpdateStatusHDVv2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoOrderUpdateStatusHDVv2Async(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoOrderUpdateStatusHDVv2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoOrderUpdateStatusHDVv2OperationCompleted Is Nothing) Then
                Me.AutoOrderUpdateStatusHDVv2OperationCompleted = AddressOf Me.OnAutoOrderUpdateStatusHDVv2OperationCompleted
            End If
            Me.InvokeAsync("AutoOrderUpdateStatusHDVv2", New Object() {AppName, AppVersion, Param}, Me.AutoOrderUpdateStatusHDVv2OperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoOrderUpdateStatusHDVv2OperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoOrderUpdateStatusHDVv2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoOrderUpdateStatusHDVv2Completed(Me, New AutoOrderUpdateStatusHDVv2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoOrderUpdateStatusHDV", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoOrderUpdateStatusHDV(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoOrderUpdateStatusHDV", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoOrderUpdateStatusHDVAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoOrderUpdateStatusHDVAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoOrderUpdateStatusHDVAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoOrderUpdateStatusHDVOperationCompleted Is Nothing) Then
                Me.AutoOrderUpdateStatusHDVOperationCompleted = AddressOf Me.OnAutoOrderUpdateStatusHDVOperationCompleted
            End If
            Me.InvokeAsync("AutoOrderUpdateStatusHDV", New Object() {AppName, AppVersion, Param}, Me.AutoOrderUpdateStatusHDVOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoOrderUpdateStatusHDVOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoOrderUpdateStatusHDVCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoOrderUpdateStatusHDVCompleted(Me, New AutoOrderUpdateStatusHDVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoOrderUpdateStatusHDSv2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoOrderUpdateStatusHDSv2(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoOrderUpdateStatusHDSv2", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoOrderUpdateStatusHDSv2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoOrderUpdateStatusHDSv2Async(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoOrderUpdateStatusHDSv2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoOrderUpdateStatusHDSv2OperationCompleted Is Nothing) Then
                Me.AutoOrderUpdateStatusHDSv2OperationCompleted = AddressOf Me.OnAutoOrderUpdateStatusHDSv2OperationCompleted
            End If
            Me.InvokeAsync("AutoOrderUpdateStatusHDSv2", New Object() {AppName, AppVersion, Param}, Me.AutoOrderUpdateStatusHDSv2OperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoOrderUpdateStatusHDSv2OperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoOrderUpdateStatusHDSv2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoOrderUpdateStatusHDSv2Completed(Me, New AutoOrderUpdateStatusHDSv2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoOrderUpdateStatusHDS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoOrderUpdateStatusHDS(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoOrderUpdateStatusHDS", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoOrderUpdateStatusHDSAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoOrderUpdateStatusHDSAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoOrderUpdateStatusHDSAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoOrderUpdateStatusHDSOperationCompleted Is Nothing) Then
                Me.AutoOrderUpdateStatusHDSOperationCompleted = AddressOf Me.OnAutoOrderUpdateStatusHDSOperationCompleted
            End If
            Me.InvokeAsync("AutoOrderUpdateStatusHDS", New Object() {AppName, AppVersion, Param}, Me.AutoOrderUpdateStatusHDSOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoOrderUpdateStatusHDSOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoOrderUpdateStatusHDSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoOrderUpdateStatusHDSCompleted(Me, New AutoOrderUpdateStatusHDSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoOrderUpdateStatusOOCRTS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoOrderUpdateStatusOOCRTS(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoOrderUpdateStatusOOCRTS", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoOrderUpdateStatusOOCRTSAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoOrderUpdateStatusOOCRTSAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoOrderUpdateStatusOOCRTSAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoOrderUpdateStatusOOCRTSOperationCompleted Is Nothing) Then
                Me.AutoOrderUpdateStatusOOCRTSOperationCompleted = AddressOf Me.OnAutoOrderUpdateStatusOOCRTSOperationCompleted
            End If
            Me.InvokeAsync("AutoOrderUpdateStatusOOCRTS", New Object() {AppName, AppVersion, Param}, Me.AutoOrderUpdateStatusOOCRTSOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoOrderUpdateStatusOOCRTSOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoOrderUpdateStatusOOCRTSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoOrderUpdateStatusOOCRTSCompleted(Me, New AutoOrderUpdateStatusOOCRTSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoOrderUpdateStatusRTSFLR", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoOrderUpdateStatusRTSFLR(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoOrderUpdateStatusRTSFLR", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoOrderUpdateStatusRTSFLRAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoOrderUpdateStatusRTSFLRAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoOrderUpdateStatusRTSFLRAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoOrderUpdateStatusRTSFLROperationCompleted Is Nothing) Then
                Me.AutoOrderUpdateStatusRTSFLROperationCompleted = AddressOf Me.OnAutoOrderUpdateStatusRTSFLROperationCompleted
            End If
            Me.InvokeAsync("AutoOrderUpdateStatusRTSFLR", New Object() {AppName, AppVersion, Param}, Me.AutoOrderUpdateStatusRTSFLROperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoOrderUpdateStatusRTSFLROperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoOrderUpdateStatusRTSFLRCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoOrderUpdateStatusRTSFLRCompleted(Me, New AutoOrderUpdateStatusRTSFLRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoOrderCancelOrder", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoOrderCancelOrder(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoOrderCancelOrder", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoOrderCancelOrderAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoOrderCancelOrderAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoOrderCancelOrderAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoOrderCancelOrderOperationCompleted Is Nothing) Then
                Me.AutoOrderCancelOrderOperationCompleted = AddressOf Me.OnAutoOrderCancelOrderOperationCompleted
            End If
            Me.InvokeAsync("AutoOrderCancelOrder", New Object() {AppName, AppVersion, Param}, Me.AutoOrderCancelOrderOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoOrderCancelOrderOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoOrderCancelOrderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoOrderCancelOrderCompleted(Me, New AutoOrderCancelOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoOrderAdjustStatusRTS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoOrderAdjustStatusRTS(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoOrderAdjustStatusRTS", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoOrderAdjustStatusRTSAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoOrderAdjustStatusRTSAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoOrderAdjustStatusRTSAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoOrderAdjustStatusRTSOperationCompleted Is Nothing) Then
                Me.AutoOrderAdjustStatusRTSOperationCompleted = AddressOf Me.OnAutoOrderAdjustStatusRTSOperationCompleted
            End If
            Me.InvokeAsync("AutoOrderAdjustStatusRTS", New Object() {AppName, AppVersion, Param}, Me.AutoOrderAdjustStatusRTSOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoOrderAdjustStatusRTSOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoOrderAdjustStatusRTSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoOrderAdjustStatusRTSCompleted(Me, New AutoOrderAdjustStatusRTSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAddInsurance", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAddInsurance(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAddInsurance", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAddInsuranceAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetAddInsuranceAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAddInsuranceAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAddInsuranceOperationCompleted Is Nothing) Then
                Me.GetAddInsuranceOperationCompleted = AddressOf Me.OnGetAddInsuranceOperationCompleted
            End If
            Me.InvokeAsync("GetAddInsurance", New Object() {AppName, AppVersion, Param}, Me.GetAddInsuranceOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAddInsuranceOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAddInsuranceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAddInsuranceCompleted(Me, New GetAddInsuranceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatchTrackNumReserve", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BatchTrackNumReserve(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("BatchTrackNumReserve", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub BatchTrackNumReserveAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.BatchTrackNumReserveAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BatchTrackNumReserveAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.BatchTrackNumReserveOperationCompleted Is Nothing) Then
                Me.BatchTrackNumReserveOperationCompleted = AddressOf Me.OnBatchTrackNumReserveOperationCompleted
            End If
            Me.InvokeAsync("BatchTrackNumReserve", New Object() {AppName, AppVersion, Param}, Me.BatchTrackNumReserveOperationCompleted, userState)
        End Sub
        
        Private Sub OnBatchTrackNumReserveOperationCompleted(ByVal arg As Object)
            If (Not (Me.BatchTrackNumReserveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BatchTrackNumReserveCompleted(Me, New BatchTrackNumReserveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BatchTrackNumCreate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BatchTrackNumCreate(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal ParamData() As Object) As Object()
            Dim results() As Object = Me.Invoke("BatchTrackNumCreate", New Object() {AppName, AppVersion, Param, ParamData})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub BatchTrackNumCreateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal ParamData() As Object)
            Me.BatchTrackNumCreateAsync(AppName, AppVersion, Param, ParamData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BatchTrackNumCreateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal ParamData() As Object, ByVal userState As Object)
            If (Me.BatchTrackNumCreateOperationCompleted Is Nothing) Then
                Me.BatchTrackNumCreateOperationCompleted = AddressOf Me.OnBatchTrackNumCreateOperationCompleted
            End If
            Me.InvokeAsync("BatchTrackNumCreate", New Object() {AppName, AppVersion, Param, ParamData}, Me.BatchTrackNumCreateOperationCompleted, userState)
        End Sub
        
        Private Sub OnBatchTrackNumCreateOperationCompleted(ByVal arg As Object)
            If (Not (Me.BatchTrackNumCreateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BatchTrackNumCreateCompleted(Me, New BatchTrackNumCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DispatchList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DispatchList(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DispatchList", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DispatchListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.DispatchListAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DispatchListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DispatchListOperationCompleted Is Nothing) Then
                Me.DispatchListOperationCompleted = AddressOf Me.OnDispatchListOperationCompleted
            End If
            Me.InvokeAsync("DispatchList", New Object() {AppName, AppVersion, Station, Param}, Me.DispatchListOperationCompleted, userState)
        End Sub
        
        Private Sub OnDispatchListOperationCompleted(ByVal arg As Object)
            If (Not (Me.DispatchListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DispatchListCompleted(Me, New DispatchListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DispatchProcess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DispatchProcess(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DispatchProcess", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DispatchProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.DispatchProcessAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DispatchProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DispatchProcessOperationCompleted Is Nothing) Then
                Me.DispatchProcessOperationCompleted = AddressOf Me.OnDispatchProcessOperationCompleted
            End If
            Me.InvokeAsync("DispatchProcess", New Object() {AppName, AppVersion, Station, Param}, Me.DispatchProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnDispatchProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.DispatchProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DispatchProcessCompleted(Me, New DispatchProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DispatchPrintSJ", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DispatchPrintSJ(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DispatchPrintSJ", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DispatchPrintSJAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.DispatchPrintSJAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DispatchPrintSJAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DispatchPrintSJOperationCompleted Is Nothing) Then
                Me.DispatchPrintSJOperationCompleted = AddressOf Me.OnDispatchPrintSJOperationCompleted
            End If
            Me.InvokeAsync("DispatchPrintSJ", New Object() {AppName, AppVersion, Station, Param}, Me.DispatchPrintSJOperationCompleted, userState)
        End Sub
        
        Private Sub OnDispatchPrintSJOperationCompleted(ByVal arg As Object)
            If (Not (Me.DispatchPrintSJCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DispatchPrintSJCompleted(Me, New DispatchPrintSJCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DispatchReturList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DispatchReturList(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DispatchReturList", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DispatchReturListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.DispatchReturListAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DispatchReturListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DispatchReturListOperationCompleted Is Nothing) Then
                Me.DispatchReturListOperationCompleted = AddressOf Me.OnDispatchReturListOperationCompleted
            End If
            Me.InvokeAsync("DispatchReturList", New Object() {AppName, AppVersion, Station, Param}, Me.DispatchReturListOperationCompleted, userState)
        End Sub
        
        Private Sub OnDispatchReturListOperationCompleted(ByVal arg As Object)
            If (Not (Me.DispatchReturListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DispatchReturListCompleted(Me, New DispatchReturListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PickupCheckPIN", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PickupCheckPIN(ByVal AppName As String, ByVal AppVersion As String, ByVal Account As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PickupCheckPIN", New Object() {AppName, AppVersion, Account, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PickupCheckPINAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Account As String, ByVal Param() As Object)
            Me.PickupCheckPINAsync(AppName, AppVersion, Account, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PickupCheckPINAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Account As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PickupCheckPINOperationCompleted Is Nothing) Then
                Me.PickupCheckPINOperationCompleted = AddressOf Me.OnPickupCheckPINOperationCompleted
            End If
            Me.InvokeAsync("PickupCheckPIN", New Object() {AppName, AppVersion, Account, Param}, Me.PickupCheckPINOperationCompleted, userState)
        End Sub
        
        Private Sub OnPickupCheckPINOperationCompleted(ByVal arg As Object)
            If (Not (Me.PickupCheckPINCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PickupCheckPINCompleted(Me, New PickupCheckPINCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PickupRequest", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PickupRequest(ByVal AppName As String, ByVal AppVersion As String, ByVal Account As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PickupRequest", New Object() {AppName, AppVersion, Account, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PickupRequestAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Account As String, ByVal Param() As Object)
            Me.PickupRequestAsync(AppName, AppVersion, Account, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PickupRequestAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Account As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PickupRequestOperationCompleted Is Nothing) Then
                Me.PickupRequestOperationCompleted = AddressOf Me.OnPickupRequestOperationCompleted
            End If
            Me.InvokeAsync("PickupRequest", New Object() {AppName, AppVersion, Account, Param}, Me.PickupRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnPickupRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.PickupRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PickupRequestCompleted(Me, New PickupRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PickupProcessed", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PickupProcessed(ByVal AppName As String, ByVal AppVersion As String, ByVal Account As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PickupProcessed", New Object() {AppName, AppVersion, Account, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PickupProcessedAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Account As String, ByVal Param() As Object)
            Me.PickupProcessedAsync(AppName, AppVersion, Account, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PickupProcessedAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Account As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PickupProcessedOperationCompleted Is Nothing) Then
                Me.PickupProcessedOperationCompleted = AddressOf Me.OnPickupProcessedOperationCompleted
            End If
            Me.InvokeAsync("PickupProcessed", New Object() {AppName, AppVersion, Account, Param}, Me.PickupProcessedOperationCompleted, userState)
        End Sub
        
        Private Sub OnPickupProcessedOperationCompleted(ByVal arg As Object)
            If (Not (Me.PickupProcessedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PickupProcessedCompleted(Me, New PickupProcessedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ArriveDriverList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ArriveDriverList(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ArriveDriverList", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ArriveDriverListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.ArriveDriverListAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ArriveDriverListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ArriveDriverListOperationCompleted Is Nothing) Then
                Me.ArriveDriverListOperationCompleted = AddressOf Me.OnArriveDriverListOperationCompleted
            End If
            Me.InvokeAsync("ArriveDriverList", New Object() {AppName, AppVersion, Station, Param}, Me.ArriveDriverListOperationCompleted, userState)
        End Sub
        
        Private Sub OnArriveDriverListOperationCompleted(ByVal arg As Object)
            If (Not (Me.ArriveDriverListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ArriveDriverListCompleted(Me, New ArriveDriverListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ArriveDriverProcess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ArriveDriverProcess(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ArriveDriverProcess", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ArriveDriverProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.ArriveDriverProcessAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ArriveDriverProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ArriveDriverProcessOperationCompleted Is Nothing) Then
                Me.ArriveDriverProcessOperationCompleted = AddressOf Me.OnArriveDriverProcessOperationCompleted
            End If
            Me.InvokeAsync("ArriveDriverProcess", New Object() {AppName, AppVersion, Station, Param}, Me.ArriveDriverProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnArriveDriverProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.ArriveDriverProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ArriveDriverProcessCompleted(Me, New ArriveDriverProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ArriveList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ArriveList(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ArriveList", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ArriveListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.ArriveListAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ArriveListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ArriveListOperationCompleted Is Nothing) Then
                Me.ArriveListOperationCompleted = AddressOf Me.OnArriveListOperationCompleted
            End If
            Me.InvokeAsync("ArriveList", New Object() {AppName, AppVersion, Station, Param}, Me.ArriveListOperationCompleted, userState)
        End Sub
        
        Private Sub OnArriveListOperationCompleted(ByVal arg As Object)
            If (Not (Me.ArriveListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ArriveListCompleted(Me, New ArriveListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ArriveProcess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ArriveProcess(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ArriveProcess", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ArriveProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.ArriveProcessAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ArriveProcessAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ArriveProcessOperationCompleted Is Nothing) Then
                Me.ArriveProcessOperationCompleted = AddressOf Me.OnArriveProcessOperationCompleted
            End If
            Me.InvokeAsync("ArriveProcess", New Object() {AppName, AppVersion, Station, Param}, Me.ArriveProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnArriveProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.ArriveProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ArriveProcessCompleted(Me, New ArriveProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRackList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateRackList(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateRackList", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateRackListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.UpdateRackListAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateRackListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateRackListOperationCompleted Is Nothing) Then
                Me.UpdateRackListOperationCompleted = AddressOf Me.OnUpdateRackListOperationCompleted
            End If
            Me.InvokeAsync("UpdateRackList", New Object() {AppName, AppVersion, Hub, Param}, Me.UpdateRackListOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateRackListOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateRackListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateRackListCompleted(Me, New UpdateRackListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePJBHubPostalCodeList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdatePJBHubPostalCodeList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdatePJBHubPostalCodeList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdatePJBHubPostalCodeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdatePJBHubPostalCodeListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdatePJBHubPostalCodeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdatePJBHubPostalCodeListOperationCompleted Is Nothing) Then
                Me.UpdatePJBHubPostalCodeListOperationCompleted = AddressOf Me.OnUpdatePJBHubPostalCodeListOperationCompleted
            End If
            Me.InvokeAsync("UpdatePJBHubPostalCodeList", New Object() {AppName, AppVersion, Param}, Me.UpdatePJBHubPostalCodeListOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdatePJBHubPostalCodeListOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdatePJBHubPostalCodeListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdatePJBHubPostalCodeListCompleted(Me, New UpdatePJBHubPostalCodeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateHubPostalCodeList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateHubPostalCodeList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateHubPostalCodeList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateHubPostalCodeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdateHubPostalCodeListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateHubPostalCodeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateHubPostalCodeListOperationCompleted Is Nothing) Then
                Me.UpdateHubPostalCodeListOperationCompleted = AddressOf Me.OnUpdateHubPostalCodeListOperationCompleted
            End If
            Me.InvokeAsync("UpdateHubPostalCodeList", New Object() {AppName, AppVersion, Param}, Me.UpdateHubPostalCodeListOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateHubPostalCodeListOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateHubPostalCodeListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateHubPostalCodeListCompleted(Me, New UpdateHubPostalCodeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAccountHubPostalCodeList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateAccountHubPostalCodeList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateAccountHubPostalCodeList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateAccountHubPostalCodeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdateAccountHubPostalCodeListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateAccountHubPostalCodeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateAccountHubPostalCodeListOperationCompleted Is Nothing) Then
                Me.UpdateAccountHubPostalCodeListOperationCompleted = AddressOf Me.OnUpdateAccountHubPostalCodeListOperationCompleted
            End If
            Me.InvokeAsync("UpdateAccountHubPostalCodeList", New Object() {AppName, AppVersion, Param}, Me.UpdateAccountHubPostalCodeListOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateAccountHubPostalCodeListOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateAccountHubPostalCodeListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateAccountHubPostalCodeListCompleted(Me, New UpdateAccountHubPostalCodeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateInstantHubPostalCodeList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateInstantHubPostalCodeList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateInstantHubPostalCodeList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateInstantHubPostalCodeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdateInstantHubPostalCodeListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateInstantHubPostalCodeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateInstantHubPostalCodeListOperationCompleted Is Nothing) Then
                Me.UpdateInstantHubPostalCodeListOperationCompleted = AddressOf Me.OnUpdateInstantHubPostalCodeListOperationCompleted
            End If
            Me.InvokeAsync("UpdateInstantHubPostalCodeList", New Object() {AppName, AppVersion, Param}, Me.UpdateInstantHubPostalCodeListOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateInstantHubPostalCodeListOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateInstantHubPostalCodeListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateInstantHubPostalCodeListCompleted(Me, New UpdateInstantHubPostalCodeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePoinkuHubPostalCodeList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdatePoinkuHubPostalCodeList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdatePoinkuHubPostalCodeList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdatePoinkuHubPostalCodeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdatePoinkuHubPostalCodeListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdatePoinkuHubPostalCodeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdatePoinkuHubPostalCodeListOperationCompleted Is Nothing) Then
                Me.UpdatePoinkuHubPostalCodeListOperationCompleted = AddressOf Me.OnUpdatePoinkuHubPostalCodeListOperationCompleted
            End If
            Me.InvokeAsync("UpdatePoinkuHubPostalCodeList", New Object() {AppName, AppVersion, Param}, Me.UpdatePoinkuHubPostalCodeListOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdatePoinkuHubPostalCodeListOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdatePoinkuHubPostalCodeListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdatePoinkuHubPostalCodeListCompleted(Me, New UpdatePoinkuHubPostalCodeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCourierDeliveryCostList_Obsolete", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCourierDeliveryCostList_Obsolete(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateCourierDeliveryCostList_Obsolete", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCourierDeliveryCostList_ObsoleteAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdateCourierDeliveryCostList_ObsoleteAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCourierDeliveryCostList_ObsoleteAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateCourierDeliveryCostList_ObsoleteOperationCompleted Is Nothing) Then
                Me.UpdateCourierDeliveryCostList_ObsoleteOperationCompleted = AddressOf Me.OnUpdateCourierDeliveryCostList_ObsoleteOperationCompleted
            End If
            Me.InvokeAsync("UpdateCourierDeliveryCostList_Obsolete", New Object() {AppName, AppVersion, Param}, Me.UpdateCourierDeliveryCostList_ObsoleteOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCourierDeliveryCostList_ObsoleteOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCourierDeliveryCostList_ObsoleteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCourierDeliveryCostList_ObsoleteCompleted(Me, New UpdateCourierDeliveryCostList_ObsoleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCourierAddressDeliveryCostList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCourierAddressDeliveryCostList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateCourierAddressDeliveryCostList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCourierAddressDeliveryCostListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdateCourierAddressDeliveryCostListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCourierAddressDeliveryCostListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateCourierAddressDeliveryCostListOperationCompleted Is Nothing) Then
                Me.UpdateCourierAddressDeliveryCostListOperationCompleted = AddressOf Me.OnUpdateCourierAddressDeliveryCostListOperationCompleted
            End If
            Me.InvokeAsync("UpdateCourierAddressDeliveryCostList", New Object() {AppName, AppVersion, Param}, Me.UpdateCourierAddressDeliveryCostListOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCourierAddressDeliveryCostListOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCourierAddressDeliveryCostListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCourierAddressDeliveryCostListCompleted(Me, New UpdateCourierAddressDeliveryCostListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCourierDooringDeliveryCostList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCourierDooringDeliveryCostList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateCourierDooringDeliveryCostList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCourierDooringDeliveryCostListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdateCourierDooringDeliveryCostListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCourierDooringDeliveryCostListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateCourierDooringDeliveryCostListOperationCompleted Is Nothing) Then
                Me.UpdateCourierDooringDeliveryCostListOperationCompleted = AddressOf Me.OnUpdateCourierDooringDeliveryCostListOperationCompleted
            End If
            Me.InvokeAsync("UpdateCourierDooringDeliveryCostList", New Object() {AppName, AppVersion, Param}, Me.UpdateCourierDooringDeliveryCostListOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCourierDooringDeliveryCostListOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCourierDooringDeliveryCostListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCourierDooringDeliveryCostListCompleted(Me, New UpdateCourierDooringDeliveryCostListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCourierPickupDeliveryCostList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCourierPickupDeliveryCostList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateCourierPickupDeliveryCostList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCourierPickupDeliveryCostListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdateCourierPickupDeliveryCostListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCourierPickupDeliveryCostListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateCourierPickupDeliveryCostListOperationCompleted Is Nothing) Then
                Me.UpdateCourierPickupDeliveryCostListOperationCompleted = AddressOf Me.OnUpdateCourierPickupDeliveryCostListOperationCompleted
            End If
            Me.InvokeAsync("UpdateCourierPickupDeliveryCostList", New Object() {AppName, AppVersion, Param}, Me.UpdateCourierPickupDeliveryCostListOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCourierPickupDeliveryCostListOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCourierPickupDeliveryCostListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCourierPickupDeliveryCostListCompleted(Me, New UpdateCourierPickupDeliveryCostListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCourierFleetRentalCostList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCourierFleetRentalCostList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateCourierFleetRentalCostList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCourierFleetRentalCostListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdateCourierFleetRentalCostListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCourierFleetRentalCostListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateCourierFleetRentalCostListOperationCompleted Is Nothing) Then
                Me.UpdateCourierFleetRentalCostListOperationCompleted = AddressOf Me.OnUpdateCourierFleetRentalCostListOperationCompleted
            End If
            Me.InvokeAsync("UpdateCourierFleetRentalCostList", New Object() {AppName, AppVersion, Param}, Me.UpdateCourierFleetRentalCostListOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCourierFleetRentalCostListOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCourierFleetRentalCostListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCourierFleetRentalCostListCompleted(Me, New UpdateCourierFleetRentalCostListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateHubExpeditionList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateHubExpeditionList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateHubExpeditionList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateHubExpeditionListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdateHubExpeditionListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateHubExpeditionListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateHubExpeditionListOperationCompleted Is Nothing) Then
                Me.UpdateHubExpeditionListOperationCompleted = AddressOf Me.OnUpdateHubExpeditionListOperationCompleted
            End If
            Me.InvokeAsync("UpdateHubExpeditionList", New Object() {AppName, AppVersion, Param}, Me.UpdateHubExpeditionListOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateHubExpeditionListOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateHubExpeditionListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateHubExpeditionListCompleted(Me, New UpdateHubExpeditionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLastMileExpeditionList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateLastMileExpeditionList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateLastMileExpeditionList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateLastMileExpeditionListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdateLastMileExpeditionListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateLastMileExpeditionListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateLastMileExpeditionListOperationCompleted Is Nothing) Then
                Me.UpdateLastMileExpeditionListOperationCompleted = AddressOf Me.OnUpdateLastMileExpeditionListOperationCompleted
            End If
            Me.InvokeAsync("UpdateLastMileExpeditionList", New Object() {AppName, AppVersion, Param}, Me.UpdateLastMileExpeditionListOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateLastMileExpeditionListOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateLastMileExpeditionListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateLastMileExpeditionListCompleted(Me, New UpdateLastMileExpeditionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHubProcessTypeExpedition", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetHubProcessTypeExpedition(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("GetHubProcessTypeExpedition", New Object() {AppName, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetHubProcessTypeExpeditionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.GetHubProcessTypeExpeditionAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetHubProcessTypeExpeditionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.GetHubProcessTypeExpeditionOperationCompleted Is Nothing) Then
                Me.GetHubProcessTypeExpeditionOperationCompleted = AddressOf Me.OnGetHubProcessTypeExpeditionOperationCompleted
            End If
            Me.InvokeAsync("GetHubProcessTypeExpedition", New Object() {AppName, AppVersion, Param, dsData}, Me.GetHubProcessTypeExpeditionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetHubProcessTypeExpeditionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetHubProcessTypeExpeditionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetHubProcessTypeExpeditionCompleted(Me, New GetHubProcessTypeExpeditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetHubProcessTypeExpedition", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetHubProcessTypeExpedition(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SetHubProcessTypeExpedition", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetHubProcessTypeExpeditionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SetHubProcessTypeExpeditionAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetHubProcessTypeExpeditionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SetHubProcessTypeExpeditionOperationCompleted Is Nothing) Then
                Me.SetHubProcessTypeExpeditionOperationCompleted = AddressOf Me.OnSetHubProcessTypeExpeditionOperationCompleted
            End If
            Me.InvokeAsync("SetHubProcessTypeExpedition", New Object() {AppName, AppVersion, Param}, Me.SetHubProcessTypeExpeditionOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetHubProcessTypeExpeditionOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetHubProcessTypeExpeditionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetHubProcessTypeExpeditionCompleted(Me, New SetHubProcessTypeExpeditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMandatoryExpeditionCons", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMandatoryExpeditionCons(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("GetMandatoryExpeditionCons", New Object() {AppName, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMandatoryExpeditionConsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.GetMandatoryExpeditionConsAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMandatoryExpeditionConsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.GetMandatoryExpeditionConsOperationCompleted Is Nothing) Then
                Me.GetMandatoryExpeditionConsOperationCompleted = AddressOf Me.OnGetMandatoryExpeditionConsOperationCompleted
            End If
            Me.InvokeAsync("GetMandatoryExpeditionCons", New Object() {AppName, AppVersion, Param, dsData}, Me.GetMandatoryExpeditionConsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMandatoryExpeditionConsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMandatoryExpeditionConsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMandatoryExpeditionConsCompleted(Me, New GetMandatoryExpeditionConsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetMandatoryExpeditionCons", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetMandatoryExpeditionCons(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SetMandatoryExpeditionCons", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetMandatoryExpeditionConsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SetMandatoryExpeditionConsAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetMandatoryExpeditionConsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SetMandatoryExpeditionConsOperationCompleted Is Nothing) Then
                Me.SetMandatoryExpeditionConsOperationCompleted = AddressOf Me.OnSetMandatoryExpeditionConsOperationCompleted
            End If
            Me.InvokeAsync("SetMandatoryExpeditionCons", New Object() {AppName, AppVersion, Param}, Me.SetMandatoryExpeditionConsOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetMandatoryExpeditionConsOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetMandatoryExpeditionConsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetMandatoryExpeditionConsCompleted(Me, New SetMandatoryExpeditionConsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FleetRentalUpdateStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FleetRentalUpdateStatus(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("FleetRentalUpdateStatus", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FleetRentalUpdateStatusAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.FleetRentalUpdateStatusAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FleetRentalUpdateStatusAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.FleetRentalUpdateStatusOperationCompleted Is Nothing) Then
                Me.FleetRentalUpdateStatusOperationCompleted = AddressOf Me.OnFleetRentalUpdateStatusOperationCompleted
            End If
            Me.InvokeAsync("FleetRentalUpdateStatus", New Object() {AppName, AppVersion, Param}, Me.FleetRentalUpdateStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnFleetRentalUpdateStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.FleetRentalUpdateStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FleetRentalUpdateStatusCompleted(Me, New FleetRentalUpdateStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountFleetRentalVehicleTypeList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountFleetRentalVehicleTypeList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAccountFleetRentalVehicleTypeList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountFleetRentalVehicleTypeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetAccountFleetRentalVehicleTypeListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountFleetRentalVehicleTypeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAccountFleetRentalVehicleTypeListOperationCompleted Is Nothing) Then
                Me.GetAccountFleetRentalVehicleTypeListOperationCompleted = AddressOf Me.OnGetAccountFleetRentalVehicleTypeListOperationCompleted
            End If
            Me.InvokeAsync("GetAccountFleetRentalVehicleTypeList", New Object() {AppName, AppVersion, Param}, Me.GetAccountFleetRentalVehicleTypeListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountFleetRentalVehicleTypeListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountFleetRentalVehicleTypeListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountFleetRentalVehicleTypeListCompleted(Me, New GetAccountFleetRentalVehicleTypeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetAccountFleetRentalVehicleTypeList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetAccountFleetRentalVehicleTypeList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SetAccountFleetRentalVehicleTypeList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetAccountFleetRentalVehicleTypeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SetAccountFleetRentalVehicleTypeListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetAccountFleetRentalVehicleTypeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SetAccountFleetRentalVehicleTypeListOperationCompleted Is Nothing) Then
                Me.SetAccountFleetRentalVehicleTypeListOperationCompleted = AddressOf Me.OnSetAccountFleetRentalVehicleTypeListOperationCompleted
            End If
            Me.InvokeAsync("SetAccountFleetRentalVehicleTypeList", New Object() {AppName, AppVersion, Param}, Me.SetAccountFleetRentalVehicleTypeListOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetAccountFleetRentalVehicleTypeListOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetAccountFleetRentalVehicleTypeListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetAccountFleetRentalVehicleTypeListCompleted(Me, New SetAccountFleetRentalVehicleTypeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFleetRentalVehicleTypeListByAccount", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFleetRentalVehicleTypeListByAccount(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetFleetRentalVehicleTypeListByAccount", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFleetRentalVehicleTypeListByAccountAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetFleetRentalVehicleTypeListByAccountAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFleetRentalVehicleTypeListByAccountAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetFleetRentalVehicleTypeListByAccountOperationCompleted Is Nothing) Then
                Me.GetFleetRentalVehicleTypeListByAccountOperationCompleted = AddressOf Me.OnGetFleetRentalVehicleTypeListByAccountOperationCompleted
            End If
            Me.InvokeAsync("GetFleetRentalVehicleTypeListByAccount", New Object() {AppName, AppVersion, Param}, Me.GetFleetRentalVehicleTypeListByAccountOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFleetRentalVehicleTypeListByAccountOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFleetRentalVehicleTypeListByAccountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFleetRentalVehicleTypeListByAccountCompleted(Me, New GetFleetRentalVehicleTypeListByAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewAccountDownloadTemplate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NewAccountDownloadTemplate(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsTemplate As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("NewAccountDownloadTemplate", New Object() {AppName, AppVersion, Param, dsTemplate})
            dsTemplate = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub NewAccountDownloadTemplateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsTemplate As System.Data.DataSet)
            Me.NewAccountDownloadTemplateAsync(AppName, AppVersion, Param, dsTemplate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NewAccountDownloadTemplateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsTemplate As System.Data.DataSet, ByVal userState As Object)
            If (Me.NewAccountDownloadTemplateOperationCompleted Is Nothing) Then
                Me.NewAccountDownloadTemplateOperationCompleted = AddressOf Me.OnNewAccountDownloadTemplateOperationCompleted
            End If
            Me.InvokeAsync("NewAccountDownloadTemplate", New Object() {AppName, AppVersion, Param, dsTemplate}, Me.NewAccountDownloadTemplateOperationCompleted, userState)
        End Sub
        
        Private Sub OnNewAccountDownloadTemplateOperationCompleted(ByVal arg As Object)
            If (Not (Me.NewAccountDownloadTemplateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NewAccountDownloadTemplateCompleted(Me, New NewAccountDownloadTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewAccountValidate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NewAccountValidate(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("NewAccountValidate", New Object() {AppName, AppVersion, Param, dsData})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub NewAccountValidateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.NewAccountValidateAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NewAccountValidateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.NewAccountValidateOperationCompleted Is Nothing) Then
                Me.NewAccountValidateOperationCompleted = AddressOf Me.OnNewAccountValidateOperationCompleted
            End If
            Me.InvokeAsync("NewAccountValidate", New Object() {AppName, AppVersion, Param, dsData}, Me.NewAccountValidateOperationCompleted, userState)
        End Sub
        
        Private Sub OnNewAccountValidateOperationCompleted(ByVal arg As Object)
            If (Not (Me.NewAccountValidateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NewAccountValidateCompleted(Me, New NewAccountValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewAccountCreate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NewAccountCreate(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("NewAccountCreate", New Object() {AppName, AppVersion, Param, dsData})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub NewAccountCreateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.NewAccountCreateAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NewAccountCreateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.NewAccountCreateOperationCompleted Is Nothing) Then
                Me.NewAccountCreateOperationCompleted = AddressOf Me.OnNewAccountCreateOperationCompleted
            End If
            Me.InvokeAsync("NewAccountCreate", New Object() {AppName, AppVersion, Param, dsData}, Me.NewAccountCreateOperationCompleted, userState)
        End Sub
        
        Private Sub OnNewAccountCreateOperationCompleted(ByVal arg As Object)
            If (Not (Me.NewAccountCreateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NewAccountCreateCompleted(Me, New NewAccountCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewAccountDelete", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NewAccountDelete(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("NewAccountDelete", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub NewAccountDeleteAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.NewAccountDeleteAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NewAccountDeleteAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.NewAccountDeleteOperationCompleted Is Nothing) Then
                Me.NewAccountDeleteOperationCompleted = AddressOf Me.OnNewAccountDeleteOperationCompleted
            End If
            Me.InvokeAsync("NewAccountDelete", New Object() {AppName, AppVersion, Param}, Me.NewAccountDeleteOperationCompleted, userState)
        End Sub
        
        Private Sub OnNewAccountDeleteOperationCompleted(ByVal arg As Object)
            If (Not (Me.NewAccountDeleteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NewAccountDeleteCompleted(Me, New NewAccountDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewAccountCopy", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NewAccountCopy(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("NewAccountCopy", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub NewAccountCopyAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.NewAccountCopyAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NewAccountCopyAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.NewAccountCopyOperationCompleted Is Nothing) Then
                Me.NewAccountCopyOperationCompleted = AddressOf Me.OnNewAccountCopyOperationCompleted
            End If
            Me.InvokeAsync("NewAccountCopy", New Object() {AppName, AppVersion, Param}, Me.NewAccountCopyOperationCompleted, userState)
        End Sub
        
        Private Sub OnNewAccountCopyOperationCompleted(ByVal arg As Object)
            If (Not (Me.NewAccountCopyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NewAccountCopyCompleted(Me, New NewAccountCopyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewAccountSearchByKeyword", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NewAccountSearchByKeyword(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("NewAccountSearchByKeyword", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub NewAccountSearchByKeywordAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.NewAccountSearchByKeywordAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NewAccountSearchByKeywordAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.NewAccountSearchByKeywordOperationCompleted Is Nothing) Then
                Me.NewAccountSearchByKeywordOperationCompleted = AddressOf Me.OnNewAccountSearchByKeywordOperationCompleted
            End If
            Me.InvokeAsync("NewAccountSearchByKeyword", New Object() {AppName, AppVersion, Param}, Me.NewAccountSearchByKeywordOperationCompleted, userState)
        End Sub
        
        Private Sub OnNewAccountSearchByKeywordOperationCompleted(ByVal arg As Object)
            If (Not (Me.NewAccountSearchByKeywordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NewAccountSearchByKeywordCompleted(Me, New NewAccountSearchByKeywordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewAccountGetInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NewAccountGetInfo(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsTemplate As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("NewAccountGetInfo", New Object() {AppName, AppVersion, Param, dsTemplate})
            dsTemplate = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub NewAccountGetInfoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsTemplate As System.Data.DataSet)
            Me.NewAccountGetInfoAsync(AppName, AppVersion, Param, dsTemplate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NewAccountGetInfoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsTemplate As System.Data.DataSet, ByVal userState As Object)
            If (Me.NewAccountGetInfoOperationCompleted Is Nothing) Then
                Me.NewAccountGetInfoOperationCompleted = AddressOf Me.OnNewAccountGetInfoOperationCompleted
            End If
            Me.InvokeAsync("NewAccountGetInfo", New Object() {AppName, AppVersion, Param, dsTemplate}, Me.NewAccountGetInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnNewAccountGetInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.NewAccountGetInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NewAccountGetInfoCompleted(Me, New NewAccountGetInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewAccountUpdate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NewAccountUpdate(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("NewAccountUpdate", New Object() {AppName, AppVersion, Param, dsData})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub NewAccountUpdateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.NewAccountUpdateAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NewAccountUpdateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.NewAccountUpdateOperationCompleted Is Nothing) Then
                Me.NewAccountUpdateOperationCompleted = AddressOf Me.OnNewAccountUpdateOperationCompleted
            End If
            Me.InvokeAsync("NewAccountUpdate", New Object() {AppName, AppVersion, Param, dsData}, Me.NewAccountUpdateOperationCompleted, userState)
        End Sub
        
        Private Sub OnNewAccountUpdateOperationCompleted(ByVal arg As Object)
            If (Not (Me.NewAccountUpdateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NewAccountUpdateCompleted(Me, New NewAccountUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewAccountSupplierAddressCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NewAccountSupplierAddressCode(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("NewAccountSupplierAddressCode", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub NewAccountSupplierAddressCodeAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.NewAccountSupplierAddressCodeAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NewAccountSupplierAddressCodeAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.NewAccountSupplierAddressCodeOperationCompleted Is Nothing) Then
                Me.NewAccountSupplierAddressCodeOperationCompleted = AddressOf Me.OnNewAccountSupplierAddressCodeOperationCompleted
            End If
            Me.InvokeAsync("NewAccountSupplierAddressCode", New Object() {AppName, AppVersion, Param}, Me.NewAccountSupplierAddressCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnNewAccountSupplierAddressCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.NewAccountSupplierAddressCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NewAccountSupplierAddressCodeCompleted(Me, New NewAccountSupplierAddressCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSuppAddrCodeList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSuppAddrCodeList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetSuppAddrCodeList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSuppAddrCodeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetSuppAddrCodeListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSuppAddrCodeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetSuppAddrCodeListOperationCompleted Is Nothing) Then
                Me.GetSuppAddrCodeListOperationCompleted = AddressOf Me.OnGetSuppAddrCodeListOperationCompleted
            End If
            Me.InvokeAsync("GetSuppAddrCodeList", New Object() {AppName, AppVersion, Param}, Me.GetSuppAddrCodeListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSuppAddrCodeListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSuppAddrCodeListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSuppAddrCodeListCompleted(Me, New GetSuppAddrCodeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewExpeditionDownloadTemplate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NewExpeditionDownloadTemplate(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsTemplate As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("NewExpeditionDownloadTemplate", New Object() {AppName, AppVersion, Param, dsTemplate})
            dsTemplate = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub NewExpeditionDownloadTemplateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsTemplate As System.Data.DataSet)
            Me.NewExpeditionDownloadTemplateAsync(AppName, AppVersion, Param, dsTemplate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NewExpeditionDownloadTemplateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsTemplate As System.Data.DataSet, ByVal userState As Object)
            If (Me.NewExpeditionDownloadTemplateOperationCompleted Is Nothing) Then
                Me.NewExpeditionDownloadTemplateOperationCompleted = AddressOf Me.OnNewExpeditionDownloadTemplateOperationCompleted
            End If
            Me.InvokeAsync("NewExpeditionDownloadTemplate", New Object() {AppName, AppVersion, Param, dsTemplate}, Me.NewExpeditionDownloadTemplateOperationCompleted, userState)
        End Sub
        
        Private Sub OnNewExpeditionDownloadTemplateOperationCompleted(ByVal arg As Object)
            If (Not (Me.NewExpeditionDownloadTemplateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NewExpeditionDownloadTemplateCompleted(Me, New NewExpeditionDownloadTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewExpeditionValidate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NewExpeditionValidate(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("NewExpeditionValidate", New Object() {AppName, AppVersion, Param, dsData})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub NewExpeditionValidateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.NewExpeditionValidateAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NewExpeditionValidateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.NewExpeditionValidateOperationCompleted Is Nothing) Then
                Me.NewExpeditionValidateOperationCompleted = AddressOf Me.OnNewExpeditionValidateOperationCompleted
            End If
            Me.InvokeAsync("NewExpeditionValidate", New Object() {AppName, AppVersion, Param, dsData}, Me.NewExpeditionValidateOperationCompleted, userState)
        End Sub
        
        Private Sub OnNewExpeditionValidateOperationCompleted(ByVal arg As Object)
            If (Not (Me.NewExpeditionValidateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NewExpeditionValidateCompleted(Me, New NewExpeditionValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewExpeditionCreate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NewExpeditionCreate(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("NewExpeditionCreate", New Object() {AppName, AppVersion, Param, dsData})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub NewExpeditionCreateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.NewExpeditionCreateAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NewExpeditionCreateAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.NewExpeditionCreateOperationCompleted Is Nothing) Then
                Me.NewExpeditionCreateOperationCompleted = AddressOf Me.OnNewExpeditionCreateOperationCompleted
            End If
            Me.InvokeAsync("NewExpeditionCreate", New Object() {AppName, AppVersion, Param, dsData}, Me.NewExpeditionCreateOperationCompleted, userState)
        End Sub
        
        Private Sub OnNewExpeditionCreateOperationCompleted(ByVal arg As Object)
            If (Not (Me.NewExpeditionCreateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NewExpeditionCreateCompleted(Me, New NewExpeditionCreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoCopyAndReturnCreateAWB", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoCopyAndReturnCreateAWB(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoCopyAndReturnCreateAWB", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoCopyAndReturnCreateAWBAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoCopyAndReturnCreateAWBAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoCopyAndReturnCreateAWBAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoCopyAndReturnCreateAWBOperationCompleted Is Nothing) Then
                Me.AutoCopyAndReturnCreateAWBOperationCompleted = AddressOf Me.OnAutoCopyAndReturnCreateAWBOperationCompleted
            End If
            Me.InvokeAsync("AutoCopyAndReturnCreateAWB", New Object() {AppName, AppVersion, Param}, Me.AutoCopyAndReturnCreateAWBOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoCopyAndReturnCreateAWBOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoCopyAndReturnCreateAWBCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoCopyAndReturnCreateAWBCompleted(Me, New AutoCopyAndReturnCreateAWBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoCopyAndReturnGetTrackNumList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoCopyAndReturnGetTrackNumList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoCopyAndReturnGetTrackNumList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoCopyAndReturnGetTrackNumListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoCopyAndReturnGetTrackNumListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoCopyAndReturnGetTrackNumListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoCopyAndReturnGetTrackNumListOperationCompleted Is Nothing) Then
                Me.AutoCopyAndReturnGetTrackNumListOperationCompleted = AddressOf Me.OnAutoCopyAndReturnGetTrackNumListOperationCompleted
            End If
            Me.InvokeAsync("AutoCopyAndReturnGetTrackNumList", New Object() {AppName, AppVersion, Param}, Me.AutoCopyAndReturnGetTrackNumListOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoCopyAndReturnGetTrackNumListOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoCopyAndReturnGetTrackNumListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoCopyAndReturnGetTrackNumListCompleted(Me, New AutoCopyAndReturnGetTrackNumListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCopyAndReturnTrackNumList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCopyAndReturnTrackNumList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetCopyAndReturnTrackNumList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCopyAndReturnTrackNumListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetCopyAndReturnTrackNumListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCopyAndReturnTrackNumListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetCopyAndReturnTrackNumListOperationCompleted Is Nothing) Then
                Me.GetCopyAndReturnTrackNumListOperationCompleted = AddressOf Me.OnGetCopyAndReturnTrackNumListOperationCompleted
            End If
            Me.InvokeAsync("GetCopyAndReturnTrackNumList", New Object() {AppName, AppVersion, Param}, Me.GetCopyAndReturnTrackNumListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCopyAndReturnTrackNumListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCopyAndReturnTrackNumListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCopyAndReturnTrackNumListCompleted(Me, New GetCopyAndReturnTrackNumListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCopyAndReturnAccountList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCopyAndReturnAccountList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetCopyAndReturnAccountList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCopyAndReturnAccountListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetCopyAndReturnAccountListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCopyAndReturnAccountListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetCopyAndReturnAccountListOperationCompleted Is Nothing) Then
                Me.GetCopyAndReturnAccountListOperationCompleted = AddressOf Me.OnGetCopyAndReturnAccountListOperationCompleted
            End If
            Me.InvokeAsync("GetCopyAndReturnAccountList", New Object() {AppName, AppVersion, Param}, Me.GetCopyAndReturnAccountListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCopyAndReturnAccountListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCopyAndReturnAccountListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCopyAndReturnAccountListCompleted(Me, New GetCopyAndReturnAccountListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSavingRevenueList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateSavingRevenueList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateSavingRevenueList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateSavingRevenueListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdateSavingRevenueListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateSavingRevenueListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateSavingRevenueListOperationCompleted Is Nothing) Then
                Me.UpdateSavingRevenueListOperationCompleted = AddressOf Me.OnUpdateSavingRevenueListOperationCompleted
            End If
            Me.InvokeAsync("UpdateSavingRevenueList", New Object() {AppName, AppVersion, Param}, Me.UpdateSavingRevenueListOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateSavingRevenueListOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateSavingRevenueListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateSavingRevenueListCompleted(Me, New UpdateSavingRevenueListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateETAList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateETAList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateETAList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateETAListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdateETAListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateETAListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateETAListOperationCompleted Is Nothing) Then
                Me.UpdateETAListOperationCompleted = AddressOf Me.OnUpdateETAListOperationCompleted
            End If
            Me.InvokeAsync("UpdateETAList", New Object() {AppName, AppVersion, Param}, Me.UpdateETAListOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateETAListOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateETAListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateETAListCompleted(Me, New UpdateETAListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRateAreaCustomAccountList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateRateAreaCustomAccountList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateRateAreaCustomAccountList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateRateAreaCustomAccountListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdateRateAreaCustomAccountListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateRateAreaCustomAccountListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateRateAreaCustomAccountListOperationCompleted Is Nothing) Then
                Me.UpdateRateAreaCustomAccountListOperationCompleted = AddressOf Me.OnUpdateRateAreaCustomAccountListOperationCompleted
            End If
            Me.InvokeAsync("UpdateRateAreaCustomAccountList", New Object() {AppName, AppVersion, Param}, Me.UpdateRateAreaCustomAccountListOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateRateAreaCustomAccountListOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateRateAreaCustomAccountListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateRateAreaCustomAccountListCompleted(Me, New UpdateRateAreaCustomAccountListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRateCustomList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateRateCustomList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateRateCustomList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateRateCustomListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdateRateCustomListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateRateCustomListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateRateCustomListOperationCompleted Is Nothing) Then
                Me.UpdateRateCustomListOperationCompleted = AddressOf Me.OnUpdateRateCustomListOperationCompleted
            End If
            Me.InvokeAsync("UpdateRateCustomList", New Object() {AppName, AppVersion, Param}, Me.UpdateRateCustomListOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateRateCustomListOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateRateCustomListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateRateCustomListCompleted(Me, New UpdateRateCustomListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRateDCCustomList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateRateDCCustomList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateRateDCCustomList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateRateDCCustomListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdateRateDCCustomListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateRateDCCustomListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateRateDCCustomListOperationCompleted Is Nothing) Then
                Me.UpdateRateDCCustomListOperationCompleted = AddressOf Me.OnUpdateRateDCCustomListOperationCompleted
            End If
            Me.InvokeAsync("UpdateRateDCCustomList", New Object() {AppName, AppVersion, Param}, Me.UpdateRateDCCustomListOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateRateDCCustomListOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateRateDCCustomListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateRateDCCustomListCompleted(Me, New UpdateRateDCCustomListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update3PLRateCustomList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Update3PLRateCustomList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("Update3PLRateCustomList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub Update3PLRateCustomListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.Update3PLRateCustomListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Update3PLRateCustomListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.Update3PLRateCustomListOperationCompleted Is Nothing) Then
                Me.Update3PLRateCustomListOperationCompleted = AddressOf Me.OnUpdate3PLRateCustomListOperationCompleted
            End If
            Me.InvokeAsync("Update3PLRateCustomList", New Object() {AppName, AppVersion, Param}, Me.Update3PLRateCustomListOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdate3PLRateCustomListOperationCompleted(ByVal arg As Object)
            If (Not (Me.Update3PLRateCustomListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Update3PLRateCustomListCompleted(Me, New Update3PLRateCustomListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRateSellerCategoryAreaCustomList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateRateSellerCategoryAreaCustomList(ByVal appname As String, ByVal appversion As String, ByVal param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateRateSellerCategoryAreaCustomList", New Object() {appname, appversion, param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateRateSellerCategoryAreaCustomListAsync(ByVal appname As String, ByVal appversion As String, ByVal param() As Object)
            Me.UpdateRateSellerCategoryAreaCustomListAsync(appname, appversion, param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateRateSellerCategoryAreaCustomListAsync(ByVal appname As String, ByVal appversion As String, ByVal param() As Object, ByVal userState As Object)
            If (Me.UpdateRateSellerCategoryAreaCustomListOperationCompleted Is Nothing) Then
                Me.UpdateRateSellerCategoryAreaCustomListOperationCompleted = AddressOf Me.OnUpdateRateSellerCategoryAreaCustomListOperationCompleted
            End If
            Me.InvokeAsync("UpdateRateSellerCategoryAreaCustomList", New Object() {appname, appversion, param}, Me.UpdateRateSellerCategoryAreaCustomListOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateRateSellerCategoryAreaCustomListOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateRateSellerCategoryAreaCustomListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateRateSellerCategoryAreaCustomListCompleted(Me, New UpdateRateSellerCategoryAreaCustomListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRateSellerSubCategoryAreaCustomList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateRateSellerSubCategoryAreaCustomList(ByVal appname As String, ByVal appversion As String, ByVal param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateRateSellerSubCategoryAreaCustomList", New Object() {appname, appversion, param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateRateSellerSubCategoryAreaCustomListAsync(ByVal appname As String, ByVal appversion As String, ByVal param() As Object)
            Me.UpdateRateSellerSubCategoryAreaCustomListAsync(appname, appversion, param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateRateSellerSubCategoryAreaCustomListAsync(ByVal appname As String, ByVal appversion As String, ByVal param() As Object, ByVal userState As Object)
            If (Me.UpdateRateSellerSubCategoryAreaCustomListOperationCompleted Is Nothing) Then
                Me.UpdateRateSellerSubCategoryAreaCustomListOperationCompleted = AddressOf Me.OnUpdateRateSellerSubCategoryAreaCustomListOperationCompleted
            End If
            Me.InvokeAsync("UpdateRateSellerSubCategoryAreaCustomList", New Object() {appname, appversion, param}, Me.UpdateRateSellerSubCategoryAreaCustomListOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateRateSellerSubCategoryAreaCustomListOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateRateSellerSubCategoryAreaCustomListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateRateSellerSubCategoryAreaCustomListCompleted(Me, New UpdateRateSellerSubCategoryAreaCustomListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRateRentalFleetList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateRateRentalFleetList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateRateRentalFleetList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateRateRentalFleetListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdateRateRentalFleetListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateRateRentalFleetListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateRateRentalFleetListOperationCompleted Is Nothing) Then
                Me.UpdateRateRentalFleetListOperationCompleted = AddressOf Me.OnUpdateRateRentalFleetListOperationCompleted
            End If
            Me.InvokeAsync("UpdateRateRentalFleetList", New Object() {AppName, AppVersion, Param}, Me.UpdateRateRentalFleetListOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateRateRentalFleetListOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateRateRentalFleetListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateRateRentalFleetListCompleted(Me, New UpdateRateRentalFleetListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DraftRAIList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DraftRAIList(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DraftRAIList", New Object() {AppName, AppVersion, Hub, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DraftRAIListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object)
            Me.DraftRAIListAsync(AppName, AppVersion, Hub, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DraftRAIListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Hub As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DraftRAIListOperationCompleted Is Nothing) Then
                Me.DraftRAIListOperationCompleted = AddressOf Me.OnDraftRAIListOperationCompleted
            End If
            Me.InvokeAsync("DraftRAIList", New Object() {AppName, AppVersion, Hub, Param}, Me.DraftRAIListOperationCompleted, userState)
        End Sub
        
        Private Sub OnDraftRAIListOperationCompleted(ByVal arg As Object)
            If (Not (Me.DraftRAIListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DraftRAIListCompleted(Me, New DraftRAIListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetRegionHubList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetRegionHubList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("SetRegionHubList", New Object() {AppName, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetRegionHubListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.SetRegionHubListAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetRegionHubListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.SetRegionHubListOperationCompleted Is Nothing) Then
                Me.SetRegionHubListOperationCompleted = AddressOf Me.OnSetRegionHubListOperationCompleted
            End If
            Me.InvokeAsync("SetRegionHubList", New Object() {AppName, AppVersion, Param, dsData}, Me.SetRegionHubListOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetRegionHubListOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetRegionHubListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetRegionHubListCompleted(Me, New SetRegionHubListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRegionList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRegionList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetRegionList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRegionListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetRegionListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRegionListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetRegionListOperationCompleted Is Nothing) Then
                Me.GetRegionListOperationCompleted = AddressOf Me.OnGetRegionListOperationCompleted
            End If
            Me.InvokeAsync("GetRegionList", New Object() {AppName, AppVersion, Param}, Me.GetRegionListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRegionListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRegionListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRegionListCompleted(Me, New GetRegionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStationList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStationList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetStationList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStationListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetStationListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStationListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetStationListOperationCompleted Is Nothing) Then
                Me.GetStationListOperationCompleted = AddressOf Me.OnGetStationListOperationCompleted
            End If
            Me.InvokeAsync("GetStationList", New Object() {AppName, AppVersion, Param}, Me.GetStationListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStationListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStationListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStationListCompleted(Me, New GetStationListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStationPartnerList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStationPartnerList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetStationPartnerList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStationPartnerListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetStationPartnerListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStationPartnerListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetStationPartnerListOperationCompleted Is Nothing) Then
                Me.GetStationPartnerListOperationCompleted = AddressOf Me.OnGetStationPartnerListOperationCompleted
            End If
            Me.InvokeAsync("GetStationPartnerList", New Object() {AppName, AppVersion, Param}, Me.GetStationPartnerListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStationPartnerListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStationPartnerListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStationPartnerListCompleted(Me, New GetStationPartnerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStationRouteList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStationRouteList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetStationRouteList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStationRouteListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetStationRouteListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStationRouteListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetStationRouteListOperationCompleted Is Nothing) Then
                Me.GetStationRouteListOperationCompleted = AddressOf Me.OnGetStationRouteListOperationCompleted
            End If
            Me.InvokeAsync("GetStationRouteList", New Object() {AppName, AppVersion, Param}, Me.GetStationRouteListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStationRouteListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStationRouteListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStationRouteListCompleted(Me, New GetStationRouteListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountPickupAddressList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountPickupAddressList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAccountPickupAddressList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountPickupAddressListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetAccountPickupAddressListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountPickupAddressListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAccountPickupAddressListOperationCompleted Is Nothing) Then
                Me.GetAccountPickupAddressListOperationCompleted = AddressOf Me.OnGetAccountPickupAddressListOperationCompleted
            End If
            Me.InvokeAsync("GetAccountPickupAddressList", New Object() {AppName, AppVersion, Param}, Me.GetAccountPickupAddressListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountPickupAddressListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountPickupAddressListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountPickupAddressListCompleted(Me, New GetAccountPickupAddressListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetAccountPickupAddressList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetAccountPickupAddressList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SetAccountPickupAddressList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetAccountPickupAddressListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SetAccountPickupAddressListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetAccountPickupAddressListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SetAccountPickupAddressListOperationCompleted Is Nothing) Then
                Me.SetAccountPickupAddressListOperationCompleted = AddressOf Me.OnSetAccountPickupAddressListOperationCompleted
            End If
            Me.InvokeAsync("SetAccountPickupAddressList", New Object() {AppName, AppVersion, Param}, Me.SetAccountPickupAddressListOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetAccountPickupAddressListOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetAccountPickupAddressListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetAccountPickupAddressListCompleted(Me, New SetAccountPickupAddressListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountPickupAddressListByPAccount", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountPickupAddressListByPAccount(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAccountPickupAddressListByPAccount", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountPickupAddressListByPAccountAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetAccountPickupAddressListByPAccountAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountPickupAddressListByPAccountAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAccountPickupAddressListByPAccountOperationCompleted Is Nothing) Then
                Me.GetAccountPickupAddressListByPAccountOperationCompleted = AddressOf Me.OnGetAccountPickupAddressListByPAccountOperationCompleted
            End If
            Me.InvokeAsync("GetAccountPickupAddressListByPAccount", New Object() {AppName, AppVersion, Param}, Me.GetAccountPickupAddressListByPAccountOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountPickupAddressListByPAccountOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountPickupAddressListByPAccountCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountPickupAddressListByPAccountCompleted(Me, New GetAccountPickupAddressListByPAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountPickupListByStation", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountPickupListByStation(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAccountPickupListByStation", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountPickupListByStationAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.GetAccountPickupListByStationAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountPickupListByStationAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAccountPickupListByStationOperationCompleted Is Nothing) Then
                Me.GetAccountPickupListByStationOperationCompleted = AddressOf Me.OnGetAccountPickupListByStationOperationCompleted
            End If
            Me.InvokeAsync("GetAccountPickupListByStation", New Object() {AppName, AppVersion, Station, Param}, Me.GetAccountPickupListByStationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountPickupListByStationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountPickupListByStationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountPickupListByStationCompleted(Me, New GetAccountPickupListByStationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountPickupListByStationZone", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountPickupListByStationZone(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAccountPickupListByStationZone", New Object() {AppName, AppVersion, Station, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountPickupListByStationZoneAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object)
            Me.GetAccountPickupListByStationZoneAsync(AppName, AppVersion, Station, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountPickupListByStationZoneAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Station As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAccountPickupListByStationZoneOperationCompleted Is Nothing) Then
                Me.GetAccountPickupListByStationZoneOperationCompleted = AddressOf Me.OnGetAccountPickupListByStationZoneOperationCompleted
            End If
            Me.InvokeAsync("GetAccountPickupListByStationZone", New Object() {AppName, AppVersion, Station, Param}, Me.GetAccountPickupListByStationZoneOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountPickupListByStationZoneOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountPickupListByStationZoneCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountPickupListByStationZoneCompleted(Me, New GetAccountPickupListByStationZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStationHubList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStationHubList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetStationHubList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStationHubListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetStationHubListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStationHubListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetStationHubListOperationCompleted Is Nothing) Then
                Me.GetStationHubListOperationCompleted = AddressOf Me.OnGetStationHubListOperationCompleted
            End If
            Me.InvokeAsync("GetStationHubList", New Object() {AppName, AppVersion, Param}, Me.GetStationHubListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStationHubListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStationHubListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStationHubListCompleted(Me, New GetStationHubListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHubList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetHubList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetHubList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetHubListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetHubListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetHubListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetHubListOperationCompleted Is Nothing) Then
                Me.GetHubListOperationCompleted = AddressOf Me.OnGetHubListOperationCompleted
            End If
            Me.InvokeAsync("GetHubList", New Object() {AppName, AppVersion, Param}, Me.GetHubListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetHubListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetHubListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetHubListCompleted(Me, New GetHubListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHubPartnerList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetHubPartnerList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetHubPartnerList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetHubPartnerListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetHubPartnerListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetHubPartnerListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetHubPartnerListOperationCompleted Is Nothing) Then
                Me.GetHubPartnerListOperationCompleted = AddressOf Me.OnGetHubPartnerListOperationCompleted
            End If
            Me.InvokeAsync("GetHubPartnerList", New Object() {AppName, AppVersion, Param}, Me.GetHubPartnerListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetHubPartnerListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetHubPartnerListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetHubPartnerListCompleted(Me, New GetHubPartnerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRackList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRackList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetRackList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRackListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetRackListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRackListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetRackListOperationCompleted Is Nothing) Then
                Me.GetRackListOperationCompleted = AddressOf Me.OnGetRackListOperationCompleted
            End If
            Me.InvokeAsync("GetRackList", New Object() {AppName, AppVersion, Param}, Me.GetRackListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRackListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRackListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRackListCompleted(Me, New GetRackListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHubExpeditionList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetHubExpeditionList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetHubExpeditionList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetHubExpeditionListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetHubExpeditionListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetHubExpeditionListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetHubExpeditionListOperationCompleted Is Nothing) Then
                Me.GetHubExpeditionListOperationCompleted = AddressOf Me.OnGetHubExpeditionListOperationCompleted
            End If
            Me.InvokeAsync("GetHubExpeditionList", New Object() {AppName, AppVersion, Param}, Me.GetHubExpeditionListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetHubExpeditionListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetHubExpeditionListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetHubExpeditionListCompleted(Me, New GetHubExpeditionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReprintKeyword", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReprintKeyword(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetReprintKeyword", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetReprintKeywordAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetReprintKeywordAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetReprintKeywordAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetReprintKeywordOperationCompleted Is Nothing) Then
                Me.GetReprintKeywordOperationCompleted = AddressOf Me.OnGetReprintKeywordOperationCompleted
            End If
            Me.InvokeAsync("GetReprintKeyword", New Object() {AppName, AppVersion, Param}, Me.GetReprintKeywordOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetReprintKeywordOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetReprintKeywordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetReprintKeywordCompleted(Me, New GetReprintKeywordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIncomingSuratJalanList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetIncomingSuratJalanList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetIncomingSuratJalanList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetIncomingSuratJalanListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetIncomingSuratJalanListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetIncomingSuratJalanListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetIncomingSuratJalanListOperationCompleted Is Nothing) Then
                Me.GetIncomingSuratJalanListOperationCompleted = AddressOf Me.OnGetIncomingSuratJalanListOperationCompleted
            End If
            Me.InvokeAsync("GetIncomingSuratJalanList", New Object() {AppName, AppVersion, Param}, Me.GetIncomingSuratJalanListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetIncomingSuratJalanListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetIncomingSuratJalanListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetIncomingSuratJalanListCompleted(Me, New GetIncomingSuratJalanListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryTools", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function QueryTools(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("QueryTools", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub QueryToolsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.QueryToolsAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub QueryToolsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.QueryToolsOperationCompleted Is Nothing) Then
                Me.QueryToolsOperationCompleted = AddressOf Me.OnQueryToolsOperationCompleted
            End If
            Me.InvokeAsync("QueryTools", New Object() {AppName, AppVersion, Param}, Me.QueryToolsOperationCompleted, userState)
        End Sub
        
        Private Sub OnQueryToolsOperationCompleted(ByVal arg As Object)
            If (Not (Me.QueryToolsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent QueryToolsCompleted(Me, New QueryToolsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryCallProcedureDatatable", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function QueryCallProcedureDatatable(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("QueryCallProcedureDatatable", New Object() {AppName, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub QueryCallProcedureDatatableAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.QueryCallProcedureDatatableAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub QueryCallProcedureDatatableAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.QueryCallProcedureDatatableOperationCompleted Is Nothing) Then
                Me.QueryCallProcedureDatatableOperationCompleted = AddressOf Me.OnQueryCallProcedureDatatableOperationCompleted
            End If
            Me.InvokeAsync("QueryCallProcedureDatatable", New Object() {AppName, AppVersion, Param, dsData}, Me.QueryCallProcedureDatatableOperationCompleted, userState)
        End Sub
        
        Private Sub OnQueryCallProcedureDatatableOperationCompleted(ByVal arg As Object)
            If (Not (Me.QueryCallProcedureDatatableCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent QueryCallProcedureDatatableCompleted(Me, New QueryCallProcedureDatatableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PettyCashSubCategoryList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PettyCashSubCategoryList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PettyCashSubCategoryList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PettyCashSubCategoryListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PettyCashSubCategoryListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PettyCashSubCategoryListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PettyCashSubCategoryListOperationCompleted Is Nothing) Then
                Me.PettyCashSubCategoryListOperationCompleted = AddressOf Me.OnPettyCashSubCategoryListOperationCompleted
            End If
            Me.InvokeAsync("PettyCashSubCategoryList", New Object() {AppName, AppVersion, Param}, Me.PettyCashSubCategoryListOperationCompleted, userState)
        End Sub
        
        Private Sub OnPettyCashSubCategoryListOperationCompleted(ByVal arg As Object)
            If (Not (Me.PettyCashSubCategoryListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PettyCashSubCategoryListCompleted(Me, New PettyCashSubCategoryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PettyCashReportList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PettyCashReportList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PettyCashReportList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PettyCashReportListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PettyCashReportListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PettyCashReportListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PettyCashReportListOperationCompleted Is Nothing) Then
                Me.PettyCashReportListOperationCompleted = AddressOf Me.OnPettyCashReportListOperationCompleted
            End If
            Me.InvokeAsync("PettyCashReportList", New Object() {AppName, AppVersion, Param}, Me.PettyCashReportListOperationCompleted, userState)
        End Sub
        
        Private Sub OnPettyCashReportListOperationCompleted(ByVal arg As Object)
            If (Not (Me.PettyCashReportListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PettyCashReportListCompleted(Me, New PettyCashReportListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PettyCashHubExpenseAdd", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PettyCashHubExpenseAdd(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PettyCashHubExpenseAdd", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PettyCashHubExpenseAddAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PettyCashHubExpenseAddAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PettyCashHubExpenseAddAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PettyCashHubExpenseAddOperationCompleted Is Nothing) Then
                Me.PettyCashHubExpenseAddOperationCompleted = AddressOf Me.OnPettyCashHubExpenseAddOperationCompleted
            End If
            Me.InvokeAsync("PettyCashHubExpenseAdd", New Object() {AppName, AppVersion, Param}, Me.PettyCashHubExpenseAddOperationCompleted, userState)
        End Sub
        
        Private Sub OnPettyCashHubExpenseAddOperationCompleted(ByVal arg As Object)
            If (Not (Me.PettyCashHubExpenseAddCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PettyCashHubExpenseAddCompleted(Me, New PettyCashHubExpenseAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PettyCashHubExpenseDelete", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PettyCashHubExpenseDelete(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PettyCashHubExpenseDelete", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PettyCashHubExpenseDeleteAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PettyCashHubExpenseDeleteAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PettyCashHubExpenseDeleteAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PettyCashHubExpenseDeleteOperationCompleted Is Nothing) Then
                Me.PettyCashHubExpenseDeleteOperationCompleted = AddressOf Me.OnPettyCashHubExpenseDeleteOperationCompleted
            End If
            Me.InvokeAsync("PettyCashHubExpenseDelete", New Object() {AppName, AppVersion, Param}, Me.PettyCashHubExpenseDeleteOperationCompleted, userState)
        End Sub
        
        Private Sub OnPettyCashHubExpenseDeleteOperationCompleted(ByVal arg As Object)
            If (Not (Me.PettyCashHubExpenseDeleteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PettyCashHubExpenseDeleteCompleted(Me, New PettyCashHubExpenseDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PettyCashHubExpenseApproval", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PettyCashHubExpenseApproval(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PettyCashHubExpenseApproval", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PettyCashHubExpenseApprovalAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PettyCashHubExpenseApprovalAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PettyCashHubExpenseApprovalAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PettyCashHubExpenseApprovalOperationCompleted Is Nothing) Then
                Me.PettyCashHubExpenseApprovalOperationCompleted = AddressOf Me.OnPettyCashHubExpenseApprovalOperationCompleted
            End If
            Me.InvokeAsync("PettyCashHubExpenseApproval", New Object() {AppName, AppVersion, Param}, Me.PettyCashHubExpenseApprovalOperationCompleted, userState)
        End Sub
        
        Private Sub OnPettyCashHubExpenseApprovalOperationCompleted(ByVal arg As Object)
            If (Not (Me.PettyCashHubExpenseApprovalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PettyCashHubExpenseApprovalCompleted(Me, New PettyCashHubExpenseApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PettyCashHubExpenseDeleteRecord", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PettyCashHubExpenseDeleteRecord(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PettyCashHubExpenseDeleteRecord", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PettyCashHubExpenseDeleteRecordAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PettyCashHubExpenseDeleteRecordAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PettyCashHubExpenseDeleteRecordAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PettyCashHubExpenseDeleteRecordOperationCompleted Is Nothing) Then
                Me.PettyCashHubExpenseDeleteRecordOperationCompleted = AddressOf Me.OnPettyCashHubExpenseDeleteRecordOperationCompleted
            End If
            Me.InvokeAsync("PettyCashHubExpenseDeleteRecord", New Object() {AppName, AppVersion, Param}, Me.PettyCashHubExpenseDeleteRecordOperationCompleted, userState)
        End Sub
        
        Private Sub OnPettyCashHubExpenseDeleteRecordOperationCompleted(ByVal arg As Object)
            If (Not (Me.PettyCashHubExpenseDeleteRecordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PettyCashHubExpenseDeleteRecordCompleted(Me, New PettyCashHubExpenseDeleteRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PettyCashHubFindRecord", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PettyCashHubFindRecord(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PettyCashHubFindRecord", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PettyCashHubFindRecordAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PettyCashHubFindRecordAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PettyCashHubFindRecordAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PettyCashHubFindRecordOperationCompleted Is Nothing) Then
                Me.PettyCashHubFindRecordOperationCompleted = AddressOf Me.OnPettyCashHubFindRecordOperationCompleted
            End If
            Me.InvokeAsync("PettyCashHubFindRecord", New Object() {AppName, AppVersion, Param}, Me.PettyCashHubFindRecordOperationCompleted, userState)
        End Sub
        
        Private Sub OnPettyCashHubFindRecordOperationCompleted(ByVal arg As Object)
            If (Not (Me.PettyCashHubFindRecordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PettyCashHubFindRecordCompleted(Me, New PettyCashHubFindRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PettyCashHubFinalizeRecord", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PettyCashHubFinalizeRecord(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PettyCashHubFinalizeRecord", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PettyCashHubFinalizeRecordAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PettyCashHubFinalizeRecordAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PettyCashHubFinalizeRecordAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PettyCashHubFinalizeRecordOperationCompleted Is Nothing) Then
                Me.PettyCashHubFinalizeRecordOperationCompleted = AddressOf Me.OnPettyCashHubFinalizeRecordOperationCompleted
            End If
            Me.InvokeAsync("PettyCashHubFinalizeRecord", New Object() {AppName, AppVersion, Param}, Me.PettyCashHubFinalizeRecordOperationCompleted, userState)
        End Sub
        
        Private Sub OnPettyCashHubFinalizeRecordOperationCompleted(ByVal arg As Object)
            If (Not (Me.PettyCashHubFinalizeRecordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PettyCashHubFinalizeRecordCompleted(Me, New PettyCashHubFinalizeRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PettyCashHubProcessJournal", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PettyCashHubProcessJournal(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PettyCashHubProcessJournal", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PettyCashHubProcessJournalAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PettyCashHubProcessJournalAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PettyCashHubProcessJournalAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PettyCashHubProcessJournalOperationCompleted Is Nothing) Then
                Me.PettyCashHubProcessJournalOperationCompleted = AddressOf Me.OnPettyCashHubProcessJournalOperationCompleted
            End If
            Me.InvokeAsync("PettyCashHubProcessJournal", New Object() {AppName, AppVersion, Param}, Me.PettyCashHubProcessJournalOperationCompleted, userState)
        End Sub
        
        Private Sub OnPettyCashHubProcessJournalOperationCompleted(ByVal arg As Object)
            If (Not (Me.PettyCashHubProcessJournalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PettyCashHubProcessJournalCompleted(Me, New PettyCashHubProcessJournalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DocumentUploadCategoryList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DocumentUploadCategoryList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DocumentUploadCategoryList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DocumentUploadCategoryListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.DocumentUploadCategoryListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DocumentUploadCategoryListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DocumentUploadCategoryListOperationCompleted Is Nothing) Then
                Me.DocumentUploadCategoryListOperationCompleted = AddressOf Me.OnDocumentUploadCategoryListOperationCompleted
            End If
            Me.InvokeAsync("DocumentUploadCategoryList", New Object() {AppName, AppVersion, Param}, Me.DocumentUploadCategoryListOperationCompleted, userState)
        End Sub
        
        Private Sub OnDocumentUploadCategoryListOperationCompleted(ByVal arg As Object)
            If (Not (Me.DocumentUploadCategoryListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DocumentUploadCategoryListCompleted(Me, New DocumentUploadCategoryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DocumentUploadAddFile", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DocumentUploadAddFile(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DocumentUploadAddFile", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DocumentUploadAddFileAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.DocumentUploadAddFileAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DocumentUploadAddFileAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DocumentUploadAddFileOperationCompleted Is Nothing) Then
                Me.DocumentUploadAddFileOperationCompleted = AddressOf Me.OnDocumentUploadAddFileOperationCompleted
            End If
            Me.InvokeAsync("DocumentUploadAddFile", New Object() {AppName, AppVersion, Param}, Me.DocumentUploadAddFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnDocumentUploadAddFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.DocumentUploadAddFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DocumentUploadAddFileCompleted(Me, New DocumentUploadAddFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DocumentUploadFindRecord", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DocumentUploadFindRecord(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("DocumentUploadFindRecord", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DocumentUploadFindRecordAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.DocumentUploadFindRecordAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DocumentUploadFindRecordAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.DocumentUploadFindRecordOperationCompleted Is Nothing) Then
                Me.DocumentUploadFindRecordOperationCompleted = AddressOf Me.OnDocumentUploadFindRecordOperationCompleted
            End If
            Me.InvokeAsync("DocumentUploadFindRecord", New Object() {AppName, AppVersion, Param}, Me.DocumentUploadFindRecordOperationCompleted, userState)
        End Sub
        
        Private Sub OnDocumentUploadFindRecordOperationCompleted(ByVal arg As Object)
            If (Not (Me.DocumentUploadFindRecordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DocumentUploadFindRecordCompleted(Me, New DocumentUploadFindRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TanyaDataITTokoCategoryList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TanyaDataITTokoCategoryList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("TanyaDataITTokoCategoryList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub TanyaDataITTokoCategoryListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.TanyaDataITTokoCategoryListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TanyaDataITTokoCategoryListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.TanyaDataITTokoCategoryListOperationCompleted Is Nothing) Then
                Me.TanyaDataITTokoCategoryListOperationCompleted = AddressOf Me.OnTanyaDataITTokoCategoryListOperationCompleted
            End If
            Me.InvokeAsync("TanyaDataITTokoCategoryList", New Object() {AppName, AppVersion, Param}, Me.TanyaDataITTokoCategoryListOperationCompleted, userState)
        End Sub
        
        Private Sub OnTanyaDataITTokoCategoryListOperationCompleted(ByVal arg As Object)
            If (Not (Me.TanyaDataITTokoCategoryListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TanyaDataITTokoCategoryListCompleted(Me, New TanyaDataITTokoCategoryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TanyaDataITTokoGetData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TanyaDataITTokoGetData(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("TanyaDataITTokoGetData", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub TanyaDataITTokoGetDataAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.TanyaDataITTokoGetDataAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TanyaDataITTokoGetDataAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.TanyaDataITTokoGetDataOperationCompleted Is Nothing) Then
                Me.TanyaDataITTokoGetDataOperationCompleted = AddressOf Me.OnTanyaDataITTokoGetDataOperationCompleted
            End If
            Me.InvokeAsync("TanyaDataITTokoGetData", New Object() {AppName, AppVersion, Param}, Me.TanyaDataITTokoGetDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnTanyaDataITTokoGetDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.TanyaDataITTokoGetDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TanyaDataITTokoGetDataCompleted(Me, New TanyaDataITTokoGetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TanyaDataITTokoEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TanyaDataITTokoEmail(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("TanyaDataITTokoEmail", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub TanyaDataITTokoEmailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.TanyaDataITTokoEmailAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TanyaDataITTokoEmailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.TanyaDataITTokoEmailOperationCompleted Is Nothing) Then
                Me.TanyaDataITTokoEmailOperationCompleted = AddressOf Me.OnTanyaDataITTokoEmailOperationCompleted
            End If
            Me.InvokeAsync("TanyaDataITTokoEmail", New Object() {AppName, AppVersion, Param}, Me.TanyaDataITTokoEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnTanyaDataITTokoEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.TanyaDataITTokoEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TanyaDataITTokoEmailCompleted(Me, New TanyaDataITTokoEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLoginByUserAndType", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLoginByUserAndType(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetLoginByUserAndType", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLoginByUserAndTypeAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetLoginByUserAndTypeAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLoginByUserAndTypeAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetLoginByUserAndTypeOperationCompleted Is Nothing) Then
                Me.GetLoginByUserAndTypeOperationCompleted = AddressOf Me.OnGetLoginByUserAndTypeOperationCompleted
            End If
            Me.InvokeAsync("GetLoginByUserAndType", New Object() {AppName, AppVersion, Param}, Me.GetLoginByUserAndTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLoginByUserAndTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLoginByUserAndTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLoginByUserAndTypeCompleted(Me, New GetLoginByUserAndTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLoginByUserAndType", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateLoginByUserAndType(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateLoginByUserAndType", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateLoginByUserAndTypeAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdateLoginByUserAndTypeAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateLoginByUserAndTypeAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateLoginByUserAndTypeOperationCompleted Is Nothing) Then
                Me.UpdateLoginByUserAndTypeOperationCompleted = AddressOf Me.OnUpdateLoginByUserAndTypeOperationCompleted
            End If
            Me.InvokeAsync("UpdateLoginByUserAndType", New Object() {AppName, AppVersion, Param}, Me.UpdateLoginByUserAndTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateLoginByUserAndTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateLoginByUserAndTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateLoginByUserAndTypeCompleted(Me, New UpdateLoginByUserAndTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountSupplierIndomaretList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountSupplierIndomaretList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAccountSupplierIndomaretList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountSupplierIndomaretListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetAccountSupplierIndomaretListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountSupplierIndomaretListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAccountSupplierIndomaretListOperationCompleted Is Nothing) Then
                Me.GetAccountSupplierIndomaretListOperationCompleted = AddressOf Me.OnGetAccountSupplierIndomaretListOperationCompleted
            End If
            Me.InvokeAsync("GetAccountSupplierIndomaretList", New Object() {AppName, AppVersion, Param}, Me.GetAccountSupplierIndomaretListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountSupplierIndomaretListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountSupplierIndomaretListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountSupplierIndomaretListCompleted(Me, New GetAccountSupplierIndomaretListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAccountSupplierIndomaret", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateAccountSupplierIndomaret(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateAccountSupplierIndomaret", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateAccountSupplierIndomaretAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdateAccountSupplierIndomaretAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateAccountSupplierIndomaretAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateAccountSupplierIndomaretOperationCompleted Is Nothing) Then
                Me.UpdateAccountSupplierIndomaretOperationCompleted = AddressOf Me.OnUpdateAccountSupplierIndomaretOperationCompleted
            End If
            Me.InvokeAsync("UpdateAccountSupplierIndomaret", New Object() {AppName, AppVersion, Param}, Me.UpdateAccountSupplierIndomaretOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateAccountSupplierIndomaretOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateAccountSupplierIndomaretCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateAccountSupplierIndomaretCompleted(Me, New UpdateAccountSupplierIndomaretCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReversePickupOAwb", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReversePickupOAwb(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("GetReversePickupOAwb", New Object() {AppName, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetReversePickupOAwbAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.GetReversePickupOAwbAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetReversePickupOAwbAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.GetReversePickupOAwbOperationCompleted Is Nothing) Then
                Me.GetReversePickupOAwbOperationCompleted = AddressOf Me.OnGetReversePickupOAwbOperationCompleted
            End If
            Me.InvokeAsync("GetReversePickupOAwb", New Object() {AppName, AppVersion, Param, dsData}, Me.GetReversePickupOAwbOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetReversePickupOAwbOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetReversePickupOAwbCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetReversePickupOAwbCompleted(Me, New GetReversePickupOAwbCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewTransactionDraftBySalesOrder", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NewTransactionDraftBySalesOrder(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("NewTransactionDraftBySalesOrder", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub NewTransactionDraftBySalesOrderAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.NewTransactionDraftBySalesOrderAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NewTransactionDraftBySalesOrderAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.NewTransactionDraftBySalesOrderOperationCompleted Is Nothing) Then
                Me.NewTransactionDraftBySalesOrderOperationCompleted = AddressOf Me.OnNewTransactionDraftBySalesOrderOperationCompleted
            End If
            Me.InvokeAsync("NewTransactionDraftBySalesOrder", New Object() {AppName, AppVersion, Param}, Me.NewTransactionDraftBySalesOrderOperationCompleted, userState)
        End Sub
        
        Private Sub OnNewTransactionDraftBySalesOrderOperationCompleted(ByVal arg As Object)
            If (Not (Me.NewTransactionDraftBySalesOrderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NewTransactionDraftBySalesOrderCompleted(Me, New NewTransactionDraftBySalesOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewTransactionBySalesOrder", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NewTransactionBySalesOrder(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("NewTransactionBySalesOrder", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub NewTransactionBySalesOrderAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.NewTransactionBySalesOrderAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NewTransactionBySalesOrderAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.NewTransactionBySalesOrderOperationCompleted Is Nothing) Then
                Me.NewTransactionBySalesOrderOperationCompleted = AddressOf Me.OnNewTransactionBySalesOrderOperationCompleted
            End If
            Me.InvokeAsync("NewTransactionBySalesOrder", New Object() {AppName, AppVersion, Param}, Me.NewTransactionBySalesOrderOperationCompleted, userState)
        End Sub
        
        Private Sub OnNewTransactionBySalesOrderOperationCompleted(ByVal arg As Object)
            If (Not (Me.NewTransactionBySalesOrderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NewTransactionBySalesOrderCompleted(Me, New NewTransactionBySalesOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewTransactionDraftECommerce", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NewTransactionDraftECommerce(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("NewTransactionDraftECommerce", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub NewTransactionDraftECommerceAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.NewTransactionDraftECommerceAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NewTransactionDraftECommerceAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.NewTransactionDraftECommerceOperationCompleted Is Nothing) Then
                Me.NewTransactionDraftECommerceOperationCompleted = AddressOf Me.OnNewTransactionDraftECommerceOperationCompleted
            End If
            Me.InvokeAsync("NewTransactionDraftECommerce", New Object() {AppName, AppVersion, Param}, Me.NewTransactionDraftECommerceOperationCompleted, userState)
        End Sub
        
        Private Sub OnNewTransactionDraftECommerceOperationCompleted(ByVal arg As Object)
            If (Not (Me.NewTransactionDraftECommerceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NewTransactionDraftECommerceCompleted(Me, New NewTransactionDraftECommerceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewTransactionECommerce", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NewTransactionECommerce(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("NewTransactionECommerce", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub NewTransactionECommerceAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.NewTransactionECommerceAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NewTransactionECommerceAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.NewTransactionECommerceOperationCompleted Is Nothing) Then
                Me.NewTransactionECommerceOperationCompleted = AddressOf Me.OnNewTransactionECommerceOperationCompleted
            End If
            Me.InvokeAsync("NewTransactionECommerce", New Object() {AppName, AppVersion, Param}, Me.NewTransactionECommerceOperationCompleted, userState)
        End Sub
        
        Private Sub OnNewTransactionECommerceOperationCompleted(ByVal arg As Object)
            If (Not (Me.NewTransactionECommerceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NewTransactionECommerceCompleted(Me, New NewTransactionECommerceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateTransactionDeliveryInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateTransactionDeliveryInfo(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateTransactionDeliveryInfo", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateTransactionDeliveryInfoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdateTransactionDeliveryInfoAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateTransactionDeliveryInfoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateTransactionDeliveryInfoOperationCompleted Is Nothing) Then
                Me.UpdateTransactionDeliveryInfoOperationCompleted = AddressOf Me.OnUpdateTransactionDeliveryInfoOperationCompleted
            End If
            Me.InvokeAsync("UpdateTransactionDeliveryInfo", New Object() {AppName, AppVersion, Param}, Me.UpdateTransactionDeliveryInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateTransactionDeliveryInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateTransactionDeliveryInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateTransactionDeliveryInfoCompleted(Me, New UpdateTransactionDeliveryInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewTransactionBatch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function NewTransactionBatch(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("NewTransactionBatch", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub NewTransactionBatchAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.NewTransactionBatchAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub NewTransactionBatchAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.NewTransactionBatchOperationCompleted Is Nothing) Then
                Me.NewTransactionBatchOperationCompleted = AddressOf Me.OnNewTransactionBatchOperationCompleted
            End If
            Me.InvokeAsync("NewTransactionBatch", New Object() {AppName, AppVersion, Param}, Me.NewTransactionBatchOperationCompleted, userState)
        End Sub
        
        Private Sub OnNewTransactionBatchOperationCompleted(ByVal arg As Object)
            If (Not (Me.NewTransactionBatchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent NewTransactionBatchCompleted(Me, New NewTransactionBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExpireNewTransaction", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExpireNewTransaction(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ExpireNewTransaction", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExpireNewTransactionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ExpireNewTransactionAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExpireNewTransactionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ExpireNewTransactionOperationCompleted Is Nothing) Then
                Me.ExpireNewTransactionOperationCompleted = AddressOf Me.OnExpireNewTransactionOperationCompleted
            End If
            Me.InvokeAsync("ExpireNewTransaction", New Object() {AppName, AppVersion, Param}, Me.ExpireNewTransactionOperationCompleted, userState)
        End Sub
        
        Private Sub OnExpireNewTransactionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExpireNewTransactionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExpireNewTransactionCompleted(Me, New ExpireNewTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactionData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTransactionData(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetTransactionData", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTransactionDataAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetTransactionDataAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTransactionDataAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetTransactionDataOperationCompleted Is Nothing) Then
                Me.GetTransactionDataOperationCompleted = AddressOf Me.OnGetTransactionDataOperationCompleted
            End If
            Me.InvokeAsync("GetTransactionData", New Object() {AppName, AppVersion, Param}, Me.GetTransactionDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTransactionDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTransactionDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTransactionDataCompleted(Me, New GetTransactionDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateTransaction", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateTransaction(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateTransaction", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateTransactionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdateTransactionAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateTransactionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateTransactionOperationCompleted Is Nothing) Then
                Me.UpdateTransactionOperationCompleted = AddressOf Me.OnUpdateTransactionOperationCompleted
            End If
            Me.InvokeAsync("UpdateTransaction", New Object() {AppName, AppVersion, Param}, Me.UpdateTransactionOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateTransactionOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateTransactionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateTransactionCompleted(Me, New UpdateTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactionUpdateLogChangeType", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTransactionUpdateLogChangeType(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetTransactionUpdateLogChangeType", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTransactionUpdateLogChangeTypeAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetTransactionUpdateLogChangeTypeAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTransactionUpdateLogChangeTypeAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetTransactionUpdateLogChangeTypeOperationCompleted Is Nothing) Then
                Me.GetTransactionUpdateLogChangeTypeOperationCompleted = AddressOf Me.OnGetTransactionUpdateLogChangeTypeOperationCompleted
            End If
            Me.InvokeAsync("GetTransactionUpdateLogChangeType", New Object() {AppName, AppVersion, Param}, Me.GetTransactionUpdateLogChangeTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTransactionUpdateLogChangeTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTransactionUpdateLogChangeTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTransactionUpdateLogChangeTypeCompleted(Me, New GetTransactionUpdateLogChangeTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoOrderSwitchKeepFallback", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoOrderSwitchKeepFallback(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoOrderSwitchKeepFallback", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoOrderSwitchKeepFallbackAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoOrderSwitchKeepFallbackAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoOrderSwitchKeepFallbackAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoOrderSwitchKeepFallbackOperationCompleted Is Nothing) Then
                Me.AutoOrderSwitchKeepFallbackOperationCompleted = AddressOf Me.OnAutoOrderSwitchKeepFallbackOperationCompleted
            End If
            Me.InvokeAsync("AutoOrderSwitchKeepFallback", New Object() {AppName, AppVersion, Param}, Me.AutoOrderSwitchKeepFallbackOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoOrderSwitchKeepFallbackOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoOrderSwitchKeepFallbackCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoOrderSwitchKeepFallbackCompleted(Me, New AutoOrderSwitchKeepFallbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoOrderSwitchKeepFallbackExpress", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoOrderSwitchKeepFallbackExpress(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoOrderSwitchKeepFallbackExpress", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoOrderSwitchKeepFallbackExpressAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoOrderSwitchKeepFallbackExpressAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoOrderSwitchKeepFallbackExpressAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoOrderSwitchKeepFallbackExpressOperationCompleted Is Nothing) Then
                Me.AutoOrderSwitchKeepFallbackExpressOperationCompleted = AddressOf Me.OnAutoOrderSwitchKeepFallbackExpressOperationCompleted
            End If
            Me.InvokeAsync("AutoOrderSwitchKeepFallbackExpress", New Object() {AppName, AppVersion, Param}, Me.AutoOrderSwitchKeepFallbackExpressOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoOrderSwitchKeepFallbackExpressOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoOrderSwitchKeepFallbackExpressCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoOrderSwitchKeepFallbackExpressCompleted(Me, New AutoOrderSwitchKeepFallbackExpressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoOrderSwitchKeepFallbackRegular", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoOrderSwitchKeepFallbackRegular(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoOrderSwitchKeepFallbackRegular", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoOrderSwitchKeepFallbackRegularAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoOrderSwitchKeepFallbackRegularAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoOrderSwitchKeepFallbackRegularAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoOrderSwitchKeepFallbackRegularOperationCompleted Is Nothing) Then
                Me.AutoOrderSwitchKeepFallbackRegularOperationCompleted = AddressOf Me.OnAutoOrderSwitchKeepFallbackRegularOperationCompleted
            End If
            Me.InvokeAsync("AutoOrderSwitchKeepFallbackRegular", New Object() {AppName, AppVersion, Param}, Me.AutoOrderSwitchKeepFallbackRegularOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoOrderSwitchKeepFallbackRegularOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoOrderSwitchKeepFallbackRegularCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoOrderSwitchKeepFallbackRegularCompleted(Me, New AutoOrderSwitchKeepFallbackRegularCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoOrderSwitchKeepFallbackSameday", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoOrderSwitchKeepFallbackSameday(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoOrderSwitchKeepFallbackSameday", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoOrderSwitchKeepFallbackSamedayAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoOrderSwitchKeepFallbackSamedayAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoOrderSwitchKeepFallbackSamedayAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoOrderSwitchKeepFallbackSamedayOperationCompleted Is Nothing) Then
                Me.AutoOrderSwitchKeepFallbackSamedayOperationCompleted = AddressOf Me.OnAutoOrderSwitchKeepFallbackSamedayOperationCompleted
            End If
            Me.InvokeAsync("AutoOrderSwitchKeepFallbackSameday", New Object() {AppName, AppVersion, Param}, Me.AutoOrderSwitchKeepFallbackSamedayOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoOrderSwitchKeepFallbackSamedayOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoOrderSwitchKeepFallbackSamedayCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoOrderSwitchKeepFallbackSamedayCompleted(Me, New AutoOrderSwitchKeepFallbackSamedayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoOrderSwitchKeepFallbackSamedayMobil", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoOrderSwitchKeepFallbackSamedayMobil(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoOrderSwitchKeepFallbackSamedayMobil", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoOrderSwitchKeepFallbackSamedayMobilAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoOrderSwitchKeepFallbackSamedayMobilAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoOrderSwitchKeepFallbackSamedayMobilAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoOrderSwitchKeepFallbackSamedayMobilOperationCompleted Is Nothing) Then
                Me.AutoOrderSwitchKeepFallbackSamedayMobilOperationCompleted = AddressOf Me.OnAutoOrderSwitchKeepFallbackSamedayMobilOperationCompleted
            End If
            Me.InvokeAsync("AutoOrderSwitchKeepFallbackSamedayMobil", New Object() {AppName, AppVersion, Param}, Me.AutoOrderSwitchKeepFallbackSamedayMobilOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoOrderSwitchKeepFallbackSamedayMobilOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoOrderSwitchKeepFallbackSamedayMobilCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoOrderSwitchKeepFallbackSamedayMobilCompleted(Me, New AutoOrderSwitchKeepFallbackSamedayMobilCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoOrderDoorPickup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoOrderDoorPickup(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoOrderDoorPickup", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoOrderDoorPickupAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoOrderDoorPickupAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoOrderDoorPickupAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoOrderDoorPickupOperationCompleted Is Nothing) Then
                Me.AutoOrderDoorPickupOperationCompleted = AddressOf Me.OnAutoOrderDoorPickupOperationCompleted
            End If
            Me.InvokeAsync("AutoOrderDoorPickup", New Object() {AppName, AppVersion, Param}, Me.AutoOrderDoorPickupOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoOrderDoorPickupOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoOrderDoorPickupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoOrderDoorPickupCompleted(Me, New AutoOrderDoorPickupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoOrderDoorPickupUpdateStatusHOS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoOrderDoorPickupUpdateStatusHOS(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoOrderDoorPickupUpdateStatusHOS", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoOrderDoorPickupUpdateStatusHOSAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoOrderDoorPickupUpdateStatusHOSAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoOrderDoorPickupUpdateStatusHOSAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoOrderDoorPickupUpdateStatusHOSOperationCompleted Is Nothing) Then
                Me.AutoOrderDoorPickupUpdateStatusHOSOperationCompleted = AddressOf Me.OnAutoOrderDoorPickupUpdateStatusHOSOperationCompleted
            End If
            Me.InvokeAsync("AutoOrderDoorPickupUpdateStatusHOS", New Object() {AppName, AppVersion, Param}, Me.AutoOrderDoorPickupUpdateStatusHOSOperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoOrderDoorPickupUpdateStatusHOSOperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoOrderDoorPickupUpdateStatusHOSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoOrderDoorPickupUpdateStatusHOSCompleted(Me, New AutoOrderDoorPickupUpdateStatusHOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoOrderNewTransactionV2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AutoOrderNewTransactionV2(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("AutoOrderNewTransactionV2", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub AutoOrderNewTransactionV2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.AutoOrderNewTransactionV2Async(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AutoOrderNewTransactionV2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.AutoOrderNewTransactionV2OperationCompleted Is Nothing) Then
                Me.AutoOrderNewTransactionV2OperationCompleted = AddressOf Me.OnAutoOrderNewTransactionV2OperationCompleted
            End If
            Me.InvokeAsync("AutoOrderNewTransactionV2", New Object() {AppName, AppVersion, Param}, Me.AutoOrderNewTransactionV2OperationCompleted, userState)
        End Sub
        
        Private Sub OnAutoOrderNewTransactionV2OperationCompleted(ByVal arg As Object)
            If (Not (Me.AutoOrderNewTransactionV2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AutoOrderNewTransactionV2Completed(Me, New AutoOrderNewTransactionV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFavoriteAddress", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateFavoriteAddress(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateFavoriteAddress", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateFavoriteAddressAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdateFavoriteAddressAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateFavoriteAddressAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateFavoriteAddressOperationCompleted Is Nothing) Then
                Me.UpdateFavoriteAddressOperationCompleted = AddressOf Me.OnUpdateFavoriteAddressOperationCompleted
            End If
            Me.InvokeAsync("UpdateFavoriteAddress", New Object() {AppName, AppVersion, Param}, Me.UpdateFavoriteAddressOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateFavoriteAddressOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateFavoriteAddressCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateFavoriteAddressCompleted(Me, New UpdateFavoriteAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertFavoriteAddressDraft", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertFavoriteAddressDraft(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("InsertFavoriteAddressDraft", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertFavoriteAddressDraftAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.InsertFavoriteAddressDraftAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertFavoriteAddressDraftAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.InsertFavoriteAddressDraftOperationCompleted Is Nothing) Then
                Me.InsertFavoriteAddressDraftOperationCompleted = AddressOf Me.OnInsertFavoriteAddressDraftOperationCompleted
            End If
            Me.InvokeAsync("InsertFavoriteAddressDraft", New Object() {AppName, AppVersion, Param}, Me.InsertFavoriteAddressDraftOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertFavoriteAddressDraftOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertFavoriteAddressDraftCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertFavoriteAddressDraftCompleted(Me, New InsertFavoriteAddressDraftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertFavoriteAddress", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertFavoriteAddress(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("InsertFavoriteAddress", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertFavoriteAddressAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.InsertFavoriteAddressAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertFavoriteAddressAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.InsertFavoriteAddressOperationCompleted Is Nothing) Then
                Me.InsertFavoriteAddressOperationCompleted = AddressOf Me.OnInsertFavoriteAddressOperationCompleted
            End If
            Me.InvokeAsync("InsertFavoriteAddress", New Object() {AppName, AppVersion, Param}, Me.InsertFavoriteAddressOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertFavoriteAddressOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertFavoriteAddressCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertFavoriteAddressCompleted(Me, New InsertFavoriteAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFavoriteAddressList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFavoriteAddressList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetFavoriteAddressList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFavoriteAddressListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetFavoriteAddressListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFavoriteAddressListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetFavoriteAddressListOperationCompleted Is Nothing) Then
                Me.GetFavoriteAddressListOperationCompleted = AddressOf Me.OnGetFavoriteAddressListOperationCompleted
            End If
            Me.InvokeAsync("GetFavoriteAddressList", New Object() {AppName, AppVersion, Param}, Me.GetFavoriteAddressListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFavoriteAddressListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFavoriteAddressListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFavoriteAddressListCompleted(Me, New GetFavoriteAddressListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFavoriteAddressListIPPHO", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFavoriteAddressListIPPHO(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetFavoriteAddressListIPPHO", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFavoriteAddressListIPPHOAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetFavoriteAddressListIPPHOAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFavoriteAddressListIPPHOAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetFavoriteAddressListIPPHOOperationCompleted Is Nothing) Then
                Me.GetFavoriteAddressListIPPHOOperationCompleted = AddressOf Me.OnGetFavoriteAddressListIPPHOOperationCompleted
            End If
            Me.InvokeAsync("GetFavoriteAddressListIPPHO", New Object() {AppName, AppVersion, Param}, Me.GetFavoriteAddressListIPPHOOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFavoriteAddressListIPPHOOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFavoriteAddressListIPPHOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFavoriteAddressListIPPHOCompleted(Me, New GetFavoriteAddressListIPPHOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebExpGetHubList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebExpGetHubList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebExpGetHubList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebExpGetHubListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebExpGetHubListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebExpGetHubListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebExpGetHubListOperationCompleted Is Nothing) Then
                Me.WebExpGetHubListOperationCompleted = AddressOf Me.OnWebExpGetHubListOperationCompleted
            End If
            Me.InvokeAsync("WebExpGetHubList", New Object() {AppName, AppVersion, Param}, Me.WebExpGetHubListOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebExpGetHubListOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebExpGetHubListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebExpGetHubListCompleted(Me, New WebExpGetHubListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebExpGetExpeditionList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebExpGetExpeditionList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebExpGetExpeditionList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebExpGetExpeditionListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebExpGetExpeditionListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebExpGetExpeditionListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebExpGetExpeditionListOperationCompleted Is Nothing) Then
                Me.WebExpGetExpeditionListOperationCompleted = AddressOf Me.OnWebExpGetExpeditionListOperationCompleted
            End If
            Me.InvokeAsync("WebExpGetExpeditionList", New Object() {AppName, AppVersion, Param}, Me.WebExpGetExpeditionListOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebExpGetExpeditionListOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebExpGetExpeditionListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebExpGetExpeditionListCompleted(Me, New WebExpGetExpeditionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebExpGetExpeditionSLAList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebExpGetExpeditionSLAList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("WebExpGetExpeditionSLAList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebExpGetExpeditionSLAListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.WebExpGetExpeditionSLAListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebExpGetExpeditionSLAListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.WebExpGetExpeditionSLAListOperationCompleted Is Nothing) Then
                Me.WebExpGetExpeditionSLAListOperationCompleted = AddressOf Me.OnWebExpGetExpeditionSLAListOperationCompleted
            End If
            Me.InvokeAsync("WebExpGetExpeditionSLAList", New Object() {AppName, AppVersion, Param}, Me.WebExpGetExpeditionSLAListOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebExpGetExpeditionSLAListOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebExpGetExpeditionSLAListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebExpGetExpeditionSLAListCompleted(Me, New WebExpGetExpeditionSLAListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactionConst", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTransactionConst(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetTransactionConst", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTransactionConstAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetTransactionConstAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTransactionConstAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetTransactionConstOperationCompleted Is Nothing) Then
                Me.GetTransactionConstOperationCompleted = AddressOf Me.OnGetTransactionConstOperationCompleted
            End If
            Me.InvokeAsync("GetTransactionConst", New Object() {AppName, AppVersion, Param}, Me.GetTransactionConstOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTransactionConstOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTransactionConstCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTransactionConstCompleted(Me, New GetTransactionConstCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPackageCategoryList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPackageCategoryList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetPackageCategoryList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPackageCategoryListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetPackageCategoryListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPackageCategoryListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetPackageCategoryListOperationCompleted Is Nothing) Then
                Me.GetPackageCategoryListOperationCompleted = AddressOf Me.OnGetPackageCategoryListOperationCompleted
            End If
            Me.InvokeAsync("GetPackageCategoryList", New Object() {AppName, AppVersion, Param}, Me.GetPackageCategoryListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPackageCategoryListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPackageCategoryListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPackageCategoryListCompleted(Me, New GetPackageCategoryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeliveryCostWeightDimension", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDeliveryCostWeightDimension(ByVal LogKeyword As String, ByVal Account As String, ByVal Service As String, ByVal OriCity As String, ByVal DstCity As String, ByVal Weight As Double, ByVal DimWeight As Double, ByVal DimVolume As Double, ByVal PrefMethod As String) As Object()
            Dim results() As Object = Me.Invoke("GetDeliveryCostWeightDimension", New Object() {LogKeyword, Account, Service, OriCity, DstCity, Weight, DimWeight, DimVolume, PrefMethod})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDeliveryCostWeightDimensionAsync(ByVal LogKeyword As String, ByVal Account As String, ByVal Service As String, ByVal OriCity As String, ByVal DstCity As String, ByVal Weight As Double, ByVal DimWeight As Double, ByVal DimVolume As Double, ByVal PrefMethod As String)
            Me.GetDeliveryCostWeightDimensionAsync(LogKeyword, Account, Service, OriCity, DstCity, Weight, DimWeight, DimVolume, PrefMethod, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDeliveryCostWeightDimensionAsync(ByVal LogKeyword As String, ByVal Account As String, ByVal Service As String, ByVal OriCity As String, ByVal DstCity As String, ByVal Weight As Double, ByVal DimWeight As Double, ByVal DimVolume As Double, ByVal PrefMethod As String, ByVal userState As Object)
            If (Me.GetDeliveryCostWeightDimensionOperationCompleted Is Nothing) Then
                Me.GetDeliveryCostWeightDimensionOperationCompleted = AddressOf Me.OnGetDeliveryCostWeightDimensionOperationCompleted
            End If
            Me.InvokeAsync("GetDeliveryCostWeightDimension", New Object() {LogKeyword, Account, Service, OriCity, DstCity, Weight, DimWeight, DimVolume, PrefMethod}, Me.GetDeliveryCostWeightDimensionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDeliveryCostWeightDimensionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDeliveryCostWeightDimensionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDeliveryCostWeightDimensionCompleted(Me, New GetDeliveryCostWeightDimensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeliveryCostFleetRental", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDeliveryCostFleetRental(ByVal LogKeyword As String, ByVal Account As String, ByVal OriCity As String, ByVal DstCity As String, ByVal vType As String, ByVal vQty As Integer) As Object()
            Dim results() As Object = Me.Invoke("GetDeliveryCostFleetRental", New Object() {LogKeyword, Account, OriCity, DstCity, vType, vQty})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDeliveryCostFleetRentalAsync(ByVal LogKeyword As String, ByVal Account As String, ByVal OriCity As String, ByVal DstCity As String, ByVal vType As String, ByVal vQty As Integer)
            Me.GetDeliveryCostFleetRentalAsync(LogKeyword, Account, OriCity, DstCity, vType, vQty, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDeliveryCostFleetRentalAsync(ByVal LogKeyword As String, ByVal Account As String, ByVal OriCity As String, ByVal DstCity As String, ByVal vType As String, ByVal vQty As Integer, ByVal userState As Object)
            If (Me.GetDeliveryCostFleetRentalOperationCompleted Is Nothing) Then
                Me.GetDeliveryCostFleetRentalOperationCompleted = AddressOf Me.OnGetDeliveryCostFleetRentalOperationCompleted
            End If
            Me.InvokeAsync("GetDeliveryCostFleetRental", New Object() {LogKeyword, Account, OriCity, DstCity, vType, vQty}, Me.GetDeliveryCostFleetRentalOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDeliveryCostFleetRentalOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDeliveryCostFleetRentalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDeliveryCostFleetRentalCompleted(Me, New GetDeliveryCostFleetRentalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeliveryCostCore", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDeliveryCostCore(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetDeliveryCostCore", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDeliveryCostCoreAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetDeliveryCostCoreAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDeliveryCostCoreAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetDeliveryCostCoreOperationCompleted Is Nothing) Then
                Me.GetDeliveryCostCoreOperationCompleted = AddressOf Me.OnGetDeliveryCostCoreOperationCompleted
            End If
            Me.InvokeAsync("GetDeliveryCostCore", New Object() {AppName, AppVersion, Param}, Me.GetDeliveryCostCoreOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDeliveryCostCoreOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDeliveryCostCoreCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDeliveryCostCoreCompleted(Me, New GetDeliveryCostCoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeliveryCost", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDeliveryCost( _
                    ByVal AppName As String,  _
                    ByVal AppVersion As String,  _
                    ByVal User As String,  _
                    ByVal Password As String,  _
                    ByVal ServiceType As String,  _
                    ByVal ShPostalCode As String,  _
                    ByVal CoPostalCode As String,  _
                    ByVal StoreOrigin As String,  _
                    ByVal StoreDestination As String,  _
                    ByVal Weight As Double,  _
                    ByVal Length As Double,  _
                    ByVal Width As Double,  _
                    ByVal Height As Double,  _
                    ByVal Account As String,  _
                    ByVal ShDistrict As String,  _
                    ByVal CoDistrict As String,  _
                    ByVal FlgSaranaPromosi As Boolean) As Double
            Dim results() As Object = Me.Invoke("GetDeliveryCost", New Object() {AppName, AppVersion, User, Password, ServiceType, ShPostalCode, CoPostalCode, StoreOrigin, StoreDestination, Weight, Length, Width, Height, Account, ShDistrict, CoDistrict, FlgSaranaPromosi})
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDeliveryCostAsync( _
                    ByVal AppName As String,  _
                    ByVal AppVersion As String,  _
                    ByVal User As String,  _
                    ByVal Password As String,  _
                    ByVal ServiceType As String,  _
                    ByVal ShPostalCode As String,  _
                    ByVal CoPostalCode As String,  _
                    ByVal StoreOrigin As String,  _
                    ByVal StoreDestination As String,  _
                    ByVal Weight As Double,  _
                    ByVal Length As Double,  _
                    ByVal Width As Double,  _
                    ByVal Height As Double,  _
                    ByVal Account As String,  _
                    ByVal ShDistrict As String,  _
                    ByVal CoDistrict As String,  _
                    ByVal FlgSaranaPromosi As Boolean)
            Me.GetDeliveryCostAsync(AppName, AppVersion, User, Password, ServiceType, ShPostalCode, CoPostalCode, StoreOrigin, StoreDestination, Weight, Length, Width, Height, Account, ShDistrict, CoDistrict, FlgSaranaPromosi, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDeliveryCostAsync( _
                    ByVal AppName As String,  _
                    ByVal AppVersion As String,  _
                    ByVal User As String,  _
                    ByVal Password As String,  _
                    ByVal ServiceType As String,  _
                    ByVal ShPostalCode As String,  _
                    ByVal CoPostalCode As String,  _
                    ByVal StoreOrigin As String,  _
                    ByVal StoreDestination As String,  _
                    ByVal Weight As Double,  _
                    ByVal Length As Double,  _
                    ByVal Width As Double,  _
                    ByVal Height As Double,  _
                    ByVal Account As String,  _
                    ByVal ShDistrict As String,  _
                    ByVal CoDistrict As String,  _
                    ByVal FlgSaranaPromosi As Boolean,  _
                    ByVal userState As Object)
            If (Me.GetDeliveryCostOperationCompleted Is Nothing) Then
                Me.GetDeliveryCostOperationCompleted = AddressOf Me.OnGetDeliveryCostOperationCompleted
            End If
            Me.InvokeAsync("GetDeliveryCost", New Object() {AppName, AppVersion, User, Password, ServiceType, ShPostalCode, CoPostalCode, StoreOrigin, StoreDestination, Weight, Length, Width, Height, Account, ShDistrict, CoDistrict, FlgSaranaPromosi}, Me.GetDeliveryCostOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDeliveryCostOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDeliveryCostCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDeliveryCostCompleted(Me, New GetDeliveryCostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeliveryCostV2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDeliveryCostV2(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Double
            Dim results() As Object = Me.Invoke("GetDeliveryCostV2", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDeliveryCostV2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetDeliveryCostV2Async(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDeliveryCostV2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetDeliveryCostV2OperationCompleted Is Nothing) Then
                Me.GetDeliveryCostV2OperationCompleted = AddressOf Me.OnGetDeliveryCostV2OperationCompleted
            End If
            Me.InvokeAsync("GetDeliveryCostV2", New Object() {AppName, AppVersion, Param}, Me.GetDeliveryCostV2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDeliveryCostV2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDeliveryCostV2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDeliveryCostV2Completed(Me, New GetDeliveryCostV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeliveryServiceList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDeliveryServiceList( _
                    ByVal AppName As String,  _
                    ByVal AppVersion As String,  _
                    ByVal User As String,  _
                    ByVal Password As String,  _
                    ByVal ServiceType As String,  _
                    ByVal ShPostalCode As String,  _
                    ByVal CoPostalCode As String,  _
                    ByVal StoreOrigin As String,  _
                    ByVal StoreDestination As String,  _
                    ByVal Weight As Double,  _
                    ByVal Length As Double,  _
                    ByVal Width As Double,  _
                    ByVal Height As Double,  _
                    ByVal Account As String,  _
                    ByVal ShDistrict As String,  _
                    ByVal CoDistrict As String,  _
                    ByVal FlgSaranaPromosi As Boolean,  _
                    ByVal FlgAddIns As Boolean,  _
                    ByVal PckValue As Double) As Object()
            Dim results() As Object = Me.Invoke("GetDeliveryServiceList", New Object() {AppName, AppVersion, User, Password, ServiceType, ShPostalCode, CoPostalCode, StoreOrigin, StoreDestination, Weight, Length, Width, Height, Account, ShDistrict, CoDistrict, FlgSaranaPromosi, FlgAddIns, PckValue})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDeliveryServiceListAsync( _
                    ByVal AppName As String,  _
                    ByVal AppVersion As String,  _
                    ByVal User As String,  _
                    ByVal Password As String,  _
                    ByVal ServiceType As String,  _
                    ByVal ShPostalCode As String,  _
                    ByVal CoPostalCode As String,  _
                    ByVal StoreOrigin As String,  _
                    ByVal StoreDestination As String,  _
                    ByVal Weight As Double,  _
                    ByVal Length As Double,  _
                    ByVal Width As Double,  _
                    ByVal Height As Double,  _
                    ByVal Account As String,  _
                    ByVal ShDistrict As String,  _
                    ByVal CoDistrict As String,  _
                    ByVal FlgSaranaPromosi As Boolean,  _
                    ByVal FlgAddIns As Boolean,  _
                    ByVal PckValue As Double)
            Me.GetDeliveryServiceListAsync(AppName, AppVersion, User, Password, ServiceType, ShPostalCode, CoPostalCode, StoreOrigin, StoreDestination, Weight, Length, Width, Height, Account, ShDistrict, CoDistrict, FlgSaranaPromosi, FlgAddIns, PckValue, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDeliveryServiceListAsync( _
                    ByVal AppName As String,  _
                    ByVal AppVersion As String,  _
                    ByVal User As String,  _
                    ByVal Password As String,  _
                    ByVal ServiceType As String,  _
                    ByVal ShPostalCode As String,  _
                    ByVal CoPostalCode As String,  _
                    ByVal StoreOrigin As String,  _
                    ByVal StoreDestination As String,  _
                    ByVal Weight As Double,  _
                    ByVal Length As Double,  _
                    ByVal Width As Double,  _
                    ByVal Height As Double,  _
                    ByVal Account As String,  _
                    ByVal ShDistrict As String,  _
                    ByVal CoDistrict As String,  _
                    ByVal FlgSaranaPromosi As Boolean,  _
                    ByVal FlgAddIns As Boolean,  _
                    ByVal PckValue As Double,  _
                    ByVal userState As Object)
            If (Me.GetDeliveryServiceListOperationCompleted Is Nothing) Then
                Me.GetDeliveryServiceListOperationCompleted = AddressOf Me.OnGetDeliveryServiceListOperationCompleted
            End If
            Me.InvokeAsync("GetDeliveryServiceList", New Object() {AppName, AppVersion, User, Password, ServiceType, ShPostalCode, CoPostalCode, StoreOrigin, StoreDestination, Weight, Length, Width, Height, Account, ShDistrict, CoDistrict, FlgSaranaPromosi, FlgAddIns, PckValue}, Me.GetDeliveryServiceListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDeliveryServiceListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDeliveryServiceListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDeliveryServiceListCompleted(Me, New GetDeliveryServiceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeliveryServiceListV2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDeliveryServiceListV2(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetDeliveryServiceListV2", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDeliveryServiceListV2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetDeliveryServiceListV2Async(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDeliveryServiceListV2Async(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetDeliveryServiceListV2OperationCompleted Is Nothing) Then
                Me.GetDeliveryServiceListV2OperationCompleted = AddressOf Me.OnGetDeliveryServiceListV2OperationCompleted
            End If
            Me.InvokeAsync("GetDeliveryServiceListV2", New Object() {AppName, AppVersion, Param}, Me.GetDeliveryServiceListV2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDeliveryServiceListV2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDeliveryServiceListV2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDeliveryServiceListV2Completed(Me, New GetDeliveryServiceListV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactionList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTransactionList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetTransactionList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTransactionListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetTransactionListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTransactionListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetTransactionListOperationCompleted Is Nothing) Then
                Me.GetTransactionListOperationCompleted = AddressOf Me.OnGetTransactionListOperationCompleted
            End If
            Me.InvokeAsync("GetTransactionList", New Object() {AppName, AppVersion, Param}, Me.GetTransactionListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTransactionListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTransactionListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTransactionListCompleted(Me, New GetTransactionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConsigneeHistory", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetConsigneeHistory(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetConsigneeHistory", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetConsigneeHistoryAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetConsigneeHistoryAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetConsigneeHistoryAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetConsigneeHistoryOperationCompleted Is Nothing) Then
                Me.GetConsigneeHistoryOperationCompleted = AddressOf Me.OnGetConsigneeHistoryOperationCompleted
            End If
            Me.InvokeAsync("GetConsigneeHistory", New Object() {AppName, AppVersion, Param}, Me.GetConsigneeHistoryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetConsigneeHistoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetConsigneeHistoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetConsigneeHistoryCompleted(Me, New GetConsigneeHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIndomaretStoreList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetIndomaretStoreList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetIndomaretStoreList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetIndomaretStoreListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetIndomaretStoreListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetIndomaretStoreListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetIndomaretStoreListOperationCompleted Is Nothing) Then
                Me.GetIndomaretStoreListOperationCompleted = AddressOf Me.OnGetIndomaretStoreListOperationCompleted
            End If
            Me.InvokeAsync("GetIndomaretStoreList", New Object() {AppName, AppVersion, Param}, Me.GetIndomaretStoreListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetIndomaretStoreListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetIndomaretStoreListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetIndomaretStoreListCompleted(Me, New GetIndomaretStoreListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIndomaretStoreLocationList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetIndomaretStoreLocationList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetIndomaretStoreLocationList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetIndomaretStoreLocationListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetIndomaretStoreLocationListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetIndomaretStoreLocationListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetIndomaretStoreLocationListOperationCompleted Is Nothing) Then
                Me.GetIndomaretStoreLocationListOperationCompleted = AddressOf Me.OnGetIndomaretStoreLocationListOperationCompleted
            End If
            Me.InvokeAsync("GetIndomaretStoreLocationList", New Object() {AppName, AppVersion, Param}, Me.GetIndomaretStoreLocationListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetIndomaretStoreLocationListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetIndomaretStoreLocationListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetIndomaretStoreLocationListCompleted(Me, New GetIndomaretStoreLocationListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIndomaretDCList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetIndomaretDCList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetIndomaretDCList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetIndomaretDCListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetIndomaretDCListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetIndomaretDCListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetIndomaretDCListOperationCompleted Is Nothing) Then
                Me.GetIndomaretDCListOperationCompleted = AddressOf Me.OnGetIndomaretDCListOperationCompleted
            End If
            Me.InvokeAsync("GetIndomaretDCList", New Object() {AppName, AppVersion, Param}, Me.GetIndomaretDCListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetIndomaretDCListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetIndomaretDCListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetIndomaretDCListCompleted(Me, New GetIndomaretDCListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIndomaretDCDepoList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetIndomaretDCDepoList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetIndomaretDCDepoList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetIndomaretDCDepoListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetIndomaretDCDepoListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetIndomaretDCDepoListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetIndomaretDCDepoListOperationCompleted Is Nothing) Then
                Me.GetIndomaretDCDepoListOperationCompleted = AddressOf Me.OnGetIndomaretDCDepoListOperationCompleted
            End If
            Me.InvokeAsync("GetIndomaretDCDepoList", New Object() {AppName, AppVersion, Param}, Me.GetIndomaretDCDepoListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetIndomaretDCDepoListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetIndomaretDCDepoListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetIndomaretDCDepoListCompleted(Me, New GetIndomaretDCDepoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSuggestionStore", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSuggestionStore(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetSuggestionStore", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSuggestionStoreAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetSuggestionStoreAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSuggestionStoreAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetSuggestionStoreOperationCompleted Is Nothing) Then
                Me.GetSuggestionStoreOperationCompleted = AddressOf Me.OnGetSuggestionStoreOperationCompleted
            End If
            Me.InvokeAsync("GetSuggestionStore", New Object() {AppName, AppVersion, Param}, Me.GetSuggestionStoreOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSuggestionStoreOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSuggestionStoreCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSuggestionStoreCompleted(Me, New GetSuggestionStoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPropinsiList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPropinsiList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetPropinsiList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPropinsiListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetPropinsiListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPropinsiListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetPropinsiListOperationCompleted Is Nothing) Then
                Me.GetPropinsiListOperationCompleted = AddressOf Me.OnGetPropinsiListOperationCompleted
            End If
            Me.InvokeAsync("GetPropinsiList", New Object() {AppName, AppVersion, Param}, Me.GetPropinsiListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPropinsiListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPropinsiListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPropinsiListCompleted(Me, New GetPropinsiListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetKotaKabupatenList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetKotaKabupatenList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetKotaKabupatenList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetKotaKabupatenListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetKotaKabupatenListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetKotaKabupatenListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetKotaKabupatenListOperationCompleted Is Nothing) Then
                Me.GetKotaKabupatenListOperationCompleted = AddressOf Me.OnGetKotaKabupatenListOperationCompleted
            End If
            Me.InvokeAsync("GetKotaKabupatenList", New Object() {AppName, AppVersion, Param}, Me.GetKotaKabupatenListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetKotaKabupatenListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetKotaKabupatenListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetKotaKabupatenListCompleted(Me, New GetKotaKabupatenListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetKecamatanList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetKecamatanList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetKecamatanList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetKecamatanListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetKecamatanListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetKecamatanListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetKecamatanListOperationCompleted Is Nothing) Then
                Me.GetKecamatanListOperationCompleted = AddressOf Me.OnGetKecamatanListOperationCompleted
            End If
            Me.InvokeAsync("GetKecamatanList", New Object() {AppName, AppVersion, Param}, Me.GetKecamatanListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetKecamatanListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetKecamatanListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetKecamatanListCompleted(Me, New GetKecamatanListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetKelurahanList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetKelurahanList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetKelurahanList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetKelurahanListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetKelurahanListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetKelurahanListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetKelurahanListOperationCompleted Is Nothing) Then
                Me.GetKelurahanListOperationCompleted = AddressOf Me.OnGetKelurahanListOperationCompleted
            End If
            Me.InvokeAsync("GetKelurahanList", New Object() {AppName, AppVersion, Param}, Me.GetKelurahanListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetKelurahanListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetKelurahanListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetKelurahanListCompleted(Me, New GetKelurahanListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetKodePosList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetKodePosList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetKodePosList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetKodePosListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetKodePosListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetKodePosListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetKodePosListOperationCompleted Is Nothing) Then
                Me.GetKodePosListOperationCompleted = AddressOf Me.OnGetKodePosListOperationCompleted
            End If
            Me.InvokeAsync("GetKodePosList", New Object() {AppName, AppVersion, Param}, Me.GetKodePosListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetKodePosListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetKodePosListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetKodePosListCompleted(Me, New GetKodePosListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPostalCodeListByKeyword", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPostalCodeListByKeyword(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetPostalCodeListByKeyword", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPostalCodeListByKeywordAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetPostalCodeListByKeywordAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPostalCodeListByKeywordAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetPostalCodeListByKeywordOperationCompleted Is Nothing) Then
                Me.GetPostalCodeListByKeywordOperationCompleted = AddressOf Me.OnGetPostalCodeListByKeywordOperationCompleted
            End If
            Me.InvokeAsync("GetPostalCodeListByKeyword", New Object() {AppName, AppVersion, Param}, Me.GetPostalCodeListByKeywordOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPostalCodeListByKeywordOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPostalCodeListByKeywordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPostalCodeListByKeywordCompleted(Me, New GetPostalCodeListByKeywordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDCList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDCList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetDCList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDCListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetDCListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDCListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetDCListOperationCompleted Is Nothing) Then
                Me.GetDCListOperationCompleted = AddressOf Me.OnGetDCListOperationCompleted
            End If
            Me.InvokeAsync("GetDCList", New Object() {AppName, AppVersion, Param}, Me.GetDCListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDCListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDCListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDCListCompleted(Me, New GetDCListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDCDGAAccountList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDCDGAAccountList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetDCDGAAccountList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDCDGAAccountListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetDCDGAAccountListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDCDGAAccountListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetDCDGAAccountListOperationCompleted Is Nothing) Then
                Me.GetDCDGAAccountListOperationCompleted = AddressOf Me.OnGetDCDGAAccountListOperationCompleted
            End If
            Me.InvokeAsync("GetDCDGAAccountList", New Object() {AppName, AppVersion, Param}, Me.GetDCDGAAccountListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDCDGAAccountListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDCDGAAccountListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDCDGAAccountListCompleted(Me, New GetDCDGAAccountListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDCDGAAccountListDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDCDGAAccountListDetail(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetDCDGAAccountListDetail", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDCDGAAccountListDetailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetDCDGAAccountListDetailAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDCDGAAccountListDetailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetDCDGAAccountListDetailOperationCompleted Is Nothing) Then
                Me.GetDCDGAAccountListDetailOperationCompleted = AddressOf Me.OnGetDCDGAAccountListDetailOperationCompleted
            End If
            Me.InvokeAsync("GetDCDGAAccountListDetail", New Object() {AppName, AppVersion, Param}, Me.GetDCDGAAccountListDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDCDGAAccountListDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDCDGAAccountListDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDCDGAAccountListDetailCompleted(Me, New GetDCDGAAccountListDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDCDGAList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDCDGAList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetDCDGAList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDCDGAListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetDCDGAListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDCDGAListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetDCDGAListOperationCompleted Is Nothing) Then
                Me.GetDCDGAListOperationCompleted = AddressOf Me.OnGetDCDGAListOperationCompleted
            End If
            Me.InvokeAsync("GetDCDGAList", New Object() {AppName, AppVersion, Param}, Me.GetDCDGAListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDCDGAListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDCDGAListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDCDGAListCompleted(Me, New GetDCDGAListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IndomaretStoreClosedList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IndomaretStoreClosedList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("IndomaretStoreClosedList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub IndomaretStoreClosedListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.IndomaretStoreClosedListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IndomaretStoreClosedListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.IndomaretStoreClosedListOperationCompleted Is Nothing) Then
                Me.IndomaretStoreClosedListOperationCompleted = AddressOf Me.OnIndomaretStoreClosedListOperationCompleted
            End If
            Me.InvokeAsync("IndomaretStoreClosedList", New Object() {AppName, AppVersion, Param}, Me.IndomaretStoreClosedListOperationCompleted, userState)
        End Sub
        
        Private Sub OnIndomaretStoreClosedListOperationCompleted(ByVal arg As Object)
            If (Not (Me.IndomaretStoreClosedListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IndomaretStoreClosedListCompleted(Me, New IndomaretStoreClosedListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IndomaretStoreClosedOpen", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IndomaretStoreClosedOpen(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("IndomaretStoreClosedOpen", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub IndomaretStoreClosedOpenAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.IndomaretStoreClosedOpenAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IndomaretStoreClosedOpenAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.IndomaretStoreClosedOpenOperationCompleted Is Nothing) Then
                Me.IndomaretStoreClosedOpenOperationCompleted = AddressOf Me.OnIndomaretStoreClosedOpenOperationCompleted
            End If
            Me.InvokeAsync("IndomaretStoreClosedOpen", New Object() {AppName, AppVersion, Param}, Me.IndomaretStoreClosedOpenOperationCompleted, userState)
        End Sub
        
        Private Sub OnIndomaretStoreClosedOpenOperationCompleted(ByVal arg As Object)
            If (Not (Me.IndomaretStoreClosedOpenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IndomaretStoreClosedOpenCompleted(Me, New IndomaretStoreClosedOpenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MotherstoreValidation", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MotherstoreValidation(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("MotherstoreValidation", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub MotherstoreValidationAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.MotherstoreValidationAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MotherstoreValidationAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.MotherstoreValidationOperationCompleted Is Nothing) Then
                Me.MotherstoreValidationOperationCompleted = AddressOf Me.OnMotherstoreValidationOperationCompleted
            End If
            Me.InvokeAsync("MotherstoreValidation", New Object() {AppName, AppVersion, Param}, Me.MotherstoreValidationOperationCompleted, userState)
        End Sub
        
        Private Sub OnMotherstoreValidationOperationCompleted(ByVal arg As Object)
            If (Not (Me.MotherstoreValidationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MotherstoreValidationCompleted(Me, New MotherstoreValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIndogrosirStoreList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetIndogrosirStoreList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetIndogrosirStoreList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetIndogrosirStoreListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetIndogrosirStoreListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetIndogrosirStoreListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetIndogrosirStoreListOperationCompleted Is Nothing) Then
                Me.GetIndogrosirStoreListOperationCompleted = AddressOf Me.OnGetIndogrosirStoreListOperationCompleted
            End If
            Me.InvokeAsync("GetIndogrosirStoreList", New Object() {AppName, AppVersion, Param}, Me.GetIndogrosirStoreListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetIndogrosirStoreListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetIndogrosirStoreListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetIndogrosirStoreListCompleted(Me, New GetIndogrosirStoreListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMisterDonutStoreList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMisterDonutStoreList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetMisterDonutStoreList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMisterDonutStoreListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetMisterDonutStoreListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMisterDonutStoreListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetMisterDonutStoreListOperationCompleted Is Nothing) Then
                Me.GetMisterDonutStoreListOperationCompleted = AddressOf Me.OnGetMisterDonutStoreListOperationCompleted
            End If
            Me.InvokeAsync("GetMisterDonutStoreList", New Object() {AppName, AppVersion, Param}, Me.GetMisterDonutStoreListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMisterDonutStoreListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMisterDonutStoreListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMisterDonutStoreListCompleted(Me, New GetMisterDonutStoreListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPointCoffeeStandAloneStoreList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPointCoffeeStandAloneStoreList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetPointCoffeeStandAloneStoreList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPointCoffeeStandAloneStoreListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetPointCoffeeStandAloneStoreListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPointCoffeeStandAloneStoreListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetPointCoffeeStandAloneStoreListOperationCompleted Is Nothing) Then
                Me.GetPointCoffeeStandAloneStoreListOperationCompleted = AddressOf Me.OnGetPointCoffeeStandAloneStoreListOperationCompleted
            End If
            Me.InvokeAsync("GetPointCoffeeStandAloneStoreList", New Object() {AppName, AppVersion, Param}, Me.GetPointCoffeeStandAloneStoreListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPointCoffeeStandAloneStoreListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPointCoffeeStandAloneStoreListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPointCoffeeStandAloneStoreListCompleted(Me, New GetPointCoffeeStandAloneStoreListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRegionHubList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRegionHubList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("GetRegionHubList", New Object() {AppName, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRegionHubListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.GetRegionHubListAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRegionHubListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.GetRegionHubListOperationCompleted Is Nothing) Then
                Me.GetRegionHubListOperationCompleted = AddressOf Me.OnGetRegionHubListOperationCompleted
            End If
            Me.InvokeAsync("GetRegionHubList", New Object() {AppName, AppVersion, Param, dsData}, Me.GetRegionHubListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRegionHubListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRegionHubListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRegionHubListCompleted(Me, New GetRegionHubListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DOPEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DOPEmail()
            Me.Invoke("DOPEmail", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DOPEmailAsync()
            Me.DOPEmailAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DOPEmailAsync(ByVal userState As Object)
            If (Me.DOPEmailOperationCompleted Is Nothing) Then
                Me.DOPEmailOperationCompleted = AddressOf Me.OnDOPEmailOperationCompleted
            End If
            Me.InvokeAsync("DOPEmail", New Object(-1) {}, Me.DOPEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnDOPEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.DOPEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DOPEmailCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CDVEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CDVEmail()
            Me.Invoke("CDVEmail", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CDVEmailAsync()
            Me.CDVEmailAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CDVEmailAsync(ByVal userState As Object)
            If (Me.CDVEmailOperationCompleted Is Nothing) Then
                Me.CDVEmailOperationCompleted = AddressOf Me.OnCDVEmailOperationCompleted
            End If
            Me.InvokeAsync("CDVEmail", New Object(-1) {}, Me.CDVEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnCDVEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.CDVEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CDVEmailCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CDSEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CDSEmail()
            Me.Invoke("CDSEmail", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CDSEmailAsync()
            Me.CDSEmailAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CDSEmailAsync(ByVal userState As Object)
            If (Me.CDSEmailOperationCompleted Is Nothing) Then
                Me.CDSEmailOperationCompleted = AddressOf Me.OnCDSEmailOperationCompleted
            End If
            Me.InvokeAsync("CDSEmail", New Object(-1) {}, Me.CDSEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnCDSEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.CDSEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CDSEmailCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CDSSenderEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CDSSenderEmail()
            Me.Invoke("CDSSenderEmail", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CDSSenderEmailAsync()
            Me.CDSSenderEmailAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CDSSenderEmailAsync(ByVal userState As Object)
            If (Me.CDSSenderEmailOperationCompleted Is Nothing) Then
                Me.CDSSenderEmailOperationCompleted = AddressOf Me.OnCDSSenderEmailOperationCompleted
            End If
            Me.InvokeAsync("CDSSenderEmail", New Object(-1) {}, Me.CDSSenderEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnCDSSenderEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.CDSSenderEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CDSSenderEmailCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CDSConfirmationGetTransaction", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CDSConfirmationGetTransaction(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("CDSConfirmationGetTransaction", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CDSConfirmationGetTransactionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.CDSConfirmationGetTransactionAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CDSConfirmationGetTransactionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.CDSConfirmationGetTransactionOperationCompleted Is Nothing) Then
                Me.CDSConfirmationGetTransactionOperationCompleted = AddressOf Me.OnCDSConfirmationGetTransactionOperationCompleted
            End If
            Me.InvokeAsync("CDSConfirmationGetTransaction", New Object() {AppName, AppVersion, Param}, Me.CDSConfirmationGetTransactionOperationCompleted, userState)
        End Sub
        
        Private Sub OnCDSConfirmationGetTransactionOperationCompleted(ByVal arg As Object)
            If (Not (Me.CDSConfirmationGetTransactionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CDSConfirmationGetTransactionCompleted(Me, New CDSConfirmationGetTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CDSConfirmationSetConfirmation", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CDSConfirmationSetConfirmation(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("CDSConfirmationSetConfirmation", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CDSConfirmationSetConfirmationAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.CDSConfirmationSetConfirmationAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CDSConfirmationSetConfirmationAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.CDSConfirmationSetConfirmationOperationCompleted Is Nothing) Then
                Me.CDSConfirmationSetConfirmationOperationCompleted = AddressOf Me.OnCDSConfirmationSetConfirmationOperationCompleted
            End If
            Me.InvokeAsync("CDSConfirmationSetConfirmation", New Object() {AppName, AppVersion, Param}, Me.CDSConfirmationSetConfirmationOperationCompleted, userState)
        End Sub
        
        Private Sub OnCDSConfirmationSetConfirmationOperationCompleted(ByVal arg As Object)
            If (Not (Me.CDSConfirmationSetConfirmationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CDSConfirmationSetConfirmationCompleted(Me, New CDSConfirmationSetConfirmationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PINListRequest", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PINListRequest(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PINListRequest", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PINListRequestAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PINListRequestAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PINListRequestAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PINListRequestOperationCompleted Is Nothing) Then
                Me.PINListRequestOperationCompleted = AddressOf Me.OnPINListRequestOperationCompleted
            End If
            Me.InvokeAsync("PINListRequest", New Object() {AppName, AppVersion, Param}, Me.PINListRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnPINListRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.PINListRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PINListRequestCompleted(Me, New PINListRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WHOOriShEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WHOOriShEmail(ByVal Param() As Object)
            Me.Invoke("WHOOriShEmail", New Object() {Param})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WHOOriShEmailAsync(ByVal Param() As Object)
            Me.WHOOriShEmailAsync(Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WHOOriShEmailAsync(ByVal Param() As Object, ByVal userState As Object)
            If (Me.WHOOriShEmailOperationCompleted Is Nothing) Then
                Me.WHOOriShEmailOperationCompleted = AddressOf Me.OnWHOOriShEmailOperationCompleted
            End If
            Me.InvokeAsync("WHOOriShEmail", New Object() {Param}, Me.WHOOriShEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnWHOOriShEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.WHOOriShEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WHOOriShEmailCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WHOOriEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WHOOriEmail(ByVal Param() As Object)
            Me.Invoke("WHOOriEmail", New Object() {Param})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WHOOriEmailAsync(ByVal Param() As Object)
            Me.WHOOriEmailAsync(Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WHOOriEmailAsync(ByVal Param() As Object, ByVal userState As Object)
            If (Me.WHOOriEmailOperationCompleted Is Nothing) Then
                Me.WHOOriEmailOperationCompleted = AddressOf Me.OnWHOOriEmailOperationCompleted
            End If
            Me.InvokeAsync("WHOOriEmail", New Object() {Param}, Me.WHOOriEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnWHOOriEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.WHOOriEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WHOOriEmailCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ComplainEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ComplainEmail(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ComplainEmail", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ComplainEmailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ComplainEmailAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ComplainEmailAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ComplainEmailOperationCompleted Is Nothing) Then
                Me.ComplainEmailOperationCompleted = AddressOf Me.OnComplainEmailOperationCompleted
            End If
            Me.InvokeAsync("ComplainEmail", New Object() {AppName, AppVersion, Param}, Me.ComplainEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnComplainEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.ComplainEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ComplainEmailCompleted(Me, New ComplainEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetServiceTypeList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetServiceTypeList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetServiceTypeList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetServiceTypeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetServiceTypeListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetServiceTypeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetServiceTypeListOperationCompleted Is Nothing) Then
                Me.GetServiceTypeListOperationCompleted = AddressOf Me.OnGetServiceTypeListOperationCompleted
            End If
            Me.InvokeAsync("GetServiceTypeList", New Object() {AppName, AppVersion, Param}, Me.GetServiceTypeListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetServiceTypeListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetServiceTypeListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetServiceTypeListCompleted(Me, New GetServiceTypeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCountryList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCountryList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetCountryList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCountryListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetCountryListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCountryListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetCountryListOperationCompleted Is Nothing) Then
                Me.GetCountryListOperationCompleted = AddressOf Me.OnGetCountryListOperationCompleted
            End If
            Me.InvokeAsync("GetCountryList", New Object() {AppName, AppVersion, Param}, Me.GetCountryListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCountryListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCountryListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCountryListCompleted(Me, New GetCountryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProvinceList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProvinceList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetProvinceList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProvinceListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetProvinceListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProvinceListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetProvinceListOperationCompleted Is Nothing) Then
                Me.GetProvinceListOperationCompleted = AddressOf Me.OnGetProvinceListOperationCompleted
            End If
            Me.InvokeAsync("GetProvinceList", New Object() {AppName, AppVersion, Param}, Me.GetProvinceListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProvinceListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProvinceListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProvinceListCompleted(Me, New GetProvinceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCityList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCityList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetCityList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCityListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetCityListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCityListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetCityListOperationCompleted Is Nothing) Then
                Me.GetCityListOperationCompleted = AddressOf Me.OnGetCityListOperationCompleted
            End If
            Me.InvokeAsync("GetCityList", New Object() {AppName, AppVersion, Param}, Me.GetCityListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCityListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCityListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCityListCompleted(Me, New GetCityListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSubDistrictAndPostalCodeList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSubDistrictAndPostalCodeList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetSubDistrictAndPostalCodeList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSubDistrictAndPostalCodeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetSubDistrictAndPostalCodeListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSubDistrictAndPostalCodeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetSubDistrictAndPostalCodeListOperationCompleted Is Nothing) Then
                Me.GetSubDistrictAndPostalCodeListOperationCompleted = AddressOf Me.OnGetSubDistrictAndPostalCodeListOperationCompleted
            End If
            Me.InvokeAsync("GetSubDistrictAndPostalCodeList", New Object() {AppName, AppVersion, Param}, Me.GetSubDistrictAndPostalCodeListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSubDistrictAndPostalCodeListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSubDistrictAndPostalCodeListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSubDistrictAndPostalCodeListCompleted(Me, New GetSubDistrictAndPostalCodeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDistrictList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDistrictList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetDistrictList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDistrictListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetDistrictListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDistrictListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetDistrictListOperationCompleted Is Nothing) Then
                Me.GetDistrictListOperationCompleted = AddressOf Me.OnGetDistrictListOperationCompleted
            End If
            Me.InvokeAsync("GetDistrictList", New Object() {AppName, AppVersion, Param}, Me.GetDistrictListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDistrictListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDistrictListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDistrictListCompleted(Me, New GetDistrictListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSubDistrictList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSubDistrictList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetSubDistrictList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSubDistrictListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetSubDistrictListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSubDistrictListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetSubDistrictListOperationCompleted Is Nothing) Then
                Me.GetSubDistrictListOperationCompleted = AddressOf Me.OnGetSubDistrictListOperationCompleted
            End If
            Me.InvokeAsync("GetSubDistrictList", New Object() {AppName, AppVersion, Param}, Me.GetSubDistrictListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSubDistrictListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSubDistrictListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSubDistrictListCompleted(Me, New GetSubDistrictListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPostalCodeList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPostalCodeList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetPostalCodeList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPostalCodeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetPostalCodeListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPostalCodeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetPostalCodeListOperationCompleted Is Nothing) Then
                Me.GetPostalCodeListOperationCompleted = AddressOf Me.OnGetPostalCodeListOperationCompleted
            End If
            Me.InvokeAsync("GetPostalCodeList", New Object() {AppName, AppVersion, Param}, Me.GetPostalCodeListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPostalCodeListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPostalCodeListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPostalCodeListCompleted(Me, New GetPostalCodeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPostalCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPostalCode(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetPostalCode", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPostalCodeAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetPostalCodeAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPostalCodeAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetPostalCodeOperationCompleted Is Nothing) Then
                Me.GetPostalCodeOperationCompleted = AddressOf Me.OnGetPostalCodeOperationCompleted
            End If
            Me.InvokeAsync("GetPostalCode", New Object() {AppName, AppVersion, Param}, Me.GetPostalCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPostalCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPostalCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPostalCodeCompleted(Me, New GetPostalCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSubDistrictListByPostalCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSubDistrictListByPostalCode(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetSubDistrictListByPostalCode", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSubDistrictListByPostalCodeAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetSubDistrictListByPostalCodeAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSubDistrictListByPostalCodeAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetSubDistrictListByPostalCodeOperationCompleted Is Nothing) Then
                Me.GetSubDistrictListByPostalCodeOperationCompleted = AddressOf Me.OnGetSubDistrictListByPostalCodeOperationCompleted
            End If
            Me.InvokeAsync("GetSubDistrictListByPostalCode", New Object() {AppName, AppVersion, Param}, Me.GetSubDistrictListByPostalCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSubDistrictListByPostalCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSubDistrictListByPostalCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSubDistrictListByPostalCodeCompleted(Me, New GetSubDistrictListByPostalCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDistrictByKeyword", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDistrictByKeyword(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetDistrictByKeyword", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDistrictByKeywordAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetDistrictByKeywordAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDistrictByKeywordAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetDistrictByKeywordOperationCompleted Is Nothing) Then
                Me.GetDistrictByKeywordOperationCompleted = AddressOf Me.OnGetDistrictByKeywordOperationCompleted
            End If
            Me.InvokeAsync("GetDistrictByKeyword", New Object() {AppName, AppVersion, Param}, Me.GetDistrictByKeywordOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDistrictByKeywordOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDistrictByKeywordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDistrictByKeywordCompleted(Me, New GetDistrictByKeywordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCountryListByKeyword", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCountryListByKeyword(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetCountryListByKeyword", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCountryListByKeywordAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetCountryListByKeywordAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCountryListByKeywordAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetCountryListByKeywordOperationCompleted Is Nothing) Then
                Me.GetCountryListByKeywordOperationCompleted = AddressOf Me.OnGetCountryListByKeywordOperationCompleted
            End If
            Me.InvokeAsync("GetCountryListByKeyword", New Object() {AppName, AppVersion, Param}, Me.GetCountryListByKeywordOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCountryListByKeywordOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCountryListByKeywordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCountryListByKeywordCompleted(Me, New GetCountryListByKeywordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPackageConditionList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPackageConditionList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetPackageConditionList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPackageConditionListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetPackageConditionListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPackageConditionListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetPackageConditionListOperationCompleted Is Nothing) Then
                Me.GetPackageConditionListOperationCompleted = AddressOf Me.OnGetPackageConditionListOperationCompleted
            End If
            Me.InvokeAsync("GetPackageConditionList", New Object() {AppName, AppVersion, Param}, Me.GetPackageConditionListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPackageConditionListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPackageConditionListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPackageConditionListCompleted(Me, New GetPackageConditionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetThirdPartyList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetThirdPartyList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetThirdPartyList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetThirdPartyListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetThirdPartyListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetThirdPartyListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetThirdPartyListOperationCompleted Is Nothing) Then
                Me.GetThirdPartyListOperationCompleted = AddressOf Me.OnGetThirdPartyListOperationCompleted
            End If
            Me.InvokeAsync("GetThirdPartyList", New Object() {AppName, AppVersion, Param}, Me.GetThirdPartyListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetThirdPartyListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetThirdPartyListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetThirdPartyListCompleted(Me, New GetThirdPartyListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExpeditionList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetExpeditionList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetExpeditionList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetExpeditionListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetExpeditionListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetExpeditionListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetExpeditionListOperationCompleted Is Nothing) Then
                Me.GetExpeditionListOperationCompleted = AddressOf Me.OnGetExpeditionListOperationCompleted
            End If
            Me.InvokeAsync("GetExpeditionList", New Object() {AppName, AppVersion, Param}, Me.GetExpeditionListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetExpeditionListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetExpeditionListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetExpeditionListCompleted(Me, New GetExpeditionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExpeditionListMatrix", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetExpeditionListMatrix(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsExpedition As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("GetExpeditionListMatrix", New Object() {AppName, AppVersion, Param, dsExpedition})
            dsExpedition = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetExpeditionListMatrixAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsExpedition As System.Data.DataSet)
            Me.GetExpeditionListMatrixAsync(AppName, AppVersion, Param, dsExpedition, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetExpeditionListMatrixAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsExpedition As System.Data.DataSet, ByVal userState As Object)
            If (Me.GetExpeditionListMatrixOperationCompleted Is Nothing) Then
                Me.GetExpeditionListMatrixOperationCompleted = AddressOf Me.OnGetExpeditionListMatrixOperationCompleted
            End If
            Me.InvokeAsync("GetExpeditionListMatrix", New Object() {AppName, AppVersion, Param, dsExpedition}, Me.GetExpeditionListMatrixOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetExpeditionListMatrixOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetExpeditionListMatrixCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetExpeditionListMatrixCompleted(Me, New GetExpeditionListMatrixCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetJalurEkspedisiList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetJalurEkspedisiList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetJalurEkspedisiList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetJalurEkspedisiListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetJalurEkspedisiListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetJalurEkspedisiListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetJalurEkspedisiListOperationCompleted Is Nothing) Then
                Me.GetJalurEkspedisiListOperationCompleted = AddressOf Me.OnGetJalurEkspedisiListOperationCompleted
            End If
            Me.InvokeAsync("GetJalurEkspedisiList", New Object() {AppName, AppVersion, Param}, Me.GetJalurEkspedisiListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetJalurEkspedisiListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetJalurEkspedisiListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetJalurEkspedisiListCompleted(Me, New GetJalurEkspedisiListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountCategoryList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountCategoryList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAccountCategoryList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountCategoryListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetAccountCategoryListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountCategoryListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAccountCategoryListOperationCompleted Is Nothing) Then
                Me.GetAccountCategoryListOperationCompleted = AddressOf Me.OnGetAccountCategoryListOperationCompleted
            End If
            Me.InvokeAsync("GetAccountCategoryList", New Object() {AppName, AppVersion, Param}, Me.GetAccountCategoryListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountCategoryListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountCategoryListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountCategoryListCompleted(Me, New GetAccountCategoryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountSubCategoryList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountSubCategoryList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAccountSubCategoryList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountSubCategoryListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetAccountSubCategoryListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountSubCategoryListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAccountSubCategoryListOperationCompleted Is Nothing) Then
                Me.GetAccountSubCategoryListOperationCompleted = AddressOf Me.OnGetAccountSubCategoryListOperationCompleted
            End If
            Me.InvokeAsync("GetAccountSubCategoryList", New Object() {AppName, AppVersion, Param}, Me.GetAccountSubCategoryListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountSubCategoryListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountSubCategoryListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountSubCategoryListCompleted(Me, New GetAccountSubCategoryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetECommerceListWithCategoryAndSubCategory", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetECommerceListWithCategoryAndSubCategory(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("GetECommerceListWithCategoryAndSubCategory", New Object() {AppName, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetECommerceListWithCategoryAndSubCategoryAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.GetECommerceListWithCategoryAndSubCategoryAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetECommerceListWithCategoryAndSubCategoryAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.GetECommerceListWithCategoryAndSubCategoryOperationCompleted Is Nothing) Then
                Me.GetECommerceListWithCategoryAndSubCategoryOperationCompleted = AddressOf Me.OnGetECommerceListWithCategoryAndSubCategoryOperationCompleted
            End If
            Me.InvokeAsync("GetECommerceListWithCategoryAndSubCategory", New Object() {AppName, AppVersion, Param, dsData}, Me.GetECommerceListWithCategoryAndSubCategoryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetECommerceListWithCategoryAndSubCategoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetECommerceListWithCategoryAndSubCategoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetECommerceListWithCategoryAndSubCategoryCompleted(Me, New GetECommerceListWithCategoryAndSubCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetECommerceList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetECommerceList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetECommerceList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetECommerceListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetECommerceListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetECommerceListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetECommerceListOperationCompleted Is Nothing) Then
                Me.GetECommerceListOperationCompleted = AddressOf Me.OnGetECommerceListOperationCompleted
            End If
            Me.InvokeAsync("GetECommerceList", New Object() {AppName, AppVersion, Param}, Me.GetECommerceListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetECommerceListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetECommerceListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetECommerceListCompleted(Me, New GetECommerceListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetECommerceListByFinType", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetECommerceListByFinType(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetECommerceListByFinType", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetECommerceListByFinTypeAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetECommerceListByFinTypeAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetECommerceListByFinTypeAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetECommerceListByFinTypeOperationCompleted Is Nothing) Then
                Me.GetECommerceListByFinTypeOperationCompleted = AddressOf Me.OnGetECommerceListByFinTypeOperationCompleted
            End If
            Me.InvokeAsync("GetECommerceListByFinType", New Object() {AppName, AppVersion, Param}, Me.GetECommerceListByFinTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetECommerceListByFinTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetECommerceListByFinTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetECommerceListByFinTypeCompleted(Me, New GetECommerceListByFinTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVehicleTypeList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetVehicleTypeList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetVehicleTypeList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetVehicleTypeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetVehicleTypeListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetVehicleTypeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetVehicleTypeListOperationCompleted Is Nothing) Then
                Me.GetVehicleTypeListOperationCompleted = AddressOf Me.OnGetVehicleTypeListOperationCompleted
            End If
            Me.InvokeAsync("GetVehicleTypeList", New Object() {AppName, AppVersion, Param}, Me.GetVehicleTypeListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetVehicleTypeListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetVehicleTypeListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetVehicleTypeListCompleted(Me, New GetVehicleTypeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTrackingStatusList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTrackingStatusList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetTrackingStatusList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTrackingStatusListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetTrackingStatusListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTrackingStatusListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetTrackingStatusListOperationCompleted Is Nothing) Then
                Me.GetTrackingStatusListOperationCompleted = AddressOf Me.OnGetTrackingStatusListOperationCompleted
            End If
            Me.InvokeAsync("GetTrackingStatusList", New Object() {AppName, AppVersion, Param}, Me.GetTrackingStatusListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTrackingStatusListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTrackingStatusListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTrackingStatusListCompleted(Me, New GetTrackingStatusListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTrackingStatusListForReport", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTrackingStatusListForReport(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetTrackingStatusListForReport", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTrackingStatusListForReportAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetTrackingStatusListForReportAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTrackingStatusListForReportAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetTrackingStatusListForReportOperationCompleted Is Nothing) Then
                Me.GetTrackingStatusListForReportOperationCompleted = AddressOf Me.OnGetTrackingStatusListForReportOperationCompleted
            End If
            Me.InvokeAsync("GetTrackingStatusListForReport", New Object() {AppName, AppVersion, Param}, Me.GetTrackingStatusListForReportOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTrackingStatusListForReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTrackingStatusListForReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTrackingStatusListForReportCompleted(Me, New GetTrackingStatusListForReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTrackingStatusMappingList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTrackingStatusMappingList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetTrackingStatusMappingList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTrackingStatusMappingListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetTrackingStatusMappingListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTrackingStatusMappingListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetTrackingStatusMappingListOperationCompleted Is Nothing) Then
                Me.GetTrackingStatusMappingListOperationCompleted = AddressOf Me.OnGetTrackingStatusMappingListOperationCompleted
            End If
            Me.InvokeAsync("GetTrackingStatusMappingList", New Object() {AppName, AppVersion, Param}, Me.GetTrackingStatusMappingListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTrackingStatusMappingListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTrackingStatusMappingListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTrackingStatusMappingListCompleted(Me, New GetTrackingStatusMappingListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountDCList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountDCList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAccountDCList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountDCListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetAccountDCListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountDCListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAccountDCListOperationCompleted Is Nothing) Then
                Me.GetAccountDCListOperationCompleted = AddressOf Me.OnGetAccountDCListOperationCompleted
            End If
            Me.InvokeAsync("GetAccountDCList", New Object() {AppName, AppVersion, Param}, Me.GetAccountDCListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountDCListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountDCListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountDCListCompleted(Me, New GetAccountDCListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetAccountDCList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetAccountDCList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SetAccountDCList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetAccountDCListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SetAccountDCListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetAccountDCListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SetAccountDCListOperationCompleted Is Nothing) Then
                Me.SetAccountDCListOperationCompleted = AddressOf Me.OnSetAccountDCListOperationCompleted
            End If
            Me.InvokeAsync("SetAccountDCList", New Object() {AppName, AppVersion, Param}, Me.SetAccountDCListOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetAccountDCListOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetAccountDCListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetAccountDCListCompleted(Me, New SetAccountDCListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountCityTruckingList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountCityTruckingList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAccountCityTruckingList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountCityTruckingListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetAccountCityTruckingListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountCityTruckingListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAccountCityTruckingListOperationCompleted Is Nothing) Then
                Me.GetAccountCityTruckingListOperationCompleted = AddressOf Me.OnGetAccountCityTruckingListOperationCompleted
            End If
            Me.InvokeAsync("GetAccountCityTruckingList", New Object() {AppName, AppVersion, Param}, Me.GetAccountCityTruckingListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountCityTruckingListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountCityTruckingListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountCityTruckingListCompleted(Me, New GetAccountCityTruckingListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetAccountCityTruckingList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetAccountCityTruckingList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SetAccountCityTruckingList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetAccountCityTruckingListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SetAccountCityTruckingListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetAccountCityTruckingListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SetAccountCityTruckingListOperationCompleted Is Nothing) Then
                Me.SetAccountCityTruckingListOperationCompleted = AddressOf Me.OnSetAccountCityTruckingListOperationCompleted
            End If
            Me.InvokeAsync("SetAccountCityTruckingList", New Object() {AppName, AppVersion, Param}, Me.SetAccountCityTruckingListOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetAccountCityTruckingListOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetAccountCityTruckingListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetAccountCityTruckingListCompleted(Me, New SetAccountCityTruckingListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountCityDoorList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountCityDoorList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAccountCityDoorList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountCityDoorListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetAccountCityDoorListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountCityDoorListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAccountCityDoorListOperationCompleted Is Nothing) Then
                Me.GetAccountCityDoorListOperationCompleted = AddressOf Me.OnGetAccountCityDoorListOperationCompleted
            End If
            Me.InvokeAsync("GetAccountCityDoorList", New Object() {AppName, AppVersion, Param}, Me.GetAccountCityDoorListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountCityDoorListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountCityDoorListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountCityDoorListCompleted(Me, New GetAccountCityDoorListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetAccountCityDoorList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetAccountCityDoorList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SetAccountCityDoorList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetAccountCityDoorListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SetAccountCityDoorListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetAccountCityDoorListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SetAccountCityDoorListOperationCompleted Is Nothing) Then
                Me.SetAccountCityDoorListOperationCompleted = AddressOf Me.OnSetAccountCityDoorListOperationCompleted
            End If
            Me.InvokeAsync("SetAccountCityDoorList", New Object() {AppName, AppVersion, Param}, Me.SetAccountCityDoorListOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetAccountCityDoorListOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetAccountCityDoorListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetAccountCityDoorListCompleted(Me, New SetAccountCityDoorListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountCityDoorToPickupList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountCityDoorToPickupList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAccountCityDoorToPickupList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountCityDoorToPickupListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetAccountCityDoorToPickupListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountCityDoorToPickupListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAccountCityDoorToPickupListOperationCompleted Is Nothing) Then
                Me.GetAccountCityDoorToPickupListOperationCompleted = AddressOf Me.OnGetAccountCityDoorToPickupListOperationCompleted
            End If
            Me.InvokeAsync("GetAccountCityDoorToPickupList", New Object() {AppName, AppVersion, Param}, Me.GetAccountCityDoorToPickupListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountCityDoorToPickupListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountCityDoorToPickupListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountCityDoorToPickupListCompleted(Me, New GetAccountCityDoorToPickupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetAccountCityDoorToPickupList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetAccountCityDoorToPickupList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SetAccountCityDoorToPickupList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetAccountCityDoorToPickupListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SetAccountCityDoorToPickupListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetAccountCityDoorToPickupListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SetAccountCityDoorToPickupListOperationCompleted Is Nothing) Then
                Me.SetAccountCityDoorToPickupListOperationCompleted = AddressOf Me.OnSetAccountCityDoorToPickupListOperationCompleted
            End If
            Me.InvokeAsync("SetAccountCityDoorToPickupList", New Object() {AppName, AppVersion, Param}, Me.SetAccountCityDoorToPickupListOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetAccountCityDoorToPickupListOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetAccountCityDoorToPickupListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetAccountCityDoorToPickupListCompleted(Me, New SetAccountCityDoorToPickupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountCityPickupList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountCityPickupList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAccountCityPickupList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountCityPickupListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetAccountCityPickupListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountCityPickupListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAccountCityPickupListOperationCompleted Is Nothing) Then
                Me.GetAccountCityPickupListOperationCompleted = AddressOf Me.OnGetAccountCityPickupListOperationCompleted
            End If
            Me.InvokeAsync("GetAccountCityPickupList", New Object() {AppName, AppVersion, Param}, Me.GetAccountCityPickupListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountCityPickupListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountCityPickupListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountCityPickupListCompleted(Me, New GetAccountCityPickupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetAccountCityPickupList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetAccountCityPickupList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SetAccountCityPickupList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetAccountCityPickupListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SetAccountCityPickupListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetAccountCityPickupListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SetAccountCityPickupListOperationCompleted Is Nothing) Then
                Me.SetAccountCityPickupListOperationCompleted = AddressOf Me.OnSetAccountCityPickupListOperationCompleted
            End If
            Me.InvokeAsync("SetAccountCityPickupList", New Object() {AppName, AppVersion, Param}, Me.SetAccountCityPickupListOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetAccountCityPickupListOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetAccountCityPickupListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetAccountCityPickupListCompleted(Me, New SetAccountCityPickupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountSettingTypeList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountSettingTypeList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("GetAccountSettingTypeList", New Object() {AppName, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountSettingTypeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.GetAccountSettingTypeListAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountSettingTypeListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.GetAccountSettingTypeListOperationCompleted Is Nothing) Then
                Me.GetAccountSettingTypeListOperationCompleted = AddressOf Me.OnGetAccountSettingTypeListOperationCompleted
            End If
            Me.InvokeAsync("GetAccountSettingTypeList", New Object() {AppName, AppVersion, Param, dsData}, Me.GetAccountSettingTypeListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountSettingTypeListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountSettingTypeListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountSettingTypeListCompleted(Me, New GetAccountSettingTypeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountSetting", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountSetting(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("GetAccountSetting", New Object() {AppName, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountSettingAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.GetAccountSettingAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountSettingAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.GetAccountSettingOperationCompleted Is Nothing) Then
                Me.GetAccountSettingOperationCompleted = AddressOf Me.OnGetAccountSettingOperationCompleted
            End If
            Me.InvokeAsync("GetAccountSetting", New Object() {AppName, AppVersion, Param, dsData}, Me.GetAccountSettingOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountSettingOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountSettingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountSettingCompleted(Me, New GetAccountSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetAccountSetting", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetAccountSetting(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("SetAccountSetting", New Object() {AppName, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetAccountSettingAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.SetAccountSettingAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetAccountSettingAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.SetAccountSettingOperationCompleted Is Nothing) Then
                Me.SetAccountSettingOperationCompleted = AddressOf Me.OnSetAccountSettingOperationCompleted
            End If
            Me.InvokeAsync("SetAccountSetting", New Object() {AppName, AppVersion, Param, dsData}, Me.SetAccountSettingOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetAccountSettingOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetAccountSettingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetAccountSettingCompleted(Me, New SetAccountSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountMaxWeight", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountMaxWeight(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAccountMaxWeight", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountMaxWeightAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetAccountMaxWeightAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountMaxWeightAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAccountMaxWeightOperationCompleted Is Nothing) Then
                Me.GetAccountMaxWeightOperationCompleted = AddressOf Me.OnGetAccountMaxWeightOperationCompleted
            End If
            Me.InvokeAsync("GetAccountMaxWeight", New Object() {AppName, AppVersion, Param}, Me.GetAccountMaxWeightOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountMaxWeightOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountMaxWeightCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountMaxWeightCompleted(Me, New GetAccountMaxWeightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetAccountMaxWeight", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetAccountMaxWeight(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SetAccountMaxWeight", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetAccountMaxWeightAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SetAccountMaxWeightAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetAccountMaxWeightAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SetAccountMaxWeightOperationCompleted Is Nothing) Then
                Me.SetAccountMaxWeightOperationCompleted = AddressOf Me.OnSetAccountMaxWeightOperationCompleted
            End If
            Me.InvokeAsync("SetAccountMaxWeight", New Object() {AppName, AppVersion, Param}, Me.SetAccountMaxWeightOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetAccountMaxWeightOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetAccountMaxWeightCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetAccountMaxWeightCompleted(Me, New SetAccountMaxWeightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountMaxWeight3PL", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountMaxWeight3PL(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAccountMaxWeight3PL", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountMaxWeight3PLAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetAccountMaxWeight3PLAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountMaxWeight3PLAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAccountMaxWeight3PLOperationCompleted Is Nothing) Then
                Me.GetAccountMaxWeight3PLOperationCompleted = AddressOf Me.OnGetAccountMaxWeight3PLOperationCompleted
            End If
            Me.InvokeAsync("GetAccountMaxWeight3PL", New Object() {AppName, AppVersion, Param}, Me.GetAccountMaxWeight3PLOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountMaxWeight3PLOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountMaxWeight3PLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountMaxWeight3PLCompleted(Me, New GetAccountMaxWeight3PLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetAccountMaxWeight3PL", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetAccountMaxWeight3PL(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SetAccountMaxWeight3PL", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetAccountMaxWeight3PLAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SetAccountMaxWeight3PLAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetAccountMaxWeight3PLAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SetAccountMaxWeight3PLOperationCompleted Is Nothing) Then
                Me.SetAccountMaxWeight3PLOperationCompleted = AddressOf Me.OnSetAccountMaxWeight3PLOperationCompleted
            End If
            Me.InvokeAsync("SetAccountMaxWeight3PL", New Object() {AppName, AppVersion, Param}, Me.SetAccountMaxWeight3PLOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetAccountMaxWeight3PLOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetAccountMaxWeight3PLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetAccountMaxWeight3PLCompleted(Me, New SetAccountMaxWeight3PLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountMaxPckValue", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountMaxPckValue(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAccountMaxPckValue", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountMaxPckValueAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetAccountMaxPckValueAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountMaxPckValueAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAccountMaxPckValueOperationCompleted Is Nothing) Then
                Me.GetAccountMaxPckValueOperationCompleted = AddressOf Me.OnGetAccountMaxPckValueOperationCompleted
            End If
            Me.InvokeAsync("GetAccountMaxPckValue", New Object() {AppName, AppVersion, Param}, Me.GetAccountMaxPckValueOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountMaxPckValueOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountMaxPckValueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountMaxPckValueCompleted(Me, New GetAccountMaxPckValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetAccountMaxPckValue", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetAccountMaxPckValue(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SetAccountMaxPckValue", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetAccountMaxPckValueAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SetAccountMaxPckValueAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetAccountMaxPckValueAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SetAccountMaxPckValueOperationCompleted Is Nothing) Then
                Me.SetAccountMaxPckValueOperationCompleted = AddressOf Me.OnSetAccountMaxPckValueOperationCompleted
            End If
            Me.InvokeAsync("SetAccountMaxPckValue", New Object() {AppName, AppVersion, Param}, Me.SetAccountMaxPckValueOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetAccountMaxPckValueOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetAccountMaxPckValueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetAccountMaxPckValueCompleted(Me, New SetAccountMaxPckValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountMaxCodValue", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountMaxCodValue(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAccountMaxCodValue", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountMaxCodValueAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetAccountMaxCodValueAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountMaxCodValueAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAccountMaxCodValueOperationCompleted Is Nothing) Then
                Me.GetAccountMaxCodValueOperationCompleted = AddressOf Me.OnGetAccountMaxCodValueOperationCompleted
            End If
            Me.InvokeAsync("GetAccountMaxCodValue", New Object() {AppName, AppVersion, Param}, Me.GetAccountMaxCodValueOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountMaxCodValueOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountMaxCodValueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountMaxCodValueCompleted(Me, New GetAccountMaxCodValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetAccountMaxCodValue", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetAccountMaxCodValue(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SetAccountMaxCodValue", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetAccountMaxCodValueAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SetAccountMaxCodValueAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetAccountMaxCodValueAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SetAccountMaxCodValueOperationCompleted Is Nothing) Then
                Me.SetAccountMaxCodValueOperationCompleted = AddressOf Me.OnSetAccountMaxCodValueOperationCompleted
            End If
            Me.InvokeAsync("SetAccountMaxCodValue", New Object() {AppName, AppVersion, Param}, Me.SetAccountMaxCodValueOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetAccountMaxCodValueOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetAccountMaxCodValueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetAccountMaxCodValueCompleted(Me, New SetAccountMaxCodValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountMaxDimension", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountMaxDimension(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAccountMaxDimension", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountMaxDimensionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetAccountMaxDimensionAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountMaxDimensionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAccountMaxDimensionOperationCompleted Is Nothing) Then
                Me.GetAccountMaxDimensionOperationCompleted = AddressOf Me.OnGetAccountMaxDimensionOperationCompleted
            End If
            Me.InvokeAsync("GetAccountMaxDimension", New Object() {AppName, AppVersion, Param}, Me.GetAccountMaxDimensionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountMaxDimensionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountMaxDimensionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountMaxDimensionCompleted(Me, New GetAccountMaxDimensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetAccountMaxDimension", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetAccountMaxDimension(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SetAccountMaxDimension", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetAccountMaxDimensionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SetAccountMaxDimensionAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetAccountMaxDimensionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SetAccountMaxDimensionOperationCompleted Is Nothing) Then
                Me.SetAccountMaxDimensionOperationCompleted = AddressOf Me.OnSetAccountMaxDimensionOperationCompleted
            End If
            Me.InvokeAsync("SetAccountMaxDimension", New Object() {AppName, AppVersion, Param}, Me.SetAccountMaxDimensionOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetAccountMaxDimensionOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetAccountMaxDimensionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetAccountMaxDimensionCompleted(Me, New SetAccountMaxDimensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountMaxAndSpcDimension", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountMaxAndSpcDimension(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAccountMaxAndSpcDimension", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountMaxAndSpcDimensionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetAccountMaxAndSpcDimensionAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountMaxAndSpcDimensionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAccountMaxAndSpcDimensionOperationCompleted Is Nothing) Then
                Me.GetAccountMaxAndSpcDimensionOperationCompleted = AddressOf Me.OnGetAccountMaxAndSpcDimensionOperationCompleted
            End If
            Me.InvokeAsync("GetAccountMaxAndSpcDimension", New Object() {AppName, AppVersion, Param}, Me.GetAccountMaxAndSpcDimensionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountMaxAndSpcDimensionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountMaxAndSpcDimensionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountMaxAndSpcDimensionCompleted(Me, New GetAccountMaxAndSpcDimensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetAccountMaxAndSpcDimension", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetAccountMaxAndSpcDimension(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SetAccountMaxAndSpcDimension", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetAccountMaxAndSpcDimensionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SetAccountMaxAndSpcDimensionAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetAccountMaxAndSpcDimensionAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SetAccountMaxAndSpcDimensionOperationCompleted Is Nothing) Then
                Me.SetAccountMaxAndSpcDimensionOperationCompleted = AddressOf Me.OnSetAccountMaxAndSpcDimensionOperationCompleted
            End If
            Me.InvokeAsync("SetAccountMaxAndSpcDimension", New Object() {AppName, AppVersion, Param}, Me.SetAccountMaxAndSpcDimensionOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetAccountMaxAndSpcDimensionOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetAccountMaxAndSpcDimensionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetAccountMaxAndSpcDimensionCompleted(Me, New SetAccountMaxAndSpcDimensionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountMaxAndSpcDimension3PL", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountMaxAndSpcDimension3PL(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAccountMaxAndSpcDimension3PL", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountMaxAndSpcDimension3PLAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetAccountMaxAndSpcDimension3PLAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountMaxAndSpcDimension3PLAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAccountMaxAndSpcDimension3PLOperationCompleted Is Nothing) Then
                Me.GetAccountMaxAndSpcDimension3PLOperationCompleted = AddressOf Me.OnGetAccountMaxAndSpcDimension3PLOperationCompleted
            End If
            Me.InvokeAsync("GetAccountMaxAndSpcDimension3PL", New Object() {AppName, AppVersion, Param}, Me.GetAccountMaxAndSpcDimension3PLOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountMaxAndSpcDimension3PLOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountMaxAndSpcDimension3PLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountMaxAndSpcDimension3PLCompleted(Me, New GetAccountMaxAndSpcDimension3PLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountCountryList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountCountryList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("GetAccountCountryList", New Object() {AppName, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountCountryListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.GetAccountCountryListAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountCountryListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.GetAccountCountryListOperationCompleted Is Nothing) Then
                Me.GetAccountCountryListOperationCompleted = AddressOf Me.OnGetAccountCountryListOperationCompleted
            End If
            Me.InvokeAsync("GetAccountCountryList", New Object() {AppName, AppVersion, Param, dsData}, Me.GetAccountCountryListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountCountryListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountCountryListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountCountryListCompleted(Me, New GetAccountCountryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetAccountCountryList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetAccountCountryList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SetAccountCountryList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetAccountCountryListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SetAccountCountryListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetAccountCountryListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SetAccountCountryListOperationCompleted Is Nothing) Then
                Me.SetAccountCountryListOperationCompleted = AddressOf Me.OnSetAccountCountryListOperationCompleted
            End If
            Me.InvokeAsync("SetAccountCountryList", New Object() {AppName, AppVersion, Param}, Me.SetAccountCountryListOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetAccountCountryListOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetAccountCountryListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetAccountCountryListCompleted(Me, New SetAccountCountryListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountCoAddrNoNum", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAccountCoAddrNoNum(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetAccountCoAddrNoNum", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAccountCoAddrNoNumAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetAccountCoAddrNoNumAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAccountCoAddrNoNumAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetAccountCoAddrNoNumOperationCompleted Is Nothing) Then
                Me.GetAccountCoAddrNoNumOperationCompleted = AddressOf Me.OnGetAccountCoAddrNoNumOperationCompleted
            End If
            Me.InvokeAsync("GetAccountCoAddrNoNum", New Object() {AppName, AppVersion, Param}, Me.GetAccountCoAddrNoNumOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAccountCoAddrNoNumOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAccountCoAddrNoNumCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAccountCoAddrNoNumCompleted(Me, New GetAccountCoAddrNoNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetAccountCoAddrNoNum", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetAccountCoAddrNoNum(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("SetAccountCoAddrNoNum", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetAccountCoAddrNoNumAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.SetAccountCoAddrNoNumAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetAccountCoAddrNoNumAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.SetAccountCoAddrNoNumOperationCompleted Is Nothing) Then
                Me.SetAccountCoAddrNoNumOperationCompleted = AddressOf Me.OnSetAccountCoAddrNoNumOperationCompleted
            End If
            Me.InvokeAsync("SetAccountCoAddrNoNum", New Object() {AppName, AppVersion, Param}, Me.SetAccountCoAddrNoNumOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetAccountCoAddrNoNumOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetAccountCoAddrNoNumCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetAccountCoAddrNoNumCompleted(Me, New SetAccountCoAddrNoNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEWalletList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEWalletList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetEWalletList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEWalletListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetEWalletListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEWalletListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetEWalletListOperationCompleted Is Nothing) Then
                Me.GetEWalletListOperationCompleted = AddressOf Me.OnGetEWalletListOperationCompleted
            End If
            Me.InvokeAsync("GetEWalletList", New Object() {AppName, AppVersion, Param}, Me.GetEWalletListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEWalletListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEWalletListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEWalletListCompleted(Me, New GetEWalletListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBankList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBankList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetBankList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBankListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetBankListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBankListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetBankListOperationCompleted Is Nothing) Then
                Me.GetBankListOperationCompleted = AddressOf Me.OnGetBankListOperationCompleted
            End If
            Me.InvokeAsync("GetBankList", New Object() {AppName, AppVersion, Param}, Me.GetBankListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBankListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBankListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBankListCompleted(Me, New GetBankListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBankListJson", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBankListJson(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As String
            Dim results() As Object = Me.Invoke("GetBankListJson", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBankListJsonAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetBankListJsonAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBankListJsonAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetBankListJsonOperationCompleted Is Nothing) Then
                Me.GetBankListJsonOperationCompleted = AddressOf Me.OnGetBankListJsonOperationCompleted
            End If
            Me.InvokeAsync("GetBankListJson", New Object() {AppName, AppVersion, Param}, Me.GetBankListJsonOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBankListJsonOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBankListJsonCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBankListJsonCompleted(Me, New GetBankListJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetComplainList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetComplainList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetComplainList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetComplainListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetComplainListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetComplainListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetComplainListOperationCompleted Is Nothing) Then
                Me.GetComplainListOperationCompleted = AddressOf Me.OnGetComplainListOperationCompleted
            End If
            Me.InvokeAsync("GetComplainList", New Object() {AppName, AppVersion, Param}, Me.GetComplainListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetComplainListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetComplainListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetComplainListCompleted(Me, New GetComplainListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNewTracknumKeywordList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetNewTracknumKeywordList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetNewTracknumKeywordList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetNewTracknumKeywordListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetNewTracknumKeywordListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetNewTracknumKeywordListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetNewTracknumKeywordListOperationCompleted Is Nothing) Then
                Me.GetNewTracknumKeywordListOperationCompleted = AddressOf Me.OnGetNewTracknumKeywordListOperationCompleted
            End If
            Me.InvokeAsync("GetNewTracknumKeywordList", New Object() {AppName, AppVersion, Param}, Me.GetNewTracknumKeywordListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetNewTracknumKeywordListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetNewTracknumKeywordListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetNewTracknumKeywordListCompleted(Me, New GetNewTracknumKeywordListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDoorPickupSlot", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDoorPickupSlot(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetDoorPickupSlot", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDoorPickupSlotAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetDoorPickupSlotAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDoorPickupSlotAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetDoorPickupSlotOperationCompleted Is Nothing) Then
                Me.GetDoorPickupSlotOperationCompleted = AddressOf Me.OnGetDoorPickupSlotOperationCompleted
            End If
            Me.InvokeAsync("GetDoorPickupSlot", New Object() {AppName, AppVersion, Param}, Me.GetDoorPickupSlotOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDoorPickupSlotOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDoorPickupSlotCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDoorPickupSlotCompleted(Me, New GetDoorPickupSlotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFavoriteAddressDraft", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateFavoriteAddressDraft(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("UpdateFavoriteAddressDraft", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateFavoriteAddressDraftAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.UpdateFavoriteAddressDraftAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateFavoriteAddressDraftAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.UpdateFavoriteAddressDraftOperationCompleted Is Nothing) Then
                Me.UpdateFavoriteAddressDraftOperationCompleted = AddressOf Me.OnUpdateFavoriteAddressDraftOperationCompleted
            End If
            Me.InvokeAsync("UpdateFavoriteAddressDraft", New Object() {AppName, AppVersion, Param}, Me.UpdateFavoriteAddressDraftOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateFavoriteAddressDraftOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateFavoriteAddressDraftCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateFavoriteAddressDraftCompleted(Me, New UpdateFavoriteAddressDraftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/A_WSDevelopment", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function A_WSDevelopment() As String
            Dim results() As Object = Me.Invoke("A_WSDevelopment", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub A_WSDevelopmentAsync()
            Me.A_WSDevelopmentAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub A_WSDevelopmentAsync(ByVal userState As Object)
            If (Me.A_WSDevelopmentOperationCompleted Is Nothing) Then
                Me.A_WSDevelopmentOperationCompleted = AddressOf Me.OnA_WSDevelopmentOperationCompleted
            End If
            Me.InvokeAsync("A_WSDevelopment", New Object(-1) {}, Me.A_WSDevelopmentOperationCompleted, userState)
        End Sub
        
        Private Sub OnA_WSDevelopmentOperationCompleted(ByVal arg As Object)
            If (Not (Me.A_WSDevelopmentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent A_WSDevelopmentCompleted(Me, New A_WSDevelopmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChekConnection", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ChekConnection() As String
            Dim results() As Object = Me.Invoke("ChekConnection", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ChekConnectionAsync()
            Me.ChekConnectionAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ChekConnectionAsync(ByVal userState As Object)
            If (Me.ChekConnectionOperationCompleted Is Nothing) Then
                Me.ChekConnectionOperationCompleted = AddressOf Me.OnChekConnectionOperationCompleted
            End If
            Me.InvokeAsync("ChekConnection", New Object(-1) {}, Me.ChekConnectionOperationCompleted, userState)
        End Sub
        
        Private Sub OnChekConnectionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ChekConnectionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ChekConnectionCompleted(Me, New ChekConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidasiIP", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidasiIP(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("ValidasiIP", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidasiIPAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.ValidasiIPAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidasiIPAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.ValidasiIPOperationCompleted Is Nothing) Then
                Me.ValidasiIPOperationCompleted = AddressOf Me.OnValidasiIPOperationCompleted
            End If
            Me.InvokeAsync("ValidasiIP", New Object() {AppName, AppVersion, Param}, Me.ValidasiIPOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidasiIPOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidasiIPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidasiIPCompleted(Me, New ValidasiIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Login(ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("Login", New Object() {Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoginAsync(ByVal Param() As Object)
            Me.LoginAsync(Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoginAsync(ByVal Param() As Object, ByVal userState As Object)
            If (Me.LoginOperationCompleted Is Nothing) Then
                Me.LoginOperationCompleted = AddressOf Me.OnLoginOperationCompleted
            End If
            Me.InvokeAsync("Login", New Object() {Param}, Me.LoginOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoginOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoginCompleted(Me, New LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginV2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoginV2(ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("LoginV2", New Object() {Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoginV2Async(ByVal Param() As Object)
            Me.LoginV2Async(Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoginV2Async(ByVal Param() As Object, ByVal userState As Object)
            If (Me.LoginV2OperationCompleted Is Nothing) Then
                Me.LoginV2OperationCompleted = AddressOf Me.OnLoginV2OperationCompleted
            End If
            Me.InvokeAsync("LoginV2", New Object() {Param}, Me.LoginV2OperationCompleted, userState)
        End Sub
        
        Private Sub OnLoginV2OperationCompleted(ByVal arg As Object)
            If (Not (Me.LoginV2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoginV2Completed(Me, New LoginV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginResetPassword", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoginResetPassword(ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("LoginResetPassword", New Object() {Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoginResetPasswordAsync(ByVal Param() As Object)
            Me.LoginResetPasswordAsync(Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoginResetPasswordAsync(ByVal Param() As Object, ByVal userState As Object)
            If (Me.LoginResetPasswordOperationCompleted Is Nothing) Then
                Me.LoginResetPasswordOperationCompleted = AddressOf Me.OnLoginResetPasswordOperationCompleted
            End If
            Me.InvokeAsync("LoginResetPassword", New Object() {Param}, Me.LoginResetPasswordOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoginResetPasswordOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoginResetPasswordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoginResetPasswordCompleted(Me, New LoginResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginPasswordUpdate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoginPasswordUpdate(ByVal User As String, ByVal Password As String, ByVal NewPassword As String) As Object()
            Dim results() As Object = Me.Invoke("LoginPasswordUpdate", New Object() {User, Password, NewPassword})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoginPasswordUpdateAsync(ByVal User As String, ByVal Password As String, ByVal NewPassword As String)
            Me.LoginPasswordUpdateAsync(User, Password, NewPassword, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoginPasswordUpdateAsync(ByVal User As String, ByVal Password As String, ByVal NewPassword As String, ByVal userState As Object)
            If (Me.LoginPasswordUpdateOperationCompleted Is Nothing) Then
                Me.LoginPasswordUpdateOperationCompleted = AddressOf Me.OnLoginPasswordUpdateOperationCompleted
            End If
            Me.InvokeAsync("LoginPasswordUpdate", New Object() {User, Password, NewPassword}, Me.LoginPasswordUpdateOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoginPasswordUpdateOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoginPasswordUpdateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoginPasswordUpdateCompleted(Me, New LoginPasswordUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginPasswordUpdateV2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoginPasswordUpdateV2(ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("LoginPasswordUpdateV2", New Object() {Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoginPasswordUpdateV2Async(ByVal Param() As Object)
            Me.LoginPasswordUpdateV2Async(Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoginPasswordUpdateV2Async(ByVal Param() As Object, ByVal userState As Object)
            If (Me.LoginPasswordUpdateV2OperationCompleted Is Nothing) Then
                Me.LoginPasswordUpdateV2OperationCompleted = AddressOf Me.OnLoginPasswordUpdateV2OperationCompleted
            End If
            Me.InvokeAsync("LoginPasswordUpdateV2", New Object() {Param}, Me.LoginPasswordUpdateV2OperationCompleted, userState)
        End Sub
        
        Private Sub OnLoginPasswordUpdateV2OperationCompleted(ByVal arg As Object)
            If (Not (Me.LoginPasswordUpdateV2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoginPasswordUpdateV2Completed(Me, New LoginPasswordUpdateV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckUserLogin", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckUserLogin(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("CheckUserLogin", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckUserLoginAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.CheckUserLoginAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckUserLoginAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.CheckUserLoginOperationCompleted Is Nothing) Then
                Me.CheckUserLoginOperationCompleted = AddressOf Me.OnCheckUserLoginOperationCompleted
            End If
            Me.InvokeAsync("CheckUserLogin", New Object() {AppName, AppVersion, Param}, Me.CheckUserLoginOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckUserLoginOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckUserLoginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckUserLoginCompleted(Me, New CheckUserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWebProgConst", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetWebProgConst(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("GetWebProgConst", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetWebProgConstAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.GetWebProgConstAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetWebProgConstAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.GetWebProgConstOperationCompleted Is Nothing) Then
                Me.GetWebProgConstOperationCompleted = AddressOf Me.OnGetWebProgConstOperationCompleted
            End If
            Me.InvokeAsync("GetWebProgConst", New Object() {AppName, AppVersion, Param}, Me.GetWebProgConstOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetWebProgConstOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetWebProgConstCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetWebProgConstCompleted(Me, New GetWebProgConstCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFolderLabel", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFolderLabel(ByVal Account As String) As String
            Dim results() As Object = Me.Invoke("GetFolderLabel", New Object() {Account})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFolderLabelAsync(ByVal Account As String)
            Me.GetFolderLabelAsync(Account, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFolderLabelAsync(ByVal Account As String, ByVal userState As Object)
            If (Me.GetFolderLabelOperationCompleted Is Nothing) Then
                Me.GetFolderLabelOperationCompleted = AddressOf Me.OnGetFolderLabelOperationCompleted
            End If
            Me.InvokeAsync("GetFolderLabel", New Object() {Account}, Me.GetFolderLabelOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFolderLabelOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFolderLabelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFolderLabelCompleted(Me, New GetFolderLabelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmailLabel", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmailLabel(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("EmailLabel", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmailLabelAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.EmailLabelAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmailLabelAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.EmailLabelOperationCompleted Is Nothing) Then
                Me.EmailLabelOperationCompleted = AddressOf Me.OnEmailLabelOperationCompleted
            End If
            Me.InvokeAsync("EmailLabel", New Object() {AppName, AppVersion, Param}, Me.EmailLabelOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmailLabelOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmailLabelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmailLabelCompleted(Me, New EmailLabelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintLabelTax", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PrintLabelTax(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PrintLabelTax", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PrintLabelTaxAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PrintLabelTaxAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PrintLabelTaxAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PrintLabelTaxOperationCompleted Is Nothing) Then
                Me.PrintLabelTaxOperationCompleted = AddressOf Me.OnPrintLabelTaxOperationCompleted
            End If
            Me.InvokeAsync("PrintLabelTax", New Object() {AppName, AppVersion, Param}, Me.PrintLabelTaxOperationCompleted, userState)
        End Sub
        
        Private Sub OnPrintLabelTaxOperationCompleted(ByVal arg As Object)
            If (Not (Me.PrintLabelTaxCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PrintLabelTaxCompleted(Me, New PrintLabelTaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintConsLabel", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PrintConsLabel(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PrintConsLabel", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PrintConsLabelAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PrintConsLabelAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PrintConsLabelAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PrintConsLabelOperationCompleted Is Nothing) Then
                Me.PrintConsLabelOperationCompleted = AddressOf Me.OnPrintConsLabelOperationCompleted
            End If
            Me.InvokeAsync("PrintConsLabel", New Object() {AppName, AppVersion, Param}, Me.PrintConsLabelOperationCompleted, userState)
        End Sub
        
        Private Sub OnPrintConsLabelOperationCompleted(ByVal arg As Object)
            If (Not (Me.PrintConsLabelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PrintConsLabelCompleted(Me, New PrintConsLabelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintLabel", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PrintLabel(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PrintLabel", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PrintLabelAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PrintLabelAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PrintLabelAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PrintLabelOperationCompleted Is Nothing) Then
                Me.PrintLabelOperationCompleted = AddressOf Me.OnPrintLabelOperationCompleted
            End If
            Me.InvokeAsync("PrintLabel", New Object() {AppName, AppVersion, Param}, Me.PrintLabelOperationCompleted, userState)
        End Sub
        
        Private Sub OnPrintLabelOperationCompleted(ByVal arg As Object)
            If (Not (Me.PrintLabelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PrintLabelCompleted(Me, New PrintLabelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintLabelByRefNo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PrintLabelByRefNo(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PrintLabelByRefNo", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PrintLabelByRefNoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PrintLabelByRefNoAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PrintLabelByRefNoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PrintLabelByRefNoOperationCompleted Is Nothing) Then
                Me.PrintLabelByRefNoOperationCompleted = AddressOf Me.OnPrintLabelByRefNoOperationCompleted
            End If
            Me.InvokeAsync("PrintLabelByRefNo", New Object() {AppName, AppVersion, Param}, Me.PrintLabelByRefNoOperationCompleted, userState)
        End Sub
        
        Private Sub OnPrintLabelByRefNoOperationCompleted(ByVal arg As Object)
            If (Not (Me.PrintLabelByRefNoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PrintLabelByRefNoCompleted(Me, New PrintLabelByRefNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintLabelByOrderNo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PrintLabelByOrderNo(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PrintLabelByOrderNo", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PrintLabelByOrderNoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PrintLabelByOrderNoAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PrintLabelByOrderNoAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PrintLabelByOrderNoOperationCompleted Is Nothing) Then
                Me.PrintLabelByOrderNoOperationCompleted = AddressOf Me.OnPrintLabelByOrderNoOperationCompleted
            End If
            Me.InvokeAsync("PrintLabelByOrderNo", New Object() {AppName, AppVersion, Param}, Me.PrintLabelByOrderNoOperationCompleted, userState)
        End Sub
        
        Private Sub OnPrintLabelByOrderNoOperationCompleted(ByVal arg As Object)
            If (Not (Me.PrintLabelByOrderNoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PrintLabelByOrderNoCompleted(Me, New PrintLabelByOrderNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintLabelIndogrosirWalkIn", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PrintLabelIndogrosirWalkIn(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("PrintLabelIndogrosirWalkIn", New Object() {AppName, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PrintLabelIndogrosirWalkInAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.PrintLabelIndogrosirWalkInAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PrintLabelIndogrosirWalkInAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.PrintLabelIndogrosirWalkInOperationCompleted Is Nothing) Then
                Me.PrintLabelIndogrosirWalkInOperationCompleted = AddressOf Me.OnPrintLabelIndogrosirWalkInOperationCompleted
            End If
            Me.InvokeAsync("PrintLabelIndogrosirWalkIn", New Object() {AppName, AppVersion, Param, dsData}, Me.PrintLabelIndogrosirWalkInOperationCompleted, userState)
        End Sub
        
        Private Sub OnPrintLabelIndogrosirWalkInOperationCompleted(ByVal arg As Object)
            If (Not (Me.PrintLabelIndogrosirWalkInCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PrintLabelIndogrosirWalkInCompleted(Me, New PrintLabelIndogrosirWalkInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintTandaTerimaIndogrosirWalkIn", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PrintTandaTerimaIndogrosirWalkIn(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByRef dsData As System.Data.DataSet) As Object()
            Dim results() As Object = Me.Invoke("PrintTandaTerimaIndogrosirWalkIn", New Object() {AppName, AppVersion, Param, dsData})
            dsData = CType(results(1),System.Data.DataSet)
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PrintTandaTerimaIndogrosirWalkInAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet)
            Me.PrintTandaTerimaIndogrosirWalkInAsync(AppName, AppVersion, Param, dsData, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PrintTandaTerimaIndogrosirWalkInAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal dsData As System.Data.DataSet, ByVal userState As Object)
            If (Me.PrintTandaTerimaIndogrosirWalkInOperationCompleted Is Nothing) Then
                Me.PrintTandaTerimaIndogrosirWalkInOperationCompleted = AddressOf Me.OnPrintTandaTerimaIndogrosirWalkInOperationCompleted
            End If
            Me.InvokeAsync("PrintTandaTerimaIndogrosirWalkIn", New Object() {AppName, AppVersion, Param, dsData}, Me.PrintTandaTerimaIndogrosirWalkInOperationCompleted, userState)
        End Sub
        
        Private Sub OnPrintTandaTerimaIndogrosirWalkInOperationCompleted(ByVal arg As Object)
            If (Not (Me.PrintTandaTerimaIndogrosirWalkInCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PrintTandaTerimaIndogrosirWalkInCompleted(Me, New PrintTandaTerimaIndogrosirWalkInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintSuratJalan", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PrintSuratJalan(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PrintSuratJalan", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PrintSuratJalanAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PrintSuratJalanAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PrintSuratJalanAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PrintSuratJalanOperationCompleted Is Nothing) Then
                Me.PrintSuratJalanOperationCompleted = AddressOf Me.OnPrintSuratJalanOperationCompleted
            End If
            Me.InvokeAsync("PrintSuratJalan", New Object() {AppName, AppVersion, Param}, Me.PrintSuratJalanOperationCompleted, userState)
        End Sub
        
        Private Sub OnPrintSuratJalanOperationCompleted(ByVal arg As Object)
            If (Not (Me.PrintSuratJalanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PrintSuratJalanCompleted(Me, New PrintSuratJalanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EmailSuratJalan", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmailSuratJalan(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("EmailSuratJalan", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmailSuratJalanAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.EmailSuratJalanAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmailSuratJalanAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.EmailSuratJalanOperationCompleted Is Nothing) Then
                Me.EmailSuratJalanOperationCompleted = AddressOf Me.OnEmailSuratJalanOperationCompleted
            End If
            Me.InvokeAsync("EmailSuratJalan", New Object() {AppName, AppVersion, Param}, Me.EmailSuratJalanOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmailSuratJalanOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmailSuratJalanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmailSuratJalanCompleted(Me, New EmailSuratJalanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintSuratJemputBarang", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PrintSuratJemputBarang(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PrintSuratJemputBarang", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PrintSuratJemputBarangAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PrintSuratJemputBarangAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PrintSuratJemputBarangAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PrintSuratJemputBarangOperationCompleted Is Nothing) Then
                Me.PrintSuratJemputBarangOperationCompleted = AddressOf Me.OnPrintSuratJemputBarangOperationCompleted
            End If
            Me.InvokeAsync("PrintSuratJemputBarang", New Object() {AppName, AppVersion, Param}, Me.PrintSuratJemputBarangOperationCompleted, userState)
        End Sub
        
        Private Sub OnPrintSuratJemputBarangOperationCompleted(ByVal arg As Object)
            If (Not (Me.PrintSuratJemputBarangCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PrintSuratJemputBarangCompleted(Me, New PrintSuratJemputBarangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintAwb3plByIPP", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PrintAwb3plByIPP(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PrintAwb3plByIPP", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PrintAwb3plByIPPAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PrintAwb3plByIPPAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PrintAwb3plByIPPAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PrintAwb3plByIPPOperationCompleted Is Nothing) Then
                Me.PrintAwb3plByIPPOperationCompleted = AddressOf Me.OnPrintAwb3plByIPPOperationCompleted
            End If
            Me.InvokeAsync("PrintAwb3plByIPP", New Object() {AppName, AppVersion, Param}, Me.PrintAwb3plByIPPOperationCompleted, userState)
        End Sub
        
        Private Sub OnPrintAwb3plByIPPOperationCompleted(ByVal arg As Object)
            If (Not (Me.PrintAwb3plByIPPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PrintAwb3plByIPPCompleted(Me, New PrintAwb3plByIPPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintSerahPackingList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PrintSerahPackingList(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PrintSerahPackingList", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PrintSerahPackingListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PrintSerahPackingListAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PrintSerahPackingListAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PrintSerahPackingListOperationCompleted Is Nothing) Then
                Me.PrintSerahPackingListOperationCompleted = AddressOf Me.OnPrintSerahPackingListOperationCompleted
            End If
            Me.InvokeAsync("PrintSerahPackingList", New Object() {AppName, AppVersion, Param}, Me.PrintSerahPackingListOperationCompleted, userState)
        End Sub
        
        Private Sub OnPrintSerahPackingListOperationCompleted(ByVal arg As Object)
            If (Not (Me.PrintSerahPackingListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PrintSerahPackingListCompleted(Me, New PrintSerahPackingListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintTandaTerima", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PrintTandaTerima(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PrintTandaTerima", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PrintTandaTerimaAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PrintTandaTerimaAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PrintTandaTerimaAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PrintTandaTerimaOperationCompleted Is Nothing) Then
                Me.PrintTandaTerimaOperationCompleted = AddressOf Me.OnPrintTandaTerimaOperationCompleted
            End If
            Me.InvokeAsync("PrintTandaTerima", New Object() {AppName, AppVersion, Param}, Me.PrintTandaTerimaOperationCompleted, userState)
        End Sub
        
        Private Sub OnPrintTandaTerimaOperationCompleted(ByVal arg As Object)
            If (Not (Me.PrintTandaTerimaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PrintTandaTerimaCompleted(Me, New PrintTandaTerimaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertTandaTerimaCons", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertTandaTerimaCons(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("InsertTandaTerimaCons", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertTandaTerimaConsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.InsertTandaTerimaConsAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertTandaTerimaConsAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.InsertTandaTerimaConsOperationCompleted Is Nothing) Then
                Me.InsertTandaTerimaConsOperationCompleted = AddressOf Me.OnInsertTandaTerimaConsOperationCompleted
            End If
            Me.InvokeAsync("InsertTandaTerimaCons", New Object() {AppName, AppVersion, Param}, Me.InsertTandaTerimaConsOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertTandaTerimaConsOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertTandaTerimaConsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertTandaTerimaConsCompleted(Me, New InsertTandaTerimaConsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintSuratTugas", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PrintSuratTugas(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PrintSuratTugas", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PrintSuratTugasAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PrintSuratTugasAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PrintSuratTugasAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PrintSuratTugasOperationCompleted Is Nothing) Then
                Me.PrintSuratTugasOperationCompleted = AddressOf Me.OnPrintSuratTugasOperationCompleted
            End If
            Me.InvokeAsync("PrintSuratTugas", New Object() {AppName, AppVersion, Param}, Me.PrintSuratTugasOperationCompleted, userState)
        End Sub
        
        Private Sub OnPrintSuratTugasOperationCompleted(ByVal arg As Object)
            If (Not (Me.PrintSuratTugasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PrintSuratTugasCompleted(Me, New PrintSuratTugasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintTerminal", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PrintTerminal(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PrintTerminal", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PrintTerminalAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PrintTerminalAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PrintTerminalAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PrintTerminalOperationCompleted Is Nothing) Then
                Me.PrintTerminalOperationCompleted = AddressOf Me.OnPrintTerminalOperationCompleted
            End If
            Me.InvokeAsync("PrintTerminal", New Object() {AppName, AppVersion, Param}, Me.PrintTerminalOperationCompleted, userState)
        End Sub
        
        Private Sub OnPrintTerminalOperationCompleted(ByVal arg As Object)
            If (Not (Me.PrintTerminalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PrintTerminalCompleted(Me, New PrintTerminalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintExpeditionPickup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PrintExpeditionPickup(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PrintExpeditionPickup", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PrintExpeditionPickupAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PrintExpeditionPickupAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PrintExpeditionPickupAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PrintExpeditionPickupOperationCompleted Is Nothing) Then
                Me.PrintExpeditionPickupOperationCompleted = AddressOf Me.OnPrintExpeditionPickupOperationCompleted
            End If
            Me.InvokeAsync("PrintExpeditionPickup", New Object() {AppName, AppVersion, Param}, Me.PrintExpeditionPickupOperationCompleted, userState)
        End Sub
        
        Private Sub OnPrintExpeditionPickupOperationCompleted(ByVal arg As Object)
            If (Not (Me.PrintExpeditionPickupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PrintExpeditionPickupCompleted(Me, New PrintExpeditionPickupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PINCreate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub PINCreate()
            Me.Invoke("PINCreate", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PINCreateAsync()
            Me.PINCreateAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PINCreateAsync(ByVal userState As Object)
            If (Me.PINCreateOperationCompleted Is Nothing) Then
                Me.PINCreateOperationCompleted = AddressOf Me.OnPINCreateOperationCompleted
            End If
            Me.InvokeAsync("PINCreate", New Object(-1) {}, Me.PINCreateOperationCompleted, userState)
        End Sub
        
        Private Sub OnPINCreateOperationCompleted(ByVal arg As Object)
            If (Not (Me.PINCreateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PINCreateCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PINEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub PINEmail()
            Me.Invoke("PINEmail", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PINEmailAsync()
            Me.PINEmailAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PINEmailAsync(ByVal userState As Object)
            If (Me.PINEmailOperationCompleted Is Nothing) Then
                Me.PINEmailOperationCompleted = AddressOf Me.OnPINEmailOperationCompleted
            End If
            Me.InvokeAsync("PINEmail", New Object(-1) {}, Me.PINEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnPINEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.PINEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PINEmailCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PINResend", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub PINResend()
            Me.Invoke("PINResend", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PINResendAsync()
            Me.PINResendAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PINResendAsync(ByVal userState As Object)
            If (Me.PINResendOperationCompleted Is Nothing) Then
                Me.PINResendOperationCompleted = AddressOf Me.OnPINResendOperationCompleted
            End If
            Me.InvokeAsync("PINResend", New Object(-1) {}, Me.PINResendOperationCompleted, userState)
        End Sub
        
        Private Sub OnPINResendOperationCompleted(ByVal arg As Object)
            If (Not (Me.PINResendCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PINResendCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PINRequest", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PINRequest(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object) As Object()
            Dim results() As Object = Me.Invoke("PINRequest", New Object() {AppName, AppVersion, Param})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub PINRequestAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object)
            Me.PINRequestAsync(AppName, AppVersion, Param, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PINRequestAsync(ByVal AppName As String, ByVal AppVersion As String, ByVal Param() As Object, ByVal userState As Object)
            If (Me.PINRequestOperationCompleted Is Nothing) Then
                Me.PINRequestOperationCompleted = AddressOf Me.OnPINRequestOperationCompleted
            End If
            Me.InvokeAsync("PINRequest", New Object() {AppName, AppVersion, Param}, Me.PINRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnPINRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.PINRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PINRequestCompleted(Me, New PINRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DROEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DROEmail()
            Me.Invoke("DROEmail", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DROEmailAsync()
            Me.DROEmailAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DROEmailAsync(ByVal userState As Object)
            If (Me.DROEmailOperationCompleted Is Nothing) Then
                Me.DROEmailOperationCompleted = AddressOf Me.OnDROEmailOperationCompleted
            End If
            Me.InvokeAsync("DROEmail", New Object(-1) {}, Me.DROEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnDROEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.DROEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DROEmailCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DROShEmail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DROShEmail()
            Me.Invoke("DROShEmail", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DROShEmailAsync()
            Me.DROShEmailAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DROShEmailAsync(ByVal userState As Object)
            If (Me.DROShEmailOperationCompleted Is Nothing) Then
                Me.DROShEmailOperationCompleted = AddressOf Me.OnDROShEmailOperationCompleted
            End If
            Me.InvokeAsync("DROShEmail", New Object(-1) {}, Me.DROShEmailOperationCompleted, userState)
        End Sub
        
        Private Sub OnDROShEmailOperationCompleted(ByVal arg As Object)
            If (Not (Me.DROShEmailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DROShEmailCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DashboardPartnerPickupRequestCompletedEventHandler(ByVal sender As Object, ByVal e As DashboardPartnerPickupRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DashboardPartnerPickupRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property DsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DashboardPartnerPickupInquiryCompletedEventHandler(ByVal sender As Object, ByVal e As DashboardPartnerPickupInquiryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DashboardPartnerPickupInquiryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DashboardPartnerPickupUpdateStatusCompletedEventHandler(ByVal sender As Object, ByVal e As DashboardPartnerPickupUpdateStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DashboardPartnerPickupUpdateStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DashboardPartnerPickupRequestDMSCompletedEventHandler(ByVal sender As Object, ByVal e As DashboardPartnerPickupRequestDMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DashboardPartnerPickupRequestDMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DashboardPartnerPickupGetSlotCompletedEventHandler(ByVal sender As Object, ByVal e As DashboardPartnerPickupGetSlotCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DashboardPartnerPickupGetSlotCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DashboardPartnerPickupFavoriteAddressInsertCompletedEventHandler(ByVal sender As Object, ByVal e As DashboardPartnerPickupFavoriteAddressInsertCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DashboardPartnerPickupFavoriteAddressInsertCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DashboardPartnerPickupFavoriteAddressUpdateCompletedEventHandler(ByVal sender As Object, ByVal e As DashboardPartnerPickupFavoriteAddressUpdateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DashboardPartnerPickupFavoriteAddressUpdateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DashboardPartnerPickupGetRequestAddressCompletedEventHandler(ByVal sender As Object, ByVal e As DashboardPartnerPickupGetRequestAddressCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DashboardPartnerPickupGetRequestAddressCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DashboardPartnerUpdatePickupRequestAddressCompletedEventHandler(ByVal sender As Object, ByVal e As DashboardPartnerUpdatePickupRequestAddressCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DashboardPartnerUpdatePickupRequestAddressCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DashboardPartnerUpdateDetailPickupItemsCompletedEventHandler(ByVal sender As Object, ByVal e As DashboardPartnerUpdateDetailPickupItemsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DashboardPartnerUpdateDetailPickupItemsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property DsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DashboardPartnerPickupGetDetailReqIdCompletedEventHandler(ByVal sender As Object, ByVal e As DashboardPartnerPickupGetDetailReqIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DashboardPartnerPickupGetDetailReqIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetPJBAccountItemListByKeywordCompletedEventHandler(ByVal sender As Object, ByVal e As GetPJBAccountItemListByKeywordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPJBAccountItemListByKeywordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetPJBDetailItemListCompletedEventHandler(ByVal sender As Object, ByVal e As GetPJBDetailItemListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPJBDetailItemListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DashboardPartnerPickupPairAWBPJBCompletedEventHandler(ByVal sender As Object, ByVal e As DashboardPartnerPickupPairAWBPJBCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DashboardPartnerPickupPairAWBPJBCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DashboardPartnerAutoCreatePickupRequestCompletedEventHandler(ByVal sender As Object, ByVal e As DashboardPartnerAutoCreatePickupRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DashboardPartnerAutoCreatePickupRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DashboardPartnerPickupGetPickupRequestTemplateListCompletedEventHandler(ByVal sender As Object, ByVal e As DashboardPartnerPickupGetPickupRequestTemplateListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DashboardPartnerPickupGetPickupRequestTemplateListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetTemplatePickupRequestAddressCompletedEventHandler(ByVal sender As Object, ByVal e As GetTemplatePickupRequestAddressCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTemplatePickupRequestAddressCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAutoPickupRequestSettingCompletedEventHandler(ByVal sender As Object, ByVal e As GetAutoPickupRequestSettingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAutoPickupRequestSettingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetAutoPickupRequestSettingCompletedEventHandler(ByVal sender As Object, ByVal e As SetAutoPickupRequestSettingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetAutoPickupRequestSettingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DashboardPartnerTemplateAutoPickupRequestCompletedEventHandler(ByVal sender As Object, ByVal e As DashboardPartnerTemplateAutoPickupRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DashboardPartnerTemplateAutoPickupRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property DsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DashboardPartnerUploadDOCompletedEventHandler(ByVal sender As Object, ByVal e As DashboardPartnerUploadDOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DashboardPartnerUploadDOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property DsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DashboardPartnerDODownloadTemplateCompletedEventHandler(ByVal sender As Object, ByVal e As DashboardPartnerDODownloadTemplateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DashboardPartnerDODownloadTemplateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsTemplate() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DashboardPartnerUploadPOCompletedEventHandler(ByVal sender As Object, ByVal e As DashboardPartnerUploadPOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DashboardPartnerUploadPOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property DsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DashboardPartnerPODownloadTemplateCompletedEventHandler(ByVal sender As Object, ByVal e As DashboardPartnerPODownloadTemplateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DashboardPartnerPODownloadTemplateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsTemplate() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub KurirWilayahAutoPickingCompletedEventHandler(ByVal sender As Object, ByVal e As KurirWilayahAutoPickingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class KurirWilayahAutoPickingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub KurirWilayahAntarTokoListCompletedEventHandler(ByVal sender As Object, ByVal e As KurirWilayahAntarTokoListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class KurirWilayahAntarTokoListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub KurirWilayahDeleteAntarTokoListCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub KurirWilayahPushAntarTokoListCompletedEventHandler(ByVal sender As Object, ByVal e As KurirWilayahPushAntarTokoListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class KurirWilayahPushAntarTokoListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub KurirWilayahAutoJemputTokoCompletedEventHandler(ByVal sender As Object, ByVal e As KurirWilayahAutoJemputTokoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class KurirWilayahAutoJemputTokoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub KurirWilayahJemputTokoListCompletedEventHandler(ByVal sender As Object, ByVal e As KurirWilayahJemputTokoListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class KurirWilayahJemputTokoListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub KurirWilayahPushJemputTokoListCompletedEventHandler(ByVal sender As Object, ByVal e As KurirWilayahPushJemputTokoListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class KurirWilayahPushJemputTokoListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub KurirWilayahMappingClusterListCompletedEventHandler(ByVal sender As Object, ByVal e As KurirWilayahMappingClusterListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class KurirWilayahMappingClusterListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub KurirWilayahStatusKendalaPaketCompletedEventHandler(ByVal sender As Object, ByVal e As KurirWilayahStatusKendalaPaketCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class KurirWilayahStatusKendalaPaketCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub KurirWilayahPushNotifListInsertCompletedEventHandler(ByVal sender As Object, ByVal e As KurirWilayahPushNotifListInsertCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class KurirWilayahPushNotifListInsertCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub KurirWilayahPushNotifListPushCompletedEventHandler(ByVal sender As Object, ByVal e As KurirWilayahPushNotifListPushCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class KurirWilayahPushNotifListPushCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TransactionFileUrlInsertCompletedEventHandler(ByVal sender As Object, ByVal e As TransactionFileUrlInsertCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TransactionFileUrlInsertCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TransactionFileUrlDeleteCompletedEventHandler(ByVal sender As Object, ByVal e As TransactionFileUrlDeleteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TransactionFileUrlDeleteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetBlastEmailTemplateCompletedEventHandler(ByVal sender As Object, ByVal e As GetBlastEmailTemplateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBlastEmailTemplateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetBlastEmailCategoryCompletedEventHandler(ByVal sender As Object, ByVal e As GetBlastEmailCategoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBlastEmailCategoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub BlastEmailCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub BlastEmailDeleteCompletedEventHandler(ByVal sender As Object, ByVal e As BlastEmailDeleteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BlastEmailDeleteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RajaOngkir_PopulateRateCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RajaOngkir_GetRateResponseCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RajaOngkir_CreateMappingSubdistrictCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RajaOngkir_PopulateDataCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RajaOngkir_EmailResultCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RajaOngkir_PopulateRate_V2CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RajaOngkir_GetRateResponse_V2CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RajaOngkir_CreateMappingSubdistrict_V2CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RajaOngkir_PopulateData_V2CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RajaOngkirGetConstValueCompletedEventHandler(ByVal sender As Object, ByVal e As RajaOngkirGetConstValueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RajaOngkirGetConstValueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RajaOngkirGetSubDistrictListCompletedEventHandler(ByVal sender As Object, ByVal e As RajaOngkirGetSubDistrictListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RajaOngkirGetSubDistrictListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RajaOngkirProsesOverrideCompletedEventHandler(ByVal sender As Object, ByVal e As RajaOngkirProsesOverrideCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RajaOngkirProsesOverrideCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RegSeller_CreatePartnerAccountCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RegSeller_DigitalAccountAcquisitionCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RegSeller_ResetPartnerAccountCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RegSeller_AddEmailRewardSchedulerCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RegSeller_AddEmailIncentiveSchedulerCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RegSeller_SendRewardEmailCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RegSeller_SendIncentiveEmailCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RegSeller_DeleteMailSchedulerCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub FinUpdateInvoiceTrackNumCompletedEventHandler(ByVal sender As Object, ByVal e As FinUpdateInvoiceTrackNumCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FinUpdateInvoiceTrackNumCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub FinUpdateInvoiceExpeditionCompletedEventHandler(ByVal sender As Object, ByVal e As FinUpdateInvoiceExpeditionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FinUpdateInvoiceExpeditionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub NoResiKonsolGetNomorCompletedEventHandler(ByVal sender As Object, ByVal e As NoResiKonsolGetNomorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NoResiKonsolGetNomorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetToolsStockListCompletedEventHandler(ByVal sender As Object, ByVal e As GetToolsStockListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetToolsStockListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ToolsStockUpdateCompletedEventHandler(ByVal sender As Object, ByVal e As ToolsStockUpdateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ToolsStockUpdateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetToolsListCompletedEventHandler(ByVal sender As Object, ByVal e As GetToolsListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetToolsListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetToolsSupplierListCompletedEventHandler(ByVal sender As Object, ByVal e As GetToolsSupplierListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetToolsSupplierListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetToolsStockRequestListCompletedEventHandler(ByVal sender As Object, ByVal e As GetToolsStockRequestListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetToolsStockRequestListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ToolsRequestCompletedEventHandler(ByVal sender As Object, ByVal e As ToolsRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ToolsRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetToolsRequestListCompletedEventHandler(ByVal sender As Object, ByVal e As GetToolsRequestListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetToolsRequestListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ToolsFulfillmentCompletedEventHandler(ByVal sender As Object, ByVal e As ToolsFulfillmentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ToolsFulfillmentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetToolsAwbGroupListCompletedEventHandler(ByVal sender As Object, ByVal e As GetToolsAwbGroupListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetToolsAwbGroupListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetToolsListNewCompletedEventHandler(ByVal sender As Object, ByVal e As GetToolsListNewCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetToolsListNewCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetToolsHubListNewCompletedEventHandler(ByVal sender As Object, ByVal e As GetToolsHubListNewCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetToolsHubListNewCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetToolsFulfillmentListNewCompletedEventHandler(ByVal sender As Object, ByVal e As GetToolsFulfillmentListNewCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetToolsFulfillmentListNewCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ToolsUpdateNewCompletedEventHandler(ByVal sender As Object, ByVal e As ToolsUpdateNewCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ToolsUpdateNewCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ToolsHubUpdateNewCompletedEventHandler(ByVal sender As Object, ByVal e As ToolsHubUpdateNewCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ToolsHubUpdateNewCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ToolsFulfillmentNewCompletedEventHandler(ByVal sender As Object, ByVal e As ToolsFulfillmentNewCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ToolsFulfillmentNewCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ToolsCreateAwbCompletedEventHandler(ByVal sender As Object, ByVal e As ToolsCreateAwbCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ToolsCreateAwbCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetToolsAwbGroupAllCompletedEventHandler(ByVal sender As Object, ByVal e As GetToolsAwbGroupAllCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetToolsAwbGroupAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ToolsAddAwbGroupCompletedEventHandler(ByVal sender As Object, ByVal e As ToolsAddAwbGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ToolsAddAwbGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ToolsAddToolsCompletedEventHandler(ByVal sender As Object, ByVal e As ToolsAddToolsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ToolsAddToolsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetToolsListForDdlCompletedEventHandler(ByVal sender As Object, ByVal e As GetToolsListForDdlCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetToolsListForDdlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PartnerItemListSpecialCaseCompletedEventHandler(ByVal sender As Object, ByVal e As PartnerItemListSpecialCaseCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PartnerItemListSpecialCaseCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PartnerItemListProcessCompletedEventHandler(ByVal sender As Object, ByVal e As PartnerItemListProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PartnerItemListProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PartnerItemListHubItemCompletedEventHandler(ByVal sender As Object, ByVal e As PartnerItemListHubItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PartnerItemListHubItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PartnerItemListAllItemCompletedEventHandler(ByVal sender As Object, ByVal e As PartnerItemListAllItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PartnerItemListAllItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PartnerItemListReportCategoryCompletedEventHandler(ByVal sender As Object, ByVal e As PartnerItemListReportCategoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PartnerItemListReportCategoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PartnerItemProcessCompletedEventHandler(ByVal sender As Object, ByVal e As PartnerItemProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PartnerItemProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub LaundryGetDataByOrderNoCompletedEventHandler(ByVal sender As Object, ByVal e As LaundryGetDataByOrderNoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LaundryGetDataByOrderNoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetFeatureUserAccessCompletedEventHandler(ByVal sender As Object, ByVal e As GetFeatureUserAccessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFeatureUserAccessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDbInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetDbInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDbInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetReasonRemoveTrackNumInConsCompletedEventHandler(ByVal sender As Object, ByVal e As GetReasonRemoveTrackNumInConsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetReasonRemoveTrackNumInConsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetTrackNumInConsListOriCompletedEventHandler(ByVal sender As Object, ByVal e As GetTrackNumInConsListOriCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTrackNumInConsListOriCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetTrackNumInConsListDstCompletedEventHandler(ByVal sender As Object, ByVal e As GetTrackNumInConsListDstCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTrackNumInConsListDstCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetTrackNumInConsListCompletedEventHandler(ByVal sender As Object, ByVal e As GetTrackNumInConsListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTrackNumInConsListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TrackNumInConsRemoveOriCompletedEventHandler(ByVal sender As Object, ByVal e As TrackNumInConsRemoveOriCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TrackNumInConsRemoveOriCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TrackNumInConsRemoveDstCompletedEventHandler(ByVal sender As Object, ByVal e As TrackNumInConsRemoveDstCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TrackNumInConsRemoveDstCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TrackNumInConsRemoveCompletedEventHandler(ByVal sender As Object, ByVal e As TrackNumInConsRemoveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TrackNumInConsRemoveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ApprovalListCompletedEventHandler(ByVal sender As Object, ByVal e As ApprovalListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ApprovalListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ApprovalProcessCompletedEventHandler(ByVal sender As Object, ByVal e As ApprovalProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ApprovalProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub MitraShipperGetCompletedEventHandler(ByVal sender As Object, ByVal e As MitraShipperGetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MitraShipperGetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub MitraShipperSetCompletedEventHandler(ByVal sender As Object, ByVal e As MitraShipperSetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MitraShipperSetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub MitraServiceGetCompletedEventHandler(ByVal sender As Object, ByVal e As MitraServiceGetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MitraServiceGetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CustomTrackNumStockIndomaretStoreCompletedEventHandler(ByVal sender As Object, ByVal e As CustomTrackNumStockIndomaretStoreCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CustomTrackNumStockIndomaretStoreCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CustomTrackNumReleaseStockIndomaretStoreCompletedEventHandler(ByVal sender As Object, ByVal e As CustomTrackNumReleaseStockIndomaretStoreCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CustomTrackNumReleaseStockIndomaretStoreCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CustomTrackNumStockIndopaketHubCompletedEventHandler(ByVal sender As Object, ByVal e As CustomTrackNumStockIndopaketHubCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CustomTrackNumStockIndopaketHubCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ExtendSTIPeriodGetCostCompletedEventHandler(ByVal sender As Object, ByVal e As ExtendSTIPeriodGetCostCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExtendSTIPeriodGetCostCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ExtendSTIPeriodValidationCompletedEventHandler(ByVal sender As Object, ByVal e As ExtendSTIPeriodValidationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExtendSTIPeriodValidationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ExtendSTIPeriodProcessCompletedEventHandler(ByVal sender As Object, ByVal e As ExtendSTIPeriodProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExtendSTIPeriodProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub StoreDropScheduleCompletedEventHandler(ByVal sender As Object, ByVal e As StoreDropScheduleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class StoreDropScheduleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TestGeoCodingCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DeleteObsoleteDataCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub HadiahPromosiGetPromosiCompletedEventHandler(ByVal sender As Object, ByVal e As HadiahPromosiGetPromosiCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HadiahPromosiGetPromosiCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub HadiahPromosiCountTransactionCompletedEventHandler(ByVal sender As Object, ByVal e As HadiahPromosiCountTransactionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HadiahPromosiCountTransactionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub HadiahPromosiAssignCouponCompletedEventHandler(ByVal sender As Object, ByVal e As HadiahPromosiAssignCouponCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HadiahPromosiAssignCouponCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub HadiahPromosiSendCouponCompletedEventHandler(ByVal sender As Object, ByVal e As HadiahPromosiSendCouponCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HadiahPromosiSendCouponCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CustomerInputGetCategoryCompletedEventHandler(ByVal sender As Object, ByVal e As CustomerInputGetCategoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CustomerInputGetCategoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CustomerInputDataCompletedEventHandler(ByVal sender As Object, ByVal e As CustomerInputDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CustomerInputDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CheckTransactionDeliveryInfoCompletedEventHandler(ByVal sender As Object, ByVal e As CheckTransactionDeliveryInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckTransactionDeliveryInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateStatusDeliveryInfoCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateStatusDeliveryInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateStatusDeliveryInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CheckUsePinDeliveryInfoCompletedEventHandler(ByVal sender As Object, ByVal e As CheckUsePinDeliveryInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckUsePinDeliveryInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CaseReOrderGetOrderCompletedEventHandler(ByVal sender As Object, ByVal e As CaseReOrderGetOrderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CaseReOrderGetOrderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CaseReOrderCreateOrderCompletedEventHandler(ByVal sender As Object, ByVal e As CaseReOrderCreateOrderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CaseReOrderCreateOrderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ExpeditionAutoOrderPrintLabelv2CompletedEventHandler(ByVal sender As Object, ByVal e As ExpeditionAutoOrderPrintLabelv2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExpeditionAutoOrderPrintLabelv2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsResult() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ExpeditionAutoOrderPrintLabelCompletedEventHandler(ByVal sender As Object, ByVal e As ExpeditionAutoOrderPrintLabelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExpeditionAutoOrderPrintLabelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetExpeditionAutoOrderSettingCompletedEventHandler(ByVal sender As Object, ByVal e As GetExpeditionAutoOrderSettingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetExpeditionAutoOrderSettingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WHIListAutoOrderExpCompletedEventHandler(ByVal sender As Object, ByVal e As WHIListAutoOrderExpCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WHIListAutoOrderExpCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ExpeditionAutoOrderInsertTransactionCompletedEventHandler(ByVal sender As Object, ByVal e As ExpeditionAutoOrderInsertTransactionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExpeditionAutoOrderInsertTransactionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ExpeditionAutoOrderNewTrxCompletedEventHandler(ByVal sender As Object, ByVal e As ExpeditionAutoOrderNewTrxCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExpeditionAutoOrderNewTrxCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ExpeditionAutoOrderUpdateStatusHDSCompletedEventHandler(ByVal sender As Object, ByVal e As ExpeditionAutoOrderUpdateStatusHDSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExpeditionAutoOrderUpdateStatusHDSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ExpeditionAutoOrderUpdateStatusRTSCompletedEventHandler(ByVal sender As Object, ByVal e As ExpeditionAutoOrderUpdateStatusRTSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExpeditionAutoOrderUpdateStatusRTSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WHOListAutoOrderExpCompletedEventHandler(ByVal sender As Object, ByVal e As WHOListAutoOrderExpCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WHOListAutoOrderExpCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ExpeditionAutoOrderValidateConsCompletedEventHandler(ByVal sender As Object, ByVal e As ExpeditionAutoOrderValidateConsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExpeditionAutoOrderValidateConsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ExpeditionAutoOrderInsertConsCompletedEventHandler(ByVal sender As Object, ByVal e As ExpeditionAutoOrderInsertConsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExpeditionAutoOrderInsertConsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ExpeditionAutoOrderNewConsCompletedEventHandler(ByVal sender As Object, ByVal e As ExpeditionAutoOrderNewConsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExpeditionAutoOrderNewConsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ExpeditionAutoOrderUpdateStatusConsCompletedEventHandler(ByVal sender As Object, ByVal e As ExpeditionAutoOrderUpdateStatusConsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExpeditionAutoOrderUpdateStatusConsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ExpeditionAutoOrderResetHitCountCompletedEventHandler(ByVal sender As Object, ByVal e As ExpeditionAutoOrderResetHitCountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExpeditionAutoOrderResetHitCountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateHDSDownloadTemplateCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateHDSDownloadTemplateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateHDSDownloadTemplateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsTemplate() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateHDSValidateCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateHDSValidateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateHDSValidateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateHDSProcessCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateHDSProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateHDSProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DashboardPartnerPickupLastDataCompletedEventHandler(ByVal sender As Object, ByVal e As DashboardPartnerPickupLastDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DashboardPartnerPickupLastDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub StationOpenConsProcessCompletedEventHandler(ByVal sender As Object, ByVal e As StationOpenConsProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class StationOpenConsProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppCheckErrorConnectionCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppCheckErrorConnectionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppCheckErrorConnectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppUserSingleRegistrationCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppUserSingleRegistrationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppUserSingleRegistrationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppUserSingleLoginCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppUserSingleLoginCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppUserSingleLoginCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppUserForgotPasswordCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppUserForgotPasswordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppUserForgotPasswordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppUserUpdateCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppUserUpdateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppUserUpdateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppUserUpdateEmailPhoneCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppUserUpdateEmailPhoneCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppUserUpdateEmailPhoneCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppUserUpdateSendKeyCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppUserUpdateDirectSendKeyCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppUserUpdateResendKeyCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppUserUpdateResendKeyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppUserUpdateResendKeyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppUserDeleteEmailOrPhoneSendKeyCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppUserDeleteEmailOrPhoneDirectSendKeyCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppUserDeleteEmailOrPhoneResendKeyCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppUserDeleteEmailOrPhoneResendKeyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppUserDeleteEmailOrPhoneResendKeyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppUserGetInfoCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppUserGetInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppUserGetInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppDoorPickupSubDistrictAndPostalCodeListCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppDoorPickupSubDistrictAndPostalCodeListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppDoorPickupSubDistrictAndPostalCodeListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppDoorPickupDistrictListCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppDoorPickupDistrictListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppDoorPickupDistrictListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppDoorPickupSubDistrictListCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppDoorPickupSubDistrictListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppDoorPickupSubDistrictListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppDoorPickupPostalCodeListCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppDoorPickupPostalCodeListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppDoorPickupPostalCodeListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppCheckRateGetDistrictCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppCheckRateGetDistrictCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppCheckRateGetDistrictCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppCheckRateGetServiceListCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppCheckRateGetServiceListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppCheckRateGetServiceListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppCheckAddInsuranceCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppCheckAddInsuranceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppCheckAddInsuranceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppCheckAddTaxOriFTZCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppCheckAddTaxOriFTZCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppCheckAddTaxOriFTZCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppCheckAddTaxOriFTZV2CompletedEventHandler(ByVal sender As Object, ByVal e As WebAppCheckAddTaxOriFTZV2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppCheckAddTaxOriFTZV2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppGetSuggestionStoreCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppGetSuggestionStoreCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppGetSuggestionStoreCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppTrackingCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppTrackingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppTrackingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppTrackingMultiAWBCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppTrackingMultiAWBCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppTrackingMultiAWBCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppTransactionDraftCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppTransactionDraftCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppTransactionDraftCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppTransactionCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppTransactionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppTransactionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppTransactionHistoryCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppTransactionHistoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppTransactionHistoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppTransactionDetailCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppTransactionDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppTransactionDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppUserSetProfilePictureCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppUserSetProfilePictureCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppUserSetProfilePictureCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TestWriteFileCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TestReadFileCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppUserGetLabelCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppUserGetLabelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppUserGetLabelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppGetOfflineOTPCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppGetOfflineOTPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppGetOfflineOTPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppGetServiceDescriptionCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppGetServiceDescriptionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppGetServiceDescriptionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppUserActivationEmailCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppUserActivationSMSCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppUserActivationDirectSendEmailCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppUserActivationDirectSendSMSCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppUserActivationCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppUserActivationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppUserActivationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppUserActivationResendKeyCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppUserActivationResendKeyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppUserActivationResendKeyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppGetSuggestionConsigneeCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppGetSuggestionConsigneeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppGetSuggestionConsigneeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppGetSuggestionShipperCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppGetSuggestionShipperCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppGetSuggestionShipperCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppExtendSTIPeriodGetCostCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppExtendSTIPeriodGetCostCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppExtendSTIPeriodGetCostCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppExtendSTIPeriodValidationCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppExtendSTIPeriodValidationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppExtendSTIPeriodValidationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppExtendSTIPeriodProcessCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppExtendSTIPeriodProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppExtendSTIPeriodProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppConstCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppConstCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppConstCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppDailyPostalCodeListCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppDailyPostalCodeListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppDailyPostalCodeListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppDigAccIdNonActiveCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppDigAccIdNonActiveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppDigAccIdNonActiveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppSetUserActiveCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppSetUserActiveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppSetUserActiveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppPushStatusCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppPushStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppPushStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppDoorPickupReminderCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppDoorPickupReminderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppDoorPickupReminderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppPrintLabelCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppPrintLabelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppPrintLabelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppGetUserStatisticCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppGetUserStatisticCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppGetUserStatisticCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppUnsubscribeEmailCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppUnsubscribeEmailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppUnsubscribeEmailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebAppSubscribeEmailCompletedEventHandler(ByVal sender As Object, ByVal e As WebAppSubscribeEmailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebAppSubscribeEmailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CrmTrackingHistoryCompletedEventHandler(ByVal sender As Object, ByVal e As CrmTrackingHistoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CrmTrackingHistoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SellerIdamanRegistrationCompletedEventHandler(ByVal sender As Object, ByVal e As SellerIdamanRegistrationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SellerIdamanRegistrationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SellerIdamanRegistrationValidateKeyColumnsCompletedEventHandler(ByVal sender As Object, ByVal e As SellerIdamanRegistrationValidateKeyColumnsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SellerIdamanRegistrationValidateKeyColumnsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SellerIdaman_FinishedAccountNotificationCompletedEventHandler(ByVal sender As Object, ByVal e As SellerIdaman_FinishedAccountNotificationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SellerIdaman_FinishedAccountNotificationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SellerIdamanGetInfoCompletedEventHandler(ByVal sender As Object, ByVal e As SellerIdamanGetInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SellerIdamanGetInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WHOMonitorDCRCompletedEventHandler(ByVal sender As Object, ByVal e As WHOMonitorDCRCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WHOMonitorDCRCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub MonitorConsByDestinationCompletedEventHandler(ByVal sender As Object, ByVal e As MonitorConsByDestinationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MonitorConsByDestinationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PrintTrackNumUploadCompletedEventHandler(ByVal sender As Object, ByVal e As PrintTrackNumUploadCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PrintTrackNumUploadCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TrackNumUploadListCompletedEventHandler(ByVal sender As Object, ByVal e As TrackNumUploadListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TrackNumUploadListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TrackNumUploadQueueArvConCompletedEventHandler(ByVal sender As Object, ByVal e As TrackNumUploadQueueArvConCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TrackNumUploadQueueArvConCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TrackNumUploadProcessArvConCompletedEventHandler(ByVal sender As Object, ByVal e As TrackNumUploadProcessArvConCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TrackNumUploadProcessArvConCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TrackNumUploadEmailArvConCompletedEventHandler(ByVal sender As Object, ByVal e As TrackNumUploadEmailArvConCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TrackNumUploadEmailArvConCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PrintLabelUploadCompletedEventHandler(ByVal sender As Object, ByVal e As PrintLabelUploadCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PrintLabelUploadCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PrintLabelUploadAtOriCompletedEventHandler(ByVal sender As Object, ByVal e As PrintLabelUploadAtOriCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PrintLabelUploadAtOriCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub HubAccountPickupListGetCompletedEventHandler(ByVal sender As Object, ByVal e As HubAccountPickupListGetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HubAccountPickupListGetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub HubAccountPickupListSetCompletedEventHandler(ByVal sender As Object, ByVal e As HubAccountPickupListSetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HubAccountPickupListSetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DashboardHubAccountListGetCompletedEventHandler(ByVal sender As Object, ByVal e As DashboardHubAccountListGetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DashboardHubAccountListGetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DashboardHubAccountListSetCompletedEventHandler(ByVal sender As Object, ByVal e As DashboardHubAccountListSetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DashboardHubAccountListSetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetHubAccountListCompletedEventHandler(ByVal sender As Object, ByVal e As GetHubAccountListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetHubAccountListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SuratTugasKurirIPPGetStoreCompletedEventHandler(ByVal sender As Object, ByVal e As SuratTugasKurirIPPGetStoreCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SuratTugasKurirIPPGetStoreCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SuratTugasKurirIPPGetAWBListCompletedEventHandler(ByVal sender As Object, ByVal e As SuratTugasKurirIPPGetAWBListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SuratTugasKurirIPPGetAWBListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SuratTugasKurirIPPProcessCompletedEventHandler(ByVal sender As Object, ByVal e As SuratTugasKurirIPPProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SuratTugasKurirIPPProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SuratTugasKurirIPPValidateKeyCompletedEventHandler(ByVal sender As Object, ByVal e As SuratTugasKurirIPPValidateKeyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SuratTugasKurirIPPValidateKeyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub MissRouteGetConsCompletedEventHandler(ByVal sender As Object, ByVal e As MissRouteGetConsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MissRouteGetConsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub MissRouteProcessCompletedEventHandler(ByVal sender As Object, ByVal e As MissRouteProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MissRouteProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetOtherExpeditionAWBCompletedEventHandler(ByVal sender As Object, ByVal e As GetOtherExpeditionAWBCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOtherExpeditionAWBCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetOtherExpeditionAWBv2CompletedEventHandler(ByVal sender As Object, ByVal e As GetOtherExpeditionAWBv2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOtherExpeditionAWBv2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetOtherExpeditionRSCCompletedEventHandler(ByVal sender As Object, ByVal e As SetOtherExpeditionRSCCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetOtherExpeditionRSCCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetOtherExpeditionAWBCompletedEventHandler(ByVal sender As Object, ByVal e As SetOtherExpeditionAWBCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetOtherExpeditionAWBCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetOtherExpeditionRTSCompletedEventHandler(ByVal sender As Object, ByVal e As SetOtherExpeditionRTSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetOtherExpeditionRTSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CostOtherExpeditionAWBCoreCompletedEventHandler(ByVal sender As Object, ByVal e As CostOtherExpeditionAWBCoreCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CostOtherExpeditionAWBCoreCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub OtherExpeditionExpenseDataCompletedEventHandler(ByVal sender As Object, ByVal e As OtherExpeditionExpenseDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OtherExpeditionExpenseDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub OtherExpeditionExpenseUpdateCompletedEventHandler(ByVal sender As Object, ByVal e As OtherExpeditionExpenseUpdateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OtherExpeditionExpenseUpdateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub OtherExpeditionExpenseDeleteCompletedEventHandler(ByVal sender As Object, ByVal e As OtherExpeditionExpenseDeleteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class OtherExpeditionExpenseDeleteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ThirdPartyExpenseUpdateCompletedEventHandler(ByVal sender As Object, ByVal e As ThirdPartyExpenseUpdateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ThirdPartyExpenseUpdateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ThirdPartyExpenseDeleteCompletedEventHandler(ByVal sender As Object, ByVal e As ThirdPartyExpenseDeleteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ThirdPartyExpenseDeleteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ThreePLOtherExpensesDeleteCompletedEventHandler(ByVal sender As Object, ByVal e As ThreePLOtherExpensesDeleteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ThreePLOtherExpensesDeleteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ThreePLExpenseUpdateCompletedEventHandler(ByVal sender As Object, ByVal e As ThreePLExpenseUpdateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ThreePLExpenseUpdateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ThreePLExpenseDeleteCompletedEventHandler(ByVal sender As Object, ByVal e As ThreePLExpenseDeleteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ThreePLExpenseDeleteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PackingKayuSettingGeneralGetCompletedEventHandler(ByVal sender As Object, ByVal e As PackingKayuSettingGeneralGetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PackingKayuSettingGeneralGetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PackingKayuSettingGeneralSetCompletedEventHandler(ByVal sender As Object, ByVal e As PackingKayuSettingGeneralSetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PackingKayuSettingGeneralSetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PackingKayuSettingHubGetCompletedEventHandler(ByVal sender As Object, ByVal e As PackingKayuSettingHubGetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PackingKayuSettingHubGetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PackingKayuSettingHubSetCompletedEventHandler(ByVal sender As Object, ByVal e As PackingKayuSettingHubSetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PackingKayuSettingHubSetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAddTaxOriFtzHsCodeListCompletedEventHandler(ByVal sender As Object, ByVal e As GetAddTaxOriFtzHsCodeListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAddTaxOriFtzHsCodeListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAddTaxOriFtzHsCodeListV2CompletedEventHandler(ByVal sender As Object, ByVal e As GetAddTaxOriFtzHsCodeListV2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAddTaxOriFtzHsCodeListV2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetTransactionWeightDimensionCompletedEventHandler(ByVal sender As Object, ByVal e As GetTransactionWeightDimensionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTransactionWeightDimensionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetConsWeightCompletedEventHandler(ByVal sender As Object, ByVal e As GetConsWeightCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetConsWeightCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ExpeditionPickupListCompletedEventHandler(ByVal sender As Object, ByVal e As ExpeditionPickupListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExpeditionPickupListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ExpeditionPickupProcessCompletedEventHandler(ByVal sender As Object, ByVal e As ExpeditionPickupProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExpeditionPickupProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SNODraftListCompletedEventHandler(ByVal sender As Object, ByVal e As SNODraftListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SNODraftListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SNIDraftListCompletedEventHandler(ByVal sender As Object, ByVal e As SNIDraftListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SNIDraftListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TrackingQueryCompletedEventHandler(ByVal sender As Object, ByVal e As TrackingQueryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TrackingQueryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TrackingUpdateStatusCompletedEventHandler(ByVal sender As Object, ByVal e As TrackingUpdateStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TrackingUpdateStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TrackingReverseStatusCompletedEventHandler(ByVal sender As Object, ByVal e As TrackingReverseStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TrackingReverseStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CustomUpdateStatusCompletedEventHandler(ByVal sender As Object, ByVal e As CustomUpdateStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CustomUpdateStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetSuratJalanTokoCompletedEventHandler(ByVal sender As Object, ByVal e As GetSuratJalanTokoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSuratJalanTokoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetTandaTerimaTokoCompletedEventHandler(ByVal sender As Object, ByVal e As GetTandaTerimaTokoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTandaTerimaTokoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TrackingUploadStatusTemplateCompletedEventHandler(ByVal sender As Object, ByVal e As TrackingUploadStatusTemplateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TrackingUploadStatusTemplateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsTemplate() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TrackingUploadStatusValidateCompletedEventHandler(ByVal sender As Object, ByVal e As TrackingUploadStatusValidateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TrackingUploadStatusValidateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsValidasi() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TrackingUploadStatusProcessCompletedEventHandler(ByVal sender As Object, ByVal e As TrackingUploadStatusProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TrackingUploadStatusProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsProcess() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SendSMSNewV2CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CheckTransactionCompletedEventHandler(ByVal sender As Object, ByVal e As CheckTransactionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckTransactionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CheckExistingStatusCompletedEventHandler(ByVal sender As Object, ByVal e As CheckExistingStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckExistingStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SyncIGRCompletedEventHandler(ByVal sender As Object, ByVal e As SyncIGRCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SyncIGRCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub StoreStoRtsNotProcessedCompletedEventHandler(ByVal sender As Object, ByVal e As StoreStoRtsNotProcessedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class StoreStoRtsNotProcessedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TermsAndConditionsCompletedEventHandler(ByVal sender As Object, ByVal e As TermsAndConditionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TermsAndConditionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub NewTransactionTrialKaryawanCompletedEventHandler(ByVal sender As Object, ByVal e As NewTransactionTrialKaryawanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NewTransactionTrialKaryawanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TrialTransactionListCompletedEventHandler(ByVal sender As Object, ByVal e As TrialTransactionListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TrialTransactionListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TrialTransactionDetailCompletedEventHandler(ByVal sender As Object, ByVal e As TrialTransactionDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TrialTransactionDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SendWhatsAppCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WhatsAppSwitchToSMSCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AWBTTFSupplierGetListCompletedEventHandler(ByVal sender As Object, ByVal e As AWBTTFSupplierGetListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AWBTTFSupplierGetListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AWBTTFSupplierCreateAWBCompletedEventHandler(ByVal sender As Object, ByVal e As AWBTTFSupplierCreateAWBCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AWBTTFSupplierCreateAWBCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub StoreOfflineProcessCompletedEventHandler(ByVal sender As Object, ByVal e As StoreOfflineProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class StoreOfflineProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub StationOpenConsListCompletedEventHandler(ByVal sender As Object, ByVal e As StationOpenConsListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class StationOpenConsListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub StationOpenConsDetailListCompletedEventHandler(ByVal sender As Object, ByVal e As StationOpenConsDetailListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class StationOpenConsDetailListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RAIProcessCompletedEventHandler(ByVal sender As Object, ByVal e As RAIProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RAIProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DraftRAOListAllCompletedEventHandler(ByVal sender As Object, ByVal e As DraftRAOListAllCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DraftRAOListAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DraftRAOListDetailCompletedEventHandler(ByVal sender As Object, ByVal e As DraftRAOListDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DraftRAOListDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RAOProcessCompletedEventHandler(ByVal sender As Object, ByVal e As RAOProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RAOProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ConsListAllCompletedEventHandler(ByVal sender As Object, ByVal e As ConsListAllCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsListAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ConsNewCompletedEventHandler(ByVal sender As Object, ByVal e As ConsNewCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsNewCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ConsProcessCompletedEventHandler(ByVal sender As Object, ByVal e As ConsProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ConsListDetailCompletedEventHandler(ByVal sender As Object, ByVal e As ConsListDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsListDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ConsDetailUpdateCompletedEventHandler(ByVal sender As Object, ByVal e As ConsDetailUpdateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsDetailUpdateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ConsDetailAddDeleteCompletedEventHandler(ByVal sender As Object, ByVal e As ConsDetailAddDeleteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsDetailAddDeleteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDCPickupNoListCompletedEventHandler(ByVal sender As Object, ByVal e As GetDCPickupNoListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDCPickupNoListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WHOListDCCompletedEventHandler(ByVal sender As Object, ByVal e As WHOListDCCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WHOListDCCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WHOListExpCompletedEventHandler(ByVal sender As Object, ByVal e As WHOListExpCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WHOListExpCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WHOListDGACompletedEventHandler(ByVal sender As Object, ByVal e As WHOListDGACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WHOListDGACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WHIListDGACompletedEventHandler(ByVal sender As Object, ByVal e As WHIListDGACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WHIListDGACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WHOListTakakiCompletedEventHandler(ByVal sender As Object, ByVal e As WHOListTakakiCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WHOListTakakiCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WHIListTakakiCompletedEventHandler(ByVal sender As Object, ByVal e As WHIListTakakiCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WHIListTakakiCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub StationTerminalListCompletedEventHandler(ByVal sender As Object, ByVal e As StationTerminalListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class StationTerminalListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub HubTerminalListCompletedEventHandler(ByVal sender As Object, ByVal e As HubTerminalListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HubTerminalListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PickupAtHubListCompletedEventHandler(ByVal sender As Object, ByVal e As PickupAtHubListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PickupAtHubListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PickupAtHubAccountListCompletedEventHandler(ByVal sender As Object, ByVal e As PickupAtHubAccountListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PickupAtHubAccountListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub HubToHubAccountListCompletedEventHandler(ByVal sender As Object, ByVal e As HubToHubAccountListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HubToHubAccountListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WHIListHubToHubCompletedEventHandler(ByVal sender As Object, ByVal e As WHIListHubToHubCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WHIListHubToHubCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WHOListHubToHubCompletedEventHandler(ByVal sender As Object, ByVal e As WHOListHubToHubCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WHOListHubToHubCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CheckDstHUBCompletedEventHandler(ByVal sender As Object, ByVal e As CheckDstHUBCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckDstHUBCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WHOListHubToCustomerCompletedEventHandler(ByVal sender As Object, ByVal e As WHOListHubToCustomerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WHOListHubToCustomerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetSuratJalanByDriverIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetSuratJalanByDriverIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSuratJalanByDriverIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetSuratJalanDetailByDriverIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetSuratJalanDetailByDriverIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSuratJalanDetailByDriverIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetSuratJalanByDriverIDWithDetailCompletedEventHandler(ByVal sender As Object, ByVal e As GetSuratJalanByDriverIDWithDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSuratJalanByDriverIDWithDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CourierHandOverGetListCompletedEventHandler(ByVal sender As Object, ByVal e As CourierHandOverGetListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CourierHandOverGetListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CourierHandOverProcessCompletedEventHandler(ByVal sender As Object, ByVal e As CourierHandOverProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CourierHandOverProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetLokerListCompletedEventHandler(ByVal sender As Object, ByVal e As GetLokerListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLokerListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAwbInLokerListCompletedEventHandler(ByVal sender As Object, ByVal e As GetAwbInLokerListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAwbInLokerListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WHOListInstantPickupCompletedEventHandler(ByVal sender As Object, ByVal e As WHOListInstantPickupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WHOListInstantPickupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub InstantPickupReturListCompletedEventHandler(ByVal sender As Object, ByVal e As InstantPickupReturListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InstantPickupReturListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub InstantPickupReturProcessCompletedEventHandler(ByVal sender As Object, ByVal e As InstantPickupReturProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InstantPickupReturProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDaftarJemputByDriverIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetDaftarJemputByDriverIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDaftarJemputByDriverIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDaftarJemputDetailByDriverIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetDaftarJemputDetailByDriverIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDaftarJemputDetailByDriverIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDaftarJemputByDriverIDWithDetailCompletedEventHandler(ByVal sender As Object, ByVal e As GetDaftarJemputByDriverIDWithDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDaftarJemputByDriverIDWithDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDaftarBatalJemputByDriverIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetDaftarBatalJemputByDriverIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDaftarBatalJemputByDriverIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDaftarBatalJemputDetailByDriverIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetDaftarBatalJemputDetailByDriverIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDaftarBatalJemputDetailByDriverIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDaftarBatalJemputByDriverIDWithDetailCompletedEventHandler(ByVal sender As Object, ByVal e As GetDaftarBatalJemputByDriverIDWithDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDaftarBatalJemputByDriverIDWithDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetAccountAutoOrderThirdPartyCompletedEventHandler(ByVal sender As Object, ByVal e As SetAccountAutoOrderThirdPartyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetAccountAutoOrderThirdPartyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDaftarSamedayJemputByDriverIDWithDetailCompletedEventHandler(ByVal sender As Object, ByVal e As GetDaftarSamedayJemputByDriverIDWithDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDaftarSamedayJemputByDriverIDWithDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateReasonReturToDoorCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateReasonReturToDoorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateReasonReturToDoorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WHIRTSListCompletedEventHandler(ByVal sender As Object, ByVal e As WHIRTSListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WHIRTSListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WHIGroupingListCompletedEventHandler(ByVal sender As Object, ByVal e As WHIGroupingListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WHIGroupingListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WHIGroupingProcessCompletedEventHandler(ByVal sender As Object, ByVal e As WHIGroupingProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WHIGroupingProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WHIListExpSJCompletedEventHandler(ByVal sender As Object, ByVal e As WHIListExpSJCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WHIListExpSJCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WHIListExpDetailCompletedEventHandler(ByVal sender As Object, ByVal e As WHIListExpDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WHIListExpDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WHIListByDCPickupNoCompletedEventHandler(ByVal sender As Object, ByVal e As WHIListByDCPickupNoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WHIListByDCPickupNoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DCRequestGetNextPickupNoSampleCompletedEventHandler(ByVal sender As Object, ByVal e As DCRequestGetNextPickupNoSampleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DCRequestGetNextPickupNoSampleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DCPickingNewCompletedEventHandler(ByVal sender As Object, ByVal e As DCPickingNewCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DCPickingNewCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DCPickingDraftCompletedEventHandler(ByVal sender As Object, ByVal e As DCPickingDraftCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DCPickingDraftCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DCPickingFinalCompletedEventHandler(ByVal sender As Object, ByVal e As DCPickingFinalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DCPickingFinalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DCPickingRotiCompletedEventHandler(ByVal sender As Object, ByVal e As DCPickingRotiCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DCPickingRotiCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetRackInStoreListCompletedEventHandler(ByVal sender As Object, ByVal e As GetRackInStoreListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRackInStoreListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DCPickingManualCompletedEventHandler(ByVal sender As Object, ByVal e As DCPickingManualCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DCPickingManualCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RTSCreateCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RTSEmailCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub RTSShEmailCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetHubDeliveryListForRTSCompletedEventHandler(ByVal sender As Object, ByVal e As GetHubDeliveryListForRTSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetHubDeliveryListForRTSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CannotDopOnRtsDateCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SRRCreateCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SRREmailCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SRRShEmailCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub StationGroupingListCompletedEventHandler(ByVal sender As Object, ByVal e As StationGroupingListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class StationGroupingListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub StationGroupingConsNewCompletedEventHandler(ByVal sender As Object, ByVal e As StationGroupingConsNewCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class StationGroupingConsNewCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub StationGroupingDetailListCompletedEventHandler(ByVal sender As Object, ByVal e As StationGroupingDetailListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class StationGroupingDetailListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub StationGroupingConsUpdateCompletedEventHandler(ByVal sender As Object, ByVal e As StationGroupingConsUpdateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class StationGroupingConsUpdateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub StationGroupingConsProcessCompletedEventHandler(ByVal sender As Object, ByVal e As StationGroupingConsProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class StationGroupingConsProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DispatchListHubCompletedEventHandler(ByVal sender As Object, ByVal e As DispatchListHubCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DispatchListHubCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DispatchProcessHubCompletedEventHandler(ByVal sender As Object, ByVal e As DispatchProcessHubCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DispatchProcessHubCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DispatchPrintSJHubCompletedEventHandler(ByVal sender As Object, ByVal e As DispatchPrintSJHubCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DispatchPrintSJHubCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DispatchReturListHubCompletedEventHandler(ByVal sender As Object, ByVal e As DispatchReturListHubCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DispatchReturListHubCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ArriveDriverListHubCompletedEventHandler(ByVal sender As Object, ByVal e As ArriveDriverListHubCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ArriveDriverListHubCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ArriveDriverProcessHubCompletedEventHandler(ByVal sender As Object, ByVal e As ArriveDriverProcessHubCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ArriveDriverProcessHubCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ArriveListHubCompletedEventHandler(ByVal sender As Object, ByVal e As ArriveListHubCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ArriveListHubCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ArriveProcessHubCompletedEventHandler(ByVal sender As Object, ByVal e As ArriveProcessHubCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ArriveProcessHubCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub HubGroupingListCompletedEventHandler(ByVal sender As Object, ByVal e As HubGroupingListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HubGroupingListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub HubConsPickupListCompletedEventHandler(ByVal sender As Object, ByVal e As HubConsPickupListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HubConsPickupListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub HubConsIncomingListCompletedEventHandler(ByVal sender As Object, ByVal e As HubConsIncomingListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HubConsIncomingListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub EComNewPickupListCompletedEventHandler(ByVal sender As Object, ByVal e As EComNewPickupListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EComNewPickupListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub EcomNewHubPickupListCompletedEventHandler(ByVal sender As Object, ByVal e As EcomNewHubPickupListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EcomNewHubPickupListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub EcomNewHubPickupListV2CompletedEventHandler(ByVal sender As Object, ByVal e As EcomNewHubPickupListV2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EcomNewHubPickupListV2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoOrderNewTransactionDeliveryManCompletedEventHandler(ByVal sender As Object, ByVal e As AutoOrderNewTransactionDeliveryManCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoOrderNewTransactionDeliveryManCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoOrderNewTransactionCompletedEventHandler(ByVal sender As Object, ByVal e As AutoOrderNewTransactionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoOrderNewTransactionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoOrderNewTransactionMultiDropCompletedEventHandler(ByVal sender As Object, ByVal e As AutoOrderNewTransactionMultiDropCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoOrderNewTransactionMultiDropCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoOrderThirdPartyUpdTrxDeliveryManCompletedEventHandler(ByVal sender As Object, ByVal e As AutoOrderThirdPartyUpdTrxDeliveryManCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoOrderThirdPartyUpdTrxDeliveryManCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoOrderUpdateStatusPUQv2CompletedEventHandler(ByVal sender As Object, ByVal e As AutoOrderUpdateStatusPUQv2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoOrderUpdateStatusPUQv2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoOrderUpdateStatusPUQCompletedEventHandler(ByVal sender As Object, ByVal e As AutoOrderUpdateStatusPUQCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoOrderUpdateStatusPUQCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoOrderUpdateStatusPULv2CompletedEventHandler(ByVal sender As Object, ByVal e As AutoOrderUpdateStatusPULv2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoOrderUpdateStatusPULv2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoOrderUpdateStatusHDVv2CompletedEventHandler(ByVal sender As Object, ByVal e As AutoOrderUpdateStatusHDVv2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoOrderUpdateStatusHDVv2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoOrderUpdateStatusHDVCompletedEventHandler(ByVal sender As Object, ByVal e As AutoOrderUpdateStatusHDVCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoOrderUpdateStatusHDVCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoOrderUpdateStatusHDSv2CompletedEventHandler(ByVal sender As Object, ByVal e As AutoOrderUpdateStatusHDSv2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoOrderUpdateStatusHDSv2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoOrderUpdateStatusHDSCompletedEventHandler(ByVal sender As Object, ByVal e As AutoOrderUpdateStatusHDSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoOrderUpdateStatusHDSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoOrderUpdateStatusOOCRTSCompletedEventHandler(ByVal sender As Object, ByVal e As AutoOrderUpdateStatusOOCRTSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoOrderUpdateStatusOOCRTSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoOrderUpdateStatusRTSFLRCompletedEventHandler(ByVal sender As Object, ByVal e As AutoOrderUpdateStatusRTSFLRCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoOrderUpdateStatusRTSFLRCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoOrderCancelOrderCompletedEventHandler(ByVal sender As Object, ByVal e As AutoOrderCancelOrderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoOrderCancelOrderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoOrderAdjustStatusRTSCompletedEventHandler(ByVal sender As Object, ByVal e As AutoOrderAdjustStatusRTSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoOrderAdjustStatusRTSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAddInsuranceCompletedEventHandler(ByVal sender As Object, ByVal e As GetAddInsuranceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAddInsuranceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub BatchTrackNumReserveCompletedEventHandler(ByVal sender As Object, ByVal e As BatchTrackNumReserveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BatchTrackNumReserveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub BatchTrackNumCreateCompletedEventHandler(ByVal sender As Object, ByVal e As BatchTrackNumCreateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BatchTrackNumCreateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DispatchListCompletedEventHandler(ByVal sender As Object, ByVal e As DispatchListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DispatchListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DispatchProcessCompletedEventHandler(ByVal sender As Object, ByVal e As DispatchProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DispatchProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DispatchPrintSJCompletedEventHandler(ByVal sender As Object, ByVal e As DispatchPrintSJCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DispatchPrintSJCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DispatchReturListCompletedEventHandler(ByVal sender As Object, ByVal e As DispatchReturListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DispatchReturListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PickupCheckPINCompletedEventHandler(ByVal sender As Object, ByVal e As PickupCheckPINCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PickupCheckPINCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PickupRequestCompletedEventHandler(ByVal sender As Object, ByVal e As PickupRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PickupRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PickupProcessedCompletedEventHandler(ByVal sender As Object, ByVal e As PickupProcessedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PickupProcessedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ArriveDriverListCompletedEventHandler(ByVal sender As Object, ByVal e As ArriveDriverListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ArriveDriverListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ArriveDriverProcessCompletedEventHandler(ByVal sender As Object, ByVal e As ArriveDriverProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ArriveDriverProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ArriveListCompletedEventHandler(ByVal sender As Object, ByVal e As ArriveListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ArriveListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ArriveProcessCompletedEventHandler(ByVal sender As Object, ByVal e As ArriveProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ArriveProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateRackListCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateRackListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateRackListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdatePJBHubPostalCodeListCompletedEventHandler(ByVal sender As Object, ByVal e As UpdatePJBHubPostalCodeListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdatePJBHubPostalCodeListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateHubPostalCodeListCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateHubPostalCodeListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateHubPostalCodeListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateAccountHubPostalCodeListCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateAccountHubPostalCodeListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateAccountHubPostalCodeListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateInstantHubPostalCodeListCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateInstantHubPostalCodeListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateInstantHubPostalCodeListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdatePoinkuHubPostalCodeListCompletedEventHandler(ByVal sender As Object, ByVal e As UpdatePoinkuHubPostalCodeListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdatePoinkuHubPostalCodeListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateCourierDeliveryCostList_ObsoleteCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCourierDeliveryCostList_ObsoleteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCourierDeliveryCostList_ObsoleteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateCourierAddressDeliveryCostListCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCourierAddressDeliveryCostListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCourierAddressDeliveryCostListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateCourierDooringDeliveryCostListCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCourierDooringDeliveryCostListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCourierDooringDeliveryCostListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateCourierPickupDeliveryCostListCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCourierPickupDeliveryCostListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCourierPickupDeliveryCostListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateCourierFleetRentalCostListCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCourierFleetRentalCostListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCourierFleetRentalCostListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateHubExpeditionListCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateHubExpeditionListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateHubExpeditionListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateLastMileExpeditionListCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateLastMileExpeditionListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateLastMileExpeditionListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetHubProcessTypeExpeditionCompletedEventHandler(ByVal sender As Object, ByVal e As GetHubProcessTypeExpeditionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetHubProcessTypeExpeditionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetHubProcessTypeExpeditionCompletedEventHandler(ByVal sender As Object, ByVal e As SetHubProcessTypeExpeditionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetHubProcessTypeExpeditionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetMandatoryExpeditionConsCompletedEventHandler(ByVal sender As Object, ByVal e As GetMandatoryExpeditionConsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMandatoryExpeditionConsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetMandatoryExpeditionConsCompletedEventHandler(ByVal sender As Object, ByVal e As SetMandatoryExpeditionConsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetMandatoryExpeditionConsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub FleetRentalUpdateStatusCompletedEventHandler(ByVal sender As Object, ByVal e As FleetRentalUpdateStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FleetRentalUpdateStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAccountFleetRentalVehicleTypeListCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountFleetRentalVehicleTypeListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountFleetRentalVehicleTypeListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetAccountFleetRentalVehicleTypeListCompletedEventHandler(ByVal sender As Object, ByVal e As SetAccountFleetRentalVehicleTypeListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetAccountFleetRentalVehicleTypeListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetFleetRentalVehicleTypeListByAccountCompletedEventHandler(ByVal sender As Object, ByVal e As GetFleetRentalVehicleTypeListByAccountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFleetRentalVehicleTypeListByAccountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub NewAccountDownloadTemplateCompletedEventHandler(ByVal sender As Object, ByVal e As NewAccountDownloadTemplateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NewAccountDownloadTemplateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsTemplate() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub NewAccountValidateCompletedEventHandler(ByVal sender As Object, ByVal e As NewAccountValidateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NewAccountValidateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub NewAccountCreateCompletedEventHandler(ByVal sender As Object, ByVal e As NewAccountCreateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NewAccountCreateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub NewAccountDeleteCompletedEventHandler(ByVal sender As Object, ByVal e As NewAccountDeleteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NewAccountDeleteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub NewAccountCopyCompletedEventHandler(ByVal sender As Object, ByVal e As NewAccountCopyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NewAccountCopyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub NewAccountSearchByKeywordCompletedEventHandler(ByVal sender As Object, ByVal e As NewAccountSearchByKeywordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NewAccountSearchByKeywordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub NewAccountGetInfoCompletedEventHandler(ByVal sender As Object, ByVal e As NewAccountGetInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NewAccountGetInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsTemplate() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub NewAccountUpdateCompletedEventHandler(ByVal sender As Object, ByVal e As NewAccountUpdateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NewAccountUpdateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub NewAccountSupplierAddressCodeCompletedEventHandler(ByVal sender As Object, ByVal e As NewAccountSupplierAddressCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NewAccountSupplierAddressCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetSuppAddrCodeListCompletedEventHandler(ByVal sender As Object, ByVal e As GetSuppAddrCodeListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSuppAddrCodeListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub NewExpeditionDownloadTemplateCompletedEventHandler(ByVal sender As Object, ByVal e As NewExpeditionDownloadTemplateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NewExpeditionDownloadTemplateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsTemplate() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub NewExpeditionValidateCompletedEventHandler(ByVal sender As Object, ByVal e As NewExpeditionValidateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NewExpeditionValidateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub NewExpeditionCreateCompletedEventHandler(ByVal sender As Object, ByVal e As NewExpeditionCreateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NewExpeditionCreateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoCopyAndReturnCreateAWBCompletedEventHandler(ByVal sender As Object, ByVal e As AutoCopyAndReturnCreateAWBCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoCopyAndReturnCreateAWBCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoCopyAndReturnGetTrackNumListCompletedEventHandler(ByVal sender As Object, ByVal e As AutoCopyAndReturnGetTrackNumListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoCopyAndReturnGetTrackNumListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetCopyAndReturnTrackNumListCompletedEventHandler(ByVal sender As Object, ByVal e As GetCopyAndReturnTrackNumListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCopyAndReturnTrackNumListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetCopyAndReturnAccountListCompletedEventHandler(ByVal sender As Object, ByVal e As GetCopyAndReturnAccountListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCopyAndReturnAccountListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateSavingRevenueListCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateSavingRevenueListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateSavingRevenueListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateETAListCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateETAListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateETAListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateRateAreaCustomAccountListCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateRateAreaCustomAccountListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateRateAreaCustomAccountListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateRateCustomListCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateRateCustomListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateRateCustomListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateRateDCCustomListCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateRateDCCustomListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateRateDCCustomListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub Update3PLRateCustomListCompletedEventHandler(ByVal sender As Object, ByVal e As Update3PLRateCustomListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Update3PLRateCustomListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateRateSellerCategoryAreaCustomListCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateRateSellerCategoryAreaCustomListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateRateSellerCategoryAreaCustomListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateRateSellerSubCategoryAreaCustomListCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateRateSellerSubCategoryAreaCustomListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateRateSellerSubCategoryAreaCustomListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateRateRentalFleetListCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateRateRentalFleetListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateRateRentalFleetListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DraftRAIListCompletedEventHandler(ByVal sender As Object, ByVal e As DraftRAIListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DraftRAIListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetRegionHubListCompletedEventHandler(ByVal sender As Object, ByVal e As SetRegionHubListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetRegionHubListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetRegionListCompletedEventHandler(ByVal sender As Object, ByVal e As GetRegionListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRegionListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetStationListCompletedEventHandler(ByVal sender As Object, ByVal e As GetStationListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStationListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetStationPartnerListCompletedEventHandler(ByVal sender As Object, ByVal e As GetStationPartnerListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStationPartnerListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetStationRouteListCompletedEventHandler(ByVal sender As Object, ByVal e As GetStationRouteListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStationRouteListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAccountPickupAddressListCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountPickupAddressListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountPickupAddressListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetAccountPickupAddressListCompletedEventHandler(ByVal sender As Object, ByVal e As SetAccountPickupAddressListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetAccountPickupAddressListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAccountPickupAddressListByPAccountCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountPickupAddressListByPAccountCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountPickupAddressListByPAccountCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAccountPickupListByStationCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountPickupListByStationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountPickupListByStationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAccountPickupListByStationZoneCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountPickupListByStationZoneCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountPickupListByStationZoneCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetStationHubListCompletedEventHandler(ByVal sender As Object, ByVal e As GetStationHubListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStationHubListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetHubListCompletedEventHandler(ByVal sender As Object, ByVal e As GetHubListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetHubListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetHubPartnerListCompletedEventHandler(ByVal sender As Object, ByVal e As GetHubPartnerListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetHubPartnerListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetRackListCompletedEventHandler(ByVal sender As Object, ByVal e As GetRackListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRackListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetHubExpeditionListCompletedEventHandler(ByVal sender As Object, ByVal e As GetHubExpeditionListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetHubExpeditionListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetReprintKeywordCompletedEventHandler(ByVal sender As Object, ByVal e As GetReprintKeywordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetReprintKeywordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetIncomingSuratJalanListCompletedEventHandler(ByVal sender As Object, ByVal e As GetIncomingSuratJalanListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetIncomingSuratJalanListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub QueryToolsCompletedEventHandler(ByVal sender As Object, ByVal e As QueryToolsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class QueryToolsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub QueryCallProcedureDatatableCompletedEventHandler(ByVal sender As Object, ByVal e As QueryCallProcedureDatatableCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class QueryCallProcedureDatatableCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PettyCashSubCategoryListCompletedEventHandler(ByVal sender As Object, ByVal e As PettyCashSubCategoryListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PettyCashSubCategoryListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PettyCashReportListCompletedEventHandler(ByVal sender As Object, ByVal e As PettyCashReportListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PettyCashReportListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PettyCashHubExpenseAddCompletedEventHandler(ByVal sender As Object, ByVal e As PettyCashHubExpenseAddCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PettyCashHubExpenseAddCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PettyCashHubExpenseDeleteCompletedEventHandler(ByVal sender As Object, ByVal e As PettyCashHubExpenseDeleteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PettyCashHubExpenseDeleteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PettyCashHubExpenseApprovalCompletedEventHandler(ByVal sender As Object, ByVal e As PettyCashHubExpenseApprovalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PettyCashHubExpenseApprovalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PettyCashHubExpenseDeleteRecordCompletedEventHandler(ByVal sender As Object, ByVal e As PettyCashHubExpenseDeleteRecordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PettyCashHubExpenseDeleteRecordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PettyCashHubFindRecordCompletedEventHandler(ByVal sender As Object, ByVal e As PettyCashHubFindRecordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PettyCashHubFindRecordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PettyCashHubFinalizeRecordCompletedEventHandler(ByVal sender As Object, ByVal e As PettyCashHubFinalizeRecordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PettyCashHubFinalizeRecordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PettyCashHubProcessJournalCompletedEventHandler(ByVal sender As Object, ByVal e As PettyCashHubProcessJournalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PettyCashHubProcessJournalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DocumentUploadCategoryListCompletedEventHandler(ByVal sender As Object, ByVal e As DocumentUploadCategoryListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DocumentUploadCategoryListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DocumentUploadAddFileCompletedEventHandler(ByVal sender As Object, ByVal e As DocumentUploadAddFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DocumentUploadAddFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DocumentUploadFindRecordCompletedEventHandler(ByVal sender As Object, ByVal e As DocumentUploadFindRecordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DocumentUploadFindRecordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TanyaDataITTokoCategoryListCompletedEventHandler(ByVal sender As Object, ByVal e As TanyaDataITTokoCategoryListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TanyaDataITTokoCategoryListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TanyaDataITTokoGetDataCompletedEventHandler(ByVal sender As Object, ByVal e As TanyaDataITTokoGetDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TanyaDataITTokoGetDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub TanyaDataITTokoEmailCompletedEventHandler(ByVal sender As Object, ByVal e As TanyaDataITTokoEmailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TanyaDataITTokoEmailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetLoginByUserAndTypeCompletedEventHandler(ByVal sender As Object, ByVal e As GetLoginByUserAndTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLoginByUserAndTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateLoginByUserAndTypeCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateLoginByUserAndTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateLoginByUserAndTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAccountSupplierIndomaretListCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountSupplierIndomaretListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountSupplierIndomaretListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateAccountSupplierIndomaretCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateAccountSupplierIndomaretCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateAccountSupplierIndomaretCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetReversePickupOAwbCompletedEventHandler(ByVal sender As Object, ByVal e As GetReversePickupOAwbCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetReversePickupOAwbCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub NewTransactionDraftBySalesOrderCompletedEventHandler(ByVal sender As Object, ByVal e As NewTransactionDraftBySalesOrderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NewTransactionDraftBySalesOrderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub NewTransactionBySalesOrderCompletedEventHandler(ByVal sender As Object, ByVal e As NewTransactionBySalesOrderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NewTransactionBySalesOrderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub NewTransactionDraftECommerceCompletedEventHandler(ByVal sender As Object, ByVal e As NewTransactionDraftECommerceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NewTransactionDraftECommerceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub NewTransactionECommerceCompletedEventHandler(ByVal sender As Object, ByVal e As NewTransactionECommerceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NewTransactionECommerceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateTransactionDeliveryInfoCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateTransactionDeliveryInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateTransactionDeliveryInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub NewTransactionBatchCompletedEventHandler(ByVal sender As Object, ByVal e As NewTransactionBatchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class NewTransactionBatchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ExpireNewTransactionCompletedEventHandler(ByVal sender As Object, ByVal e As ExpireNewTransactionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExpireNewTransactionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetTransactionDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetTransactionDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTransactionDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateTransactionCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateTransactionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateTransactionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetTransactionUpdateLogChangeTypeCompletedEventHandler(ByVal sender As Object, ByVal e As GetTransactionUpdateLogChangeTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTransactionUpdateLogChangeTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoOrderSwitchKeepFallbackCompletedEventHandler(ByVal sender As Object, ByVal e As AutoOrderSwitchKeepFallbackCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoOrderSwitchKeepFallbackCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoOrderSwitchKeepFallbackExpressCompletedEventHandler(ByVal sender As Object, ByVal e As AutoOrderSwitchKeepFallbackExpressCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoOrderSwitchKeepFallbackExpressCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoOrderSwitchKeepFallbackRegularCompletedEventHandler(ByVal sender As Object, ByVal e As AutoOrderSwitchKeepFallbackRegularCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoOrderSwitchKeepFallbackRegularCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoOrderSwitchKeepFallbackSamedayCompletedEventHandler(ByVal sender As Object, ByVal e As AutoOrderSwitchKeepFallbackSamedayCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoOrderSwitchKeepFallbackSamedayCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoOrderSwitchKeepFallbackSamedayMobilCompletedEventHandler(ByVal sender As Object, ByVal e As AutoOrderSwitchKeepFallbackSamedayMobilCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoOrderSwitchKeepFallbackSamedayMobilCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoOrderDoorPickupCompletedEventHandler(ByVal sender As Object, ByVal e As AutoOrderDoorPickupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoOrderDoorPickupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoOrderDoorPickupUpdateStatusHOSCompletedEventHandler(ByVal sender As Object, ByVal e As AutoOrderDoorPickupUpdateStatusHOSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoOrderDoorPickupUpdateStatusHOSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub AutoOrderNewTransactionV2CompletedEventHandler(ByVal sender As Object, ByVal e As AutoOrderNewTransactionV2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AutoOrderNewTransactionV2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateFavoriteAddressCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateFavoriteAddressCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateFavoriteAddressCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub InsertFavoriteAddressDraftCompletedEventHandler(ByVal sender As Object, ByVal e As InsertFavoriteAddressDraftCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertFavoriteAddressDraftCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub InsertFavoriteAddressCompletedEventHandler(ByVal sender As Object, ByVal e As InsertFavoriteAddressCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertFavoriteAddressCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetFavoriteAddressListCompletedEventHandler(ByVal sender As Object, ByVal e As GetFavoriteAddressListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFavoriteAddressListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetFavoriteAddressListIPPHOCompletedEventHandler(ByVal sender As Object, ByVal e As GetFavoriteAddressListIPPHOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFavoriteAddressListIPPHOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebExpGetHubListCompletedEventHandler(ByVal sender As Object, ByVal e As WebExpGetHubListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebExpGetHubListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebExpGetExpeditionListCompletedEventHandler(ByVal sender As Object, ByVal e As WebExpGetExpeditionListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebExpGetExpeditionListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WebExpGetExpeditionSLAListCompletedEventHandler(ByVal sender As Object, ByVal e As WebExpGetExpeditionSLAListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebExpGetExpeditionSLAListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetTransactionConstCompletedEventHandler(ByVal sender As Object, ByVal e As GetTransactionConstCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTransactionConstCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetPackageCategoryListCompletedEventHandler(ByVal sender As Object, ByVal e As GetPackageCategoryListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPackageCategoryListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDeliveryCostWeightDimensionCompletedEventHandler(ByVal sender As Object, ByVal e As GetDeliveryCostWeightDimensionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDeliveryCostWeightDimensionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDeliveryCostFleetRentalCompletedEventHandler(ByVal sender As Object, ByVal e As GetDeliveryCostFleetRentalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDeliveryCostFleetRentalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDeliveryCostCoreCompletedEventHandler(ByVal sender As Object, ByVal e As GetDeliveryCostCoreCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDeliveryCostCoreCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDeliveryCostCompletedEventHandler(ByVal sender As Object, ByVal e As GetDeliveryCostCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDeliveryCostCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Double
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Double)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDeliveryCostV2CompletedEventHandler(ByVal sender As Object, ByVal e As GetDeliveryCostV2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDeliveryCostV2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Double
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Double)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDeliveryServiceListCompletedEventHandler(ByVal sender As Object, ByVal e As GetDeliveryServiceListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDeliveryServiceListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDeliveryServiceListV2CompletedEventHandler(ByVal sender As Object, ByVal e As GetDeliveryServiceListV2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDeliveryServiceListV2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetTransactionListCompletedEventHandler(ByVal sender As Object, ByVal e As GetTransactionListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTransactionListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetConsigneeHistoryCompletedEventHandler(ByVal sender As Object, ByVal e As GetConsigneeHistoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetConsigneeHistoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetIndomaretStoreListCompletedEventHandler(ByVal sender As Object, ByVal e As GetIndomaretStoreListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetIndomaretStoreListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetIndomaretStoreLocationListCompletedEventHandler(ByVal sender As Object, ByVal e As GetIndomaretStoreLocationListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetIndomaretStoreLocationListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetIndomaretDCListCompletedEventHandler(ByVal sender As Object, ByVal e As GetIndomaretDCListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetIndomaretDCListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetIndomaretDCDepoListCompletedEventHandler(ByVal sender As Object, ByVal e As GetIndomaretDCDepoListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetIndomaretDCDepoListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetSuggestionStoreCompletedEventHandler(ByVal sender As Object, ByVal e As GetSuggestionStoreCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSuggestionStoreCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetPropinsiListCompletedEventHandler(ByVal sender As Object, ByVal e As GetPropinsiListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPropinsiListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetKotaKabupatenListCompletedEventHandler(ByVal sender As Object, ByVal e As GetKotaKabupatenListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetKotaKabupatenListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetKecamatanListCompletedEventHandler(ByVal sender As Object, ByVal e As GetKecamatanListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetKecamatanListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetKelurahanListCompletedEventHandler(ByVal sender As Object, ByVal e As GetKelurahanListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetKelurahanListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetKodePosListCompletedEventHandler(ByVal sender As Object, ByVal e As GetKodePosListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetKodePosListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetPostalCodeListByKeywordCompletedEventHandler(ByVal sender As Object, ByVal e As GetPostalCodeListByKeywordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPostalCodeListByKeywordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDCListCompletedEventHandler(ByVal sender As Object, ByVal e As GetDCListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDCListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDCDGAAccountListCompletedEventHandler(ByVal sender As Object, ByVal e As GetDCDGAAccountListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDCDGAAccountListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDCDGAAccountListDetailCompletedEventHandler(ByVal sender As Object, ByVal e As GetDCDGAAccountListDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDCDGAAccountListDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDCDGAListCompletedEventHandler(ByVal sender As Object, ByVal e As GetDCDGAListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDCDGAListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub IndomaretStoreClosedListCompletedEventHandler(ByVal sender As Object, ByVal e As IndomaretStoreClosedListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IndomaretStoreClosedListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub IndomaretStoreClosedOpenCompletedEventHandler(ByVal sender As Object, ByVal e As IndomaretStoreClosedOpenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IndomaretStoreClosedOpenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub MotherstoreValidationCompletedEventHandler(ByVal sender As Object, ByVal e As MotherstoreValidationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MotherstoreValidationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetIndogrosirStoreListCompletedEventHandler(ByVal sender As Object, ByVal e As GetIndogrosirStoreListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetIndogrosirStoreListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetMisterDonutStoreListCompletedEventHandler(ByVal sender As Object, ByVal e As GetMisterDonutStoreListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMisterDonutStoreListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetPointCoffeeStandAloneStoreListCompletedEventHandler(ByVal sender As Object, ByVal e As GetPointCoffeeStandAloneStoreListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPointCoffeeStandAloneStoreListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetRegionHubListCompletedEventHandler(ByVal sender As Object, ByVal e As GetRegionHubListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRegionHubListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DOPEmailCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CDVEmailCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CDSEmailCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CDSSenderEmailCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CDSConfirmationGetTransactionCompletedEventHandler(ByVal sender As Object, ByVal e As CDSConfirmationGetTransactionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CDSConfirmationGetTransactionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CDSConfirmationSetConfirmationCompletedEventHandler(ByVal sender As Object, ByVal e As CDSConfirmationSetConfirmationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CDSConfirmationSetConfirmationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PINListRequestCompletedEventHandler(ByVal sender As Object, ByVal e As PINListRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PINListRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WHOOriShEmailCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub WHOOriEmailCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ComplainEmailCompletedEventHandler(ByVal sender As Object, ByVal e As ComplainEmailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ComplainEmailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetServiceTypeListCompletedEventHandler(ByVal sender As Object, ByVal e As GetServiceTypeListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetServiceTypeListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetCountryListCompletedEventHandler(ByVal sender As Object, ByVal e As GetCountryListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCountryListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetProvinceListCompletedEventHandler(ByVal sender As Object, ByVal e As GetProvinceListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProvinceListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetCityListCompletedEventHandler(ByVal sender As Object, ByVal e As GetCityListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCityListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetSubDistrictAndPostalCodeListCompletedEventHandler(ByVal sender As Object, ByVal e As GetSubDistrictAndPostalCodeListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSubDistrictAndPostalCodeListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDistrictListCompletedEventHandler(ByVal sender As Object, ByVal e As GetDistrictListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDistrictListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetSubDistrictListCompletedEventHandler(ByVal sender As Object, ByVal e As GetSubDistrictListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSubDistrictListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetPostalCodeListCompletedEventHandler(ByVal sender As Object, ByVal e As GetPostalCodeListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPostalCodeListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetPostalCodeCompletedEventHandler(ByVal sender As Object, ByVal e As GetPostalCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPostalCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetSubDistrictListByPostalCodeCompletedEventHandler(ByVal sender As Object, ByVal e As GetSubDistrictListByPostalCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSubDistrictListByPostalCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDistrictByKeywordCompletedEventHandler(ByVal sender As Object, ByVal e As GetDistrictByKeywordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDistrictByKeywordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetCountryListByKeywordCompletedEventHandler(ByVal sender As Object, ByVal e As GetCountryListByKeywordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCountryListByKeywordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetPackageConditionListCompletedEventHandler(ByVal sender As Object, ByVal e As GetPackageConditionListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPackageConditionListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetThirdPartyListCompletedEventHandler(ByVal sender As Object, ByVal e As GetThirdPartyListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetThirdPartyListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetExpeditionListCompletedEventHandler(ByVal sender As Object, ByVal e As GetExpeditionListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetExpeditionListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetExpeditionListMatrixCompletedEventHandler(ByVal sender As Object, ByVal e As GetExpeditionListMatrixCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetExpeditionListMatrixCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsExpedition() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetJalurEkspedisiListCompletedEventHandler(ByVal sender As Object, ByVal e As GetJalurEkspedisiListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetJalurEkspedisiListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAccountCategoryListCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountCategoryListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountCategoryListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAccountSubCategoryListCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountSubCategoryListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountSubCategoryListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetECommerceListWithCategoryAndSubCategoryCompletedEventHandler(ByVal sender As Object, ByVal e As GetECommerceListWithCategoryAndSubCategoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetECommerceListWithCategoryAndSubCategoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetECommerceListCompletedEventHandler(ByVal sender As Object, ByVal e As GetECommerceListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetECommerceListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetECommerceListByFinTypeCompletedEventHandler(ByVal sender As Object, ByVal e As GetECommerceListByFinTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetECommerceListByFinTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetVehicleTypeListCompletedEventHandler(ByVal sender As Object, ByVal e As GetVehicleTypeListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetVehicleTypeListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetTrackingStatusListCompletedEventHandler(ByVal sender As Object, ByVal e As GetTrackingStatusListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTrackingStatusListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetTrackingStatusListForReportCompletedEventHandler(ByVal sender As Object, ByVal e As GetTrackingStatusListForReportCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTrackingStatusListForReportCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetTrackingStatusMappingListCompletedEventHandler(ByVal sender As Object, ByVal e As GetTrackingStatusMappingListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTrackingStatusMappingListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAccountDCListCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountDCListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountDCListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetAccountDCListCompletedEventHandler(ByVal sender As Object, ByVal e As SetAccountDCListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetAccountDCListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAccountCityTruckingListCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountCityTruckingListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountCityTruckingListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetAccountCityTruckingListCompletedEventHandler(ByVal sender As Object, ByVal e As SetAccountCityTruckingListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetAccountCityTruckingListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAccountCityDoorListCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountCityDoorListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountCityDoorListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetAccountCityDoorListCompletedEventHandler(ByVal sender As Object, ByVal e As SetAccountCityDoorListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetAccountCityDoorListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAccountCityDoorToPickupListCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountCityDoorToPickupListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountCityDoorToPickupListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetAccountCityDoorToPickupListCompletedEventHandler(ByVal sender As Object, ByVal e As SetAccountCityDoorToPickupListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetAccountCityDoorToPickupListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAccountCityPickupListCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountCityPickupListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountCityPickupListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetAccountCityPickupListCompletedEventHandler(ByVal sender As Object, ByVal e As SetAccountCityPickupListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetAccountCityPickupListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAccountSettingTypeListCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountSettingTypeListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountSettingTypeListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAccountSettingCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountSettingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountSettingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetAccountSettingCompletedEventHandler(ByVal sender As Object, ByVal e As SetAccountSettingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetAccountSettingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAccountMaxWeightCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountMaxWeightCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountMaxWeightCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetAccountMaxWeightCompletedEventHandler(ByVal sender As Object, ByVal e As SetAccountMaxWeightCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetAccountMaxWeightCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAccountMaxWeight3PLCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountMaxWeight3PLCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountMaxWeight3PLCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetAccountMaxWeight3PLCompletedEventHandler(ByVal sender As Object, ByVal e As SetAccountMaxWeight3PLCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetAccountMaxWeight3PLCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAccountMaxPckValueCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountMaxPckValueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountMaxPckValueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetAccountMaxPckValueCompletedEventHandler(ByVal sender As Object, ByVal e As SetAccountMaxPckValueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetAccountMaxPckValueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAccountMaxCodValueCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountMaxCodValueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountMaxCodValueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetAccountMaxCodValueCompletedEventHandler(ByVal sender As Object, ByVal e As SetAccountMaxCodValueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetAccountMaxCodValueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAccountMaxDimensionCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountMaxDimensionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountMaxDimensionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetAccountMaxDimensionCompletedEventHandler(ByVal sender As Object, ByVal e As SetAccountMaxDimensionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetAccountMaxDimensionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAccountMaxAndSpcDimensionCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountMaxAndSpcDimensionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountMaxAndSpcDimensionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetAccountMaxAndSpcDimensionCompletedEventHandler(ByVal sender As Object, ByVal e As SetAccountMaxAndSpcDimensionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetAccountMaxAndSpcDimensionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAccountMaxAndSpcDimension3PLCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountMaxAndSpcDimension3PLCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountMaxAndSpcDimension3PLCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAccountCountryListCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountCountryListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountCountryListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetAccountCountryListCompletedEventHandler(ByVal sender As Object, ByVal e As SetAccountCountryListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetAccountCountryListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetAccountCoAddrNoNumCompletedEventHandler(ByVal sender As Object, ByVal e As GetAccountCoAddrNoNumCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAccountCoAddrNoNumCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub SetAccountCoAddrNoNumCompletedEventHandler(ByVal sender As Object, ByVal e As SetAccountCoAddrNoNumCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetAccountCoAddrNoNumCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetEWalletListCompletedEventHandler(ByVal sender As Object, ByVal e As GetEWalletListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEWalletListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetBankListCompletedEventHandler(ByVal sender As Object, ByVal e As GetBankListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBankListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetBankListJsonCompletedEventHandler(ByVal sender As Object, ByVal e As GetBankListJsonCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBankListJsonCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetComplainListCompletedEventHandler(ByVal sender As Object, ByVal e As GetComplainListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetComplainListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetNewTracknumKeywordListCompletedEventHandler(ByVal sender As Object, ByVal e As GetNewTracknumKeywordListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetNewTracknumKeywordListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetDoorPickupSlotCompletedEventHandler(ByVal sender As Object, ByVal e As GetDoorPickupSlotCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDoorPickupSlotCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub UpdateFavoriteAddressDraftCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateFavoriteAddressDraftCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateFavoriteAddressDraftCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub A_WSDevelopmentCompletedEventHandler(ByVal sender As Object, ByVal e As A_WSDevelopmentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class A_WSDevelopmentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ChekConnectionCompletedEventHandler(ByVal sender As Object, ByVal e As ChekConnectionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ChekConnectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub ValidasiIPCompletedEventHandler(ByVal sender As Object, ByVal e As ValidasiIPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidasiIPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub LoginCompletedEventHandler(ByVal sender As Object, ByVal e As LoginCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoginCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub LoginV2CompletedEventHandler(ByVal sender As Object, ByVal e As LoginV2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoginV2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub LoginResetPasswordCompletedEventHandler(ByVal sender As Object, ByVal e As LoginResetPasswordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoginResetPasswordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub LoginPasswordUpdateCompletedEventHandler(ByVal sender As Object, ByVal e As LoginPasswordUpdateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoginPasswordUpdateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub LoginPasswordUpdateV2CompletedEventHandler(ByVal sender As Object, ByVal e As LoginPasswordUpdateV2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoginPasswordUpdateV2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub CheckUserLoginCompletedEventHandler(ByVal sender As Object, ByVal e As CheckUserLoginCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckUserLoginCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetWebProgConstCompletedEventHandler(ByVal sender As Object, ByVal e As GetWebProgConstCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetWebProgConstCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub GetFolderLabelCompletedEventHandler(ByVal sender As Object, ByVal e As GetFolderLabelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFolderLabelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub EmailLabelCompletedEventHandler(ByVal sender As Object, ByVal e As EmailLabelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmailLabelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PrintLabelTaxCompletedEventHandler(ByVal sender As Object, ByVal e As PrintLabelTaxCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PrintLabelTaxCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PrintConsLabelCompletedEventHandler(ByVal sender As Object, ByVal e As PrintConsLabelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PrintConsLabelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PrintLabelCompletedEventHandler(ByVal sender As Object, ByVal e As PrintLabelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PrintLabelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PrintLabelByRefNoCompletedEventHandler(ByVal sender As Object, ByVal e As PrintLabelByRefNoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PrintLabelByRefNoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PrintLabelByOrderNoCompletedEventHandler(ByVal sender As Object, ByVal e As PrintLabelByOrderNoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PrintLabelByOrderNoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PrintLabelIndogrosirWalkInCompletedEventHandler(ByVal sender As Object, ByVal e As PrintLabelIndogrosirWalkInCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PrintLabelIndogrosirWalkInCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PrintTandaTerimaIndogrosirWalkInCompletedEventHandler(ByVal sender As Object, ByVal e As PrintTandaTerimaIndogrosirWalkInCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PrintTandaTerimaIndogrosirWalkInCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PrintSuratJalanCompletedEventHandler(ByVal sender As Object, ByVal e As PrintSuratJalanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PrintSuratJalanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub EmailSuratJalanCompletedEventHandler(ByVal sender As Object, ByVal e As EmailSuratJalanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmailSuratJalanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PrintSuratJemputBarangCompletedEventHandler(ByVal sender As Object, ByVal e As PrintSuratJemputBarangCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PrintSuratJemputBarangCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PrintAwb3plByIPPCompletedEventHandler(ByVal sender As Object, ByVal e As PrintAwb3plByIPPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PrintAwb3plByIPPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PrintSerahPackingListCompletedEventHandler(ByVal sender As Object, ByVal e As PrintSerahPackingListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PrintSerahPackingListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PrintTandaTerimaCompletedEventHandler(ByVal sender As Object, ByVal e As PrintTandaTerimaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PrintTandaTerimaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub InsertTandaTerimaConsCompletedEventHandler(ByVal sender As Object, ByVal e As InsertTandaTerimaConsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertTandaTerimaConsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PrintSuratTugasCompletedEventHandler(ByVal sender As Object, ByVal e As PrintSuratTugasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PrintSuratTugasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PrintTerminalCompletedEventHandler(ByVal sender As Object, ByVal e As PrintTerminalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PrintTerminalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PrintExpeditionPickupCompletedEventHandler(ByVal sender As Object, ByVal e As PrintExpeditionPickupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PrintExpeditionPickupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PINCreateCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PINEmailCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PINResendCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub PINRequestCompletedEventHandler(ByVal sender As Object, ByVal e As PINRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PINRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DROEmailCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")>  _
    Public Delegate Sub DROShEmailCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
End Namespace
